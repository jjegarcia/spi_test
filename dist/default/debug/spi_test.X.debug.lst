

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Jan 18 14:22:19 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,space=0,delta=2
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Generated 25/01/2024 GMT
    35                           ; 
    36                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F15244 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0008                     bsr             equ	8
    69     0005                     fsr0h           equ	5
    70     0004                     fsr0l           equ	4
    71     0007                     fsr1h           equ	7
    72     0006                     fsr1l           equ	6
    73     0000                     indf            equ	0
    74     0000                     indf0           equ	0
    75     0001                     indf1           equ	1
    76     000B                     intcon          equ	11
    77     0002                     pc              equ	2
    78     0002                     pcl             equ	2
    79     000A                     pclath          equ	10
    80     0003                     status          equ	3
    81     0009                     wreg            equ	9
    82     0000                     INDF0           equ	0	;# 
    83     0001                     INDF1           equ	1	;# 
    84     0002                     PCL             equ	2	;# 
    85     0003                     STATUS          equ	3	;# 
    86     0004                     FSR0L           equ	4	;# 
    87     0005                     FSR0H           equ	5	;# 
    88     0006                     FSR1L           equ	6	;# 
    89     0007                     FSR1H           equ	7	;# 
    90     0008                     BSR             equ	8	;# 
    91     0009                     WREG            equ	9	;# 
    92     000A                     PCLATH          equ	10	;# 
    93     000B                     INTCON          equ	11	;# 
    94     000C                     PORTA           equ	12	;# 
    95     000D                     PORTB           equ	13	;# 
    96     000E                     PORTC           equ	14	;# 
    97     0012                     TRISA           equ	18	;# 
    98     0013                     TRISB           equ	19	;# 
    99     0014                     TRISC           equ	20	;# 
   100     0018                     LATA            equ	24	;# 
   101     0019                     LATB            equ	25	;# 
   102     001A                     LATC            equ	26	;# 
   103     009A                     CPCON           equ	154	;# 
   104     009B                     ADRES           equ	155	;# 
   105     009B                     ADRESL          equ	155	;# 
   106     009C                     ADRESH          equ	156	;# 
   107     009D                     ADCON0          equ	157	;# 
   108     009E                     ADCON1          equ	158	;# 
   109     009F                     ADACT           equ	159	;# 
   110     010C                     RB4I2C          equ	268	;# 
   111     010D                     RB6I2C          equ	269	;# 
   112     0119                     RC1REG          equ	281	;# 
   113     011A                     TX1REG          equ	282	;# 
   114     011B                     SP1BRG          equ	283	;# 
   115     011B                     SP1BRGL         equ	283	;# 
   116     011C                     SP1BRGH         equ	284	;# 
   117     011D                     RC1STA          equ	285	;# 
   118     011E                     TX1STA          equ	286	;# 
   119     011F                     BAUD1CON        equ	287	;# 
   120     018C                     SSP1BUF         equ	396	;# 
   121     018D                     SSP1ADD         equ	397	;# 
   122     018E                     SSP1MSK         equ	398	;# 
   123     018F                     SSP1STAT        equ	399	;# 
   124     0190                     SSP1CON1        equ	400	;# 
   125     0191                     SSP1CON2        equ	401	;# 
   126     0192                     SSP1CON3        equ	402	;# 
   127     020C                     TMR1            equ	524	;# 
   128     020C                     TMR1L           equ	524	;# 
   129     020D                     TMR1H           equ	525	;# 
   130     020E                     T1CON           equ	526	;# 
   131     020E                     TMR1CON         equ	526	;# 
   132     020F                     T1GCON          equ	527	;# 
   133     020F                     TMR1GCON        equ	527	;# 
   134     0210                     T1GATE          equ	528	;# 
   135     0210                     TMR1GATE        equ	528	;# 
   136     0211                     T1CLK           equ	529	;# 
   137     0211                     TMR1CLK         equ	529	;# 
   138     0211                     PR1             equ	529	;# 
   139     028C                     T2TMR           equ	652	;# 
   140     028C                     TMR2            equ	652	;# 
   141     028D                     T2PR            equ	653	;# 
   142     028D                     PR2             equ	653	;# 
   143     028E                     T2CON           equ	654	;# 
   144     028F                     T2HLT           equ	655	;# 
   145     0290                     T2CLKCON        equ	656	;# 
   146     0291                     T2RST           equ	657	;# 
   147     030C                     CCPR1           equ	780	;# 
   148     030C                     CCPR1L          equ	780	;# 
   149     030D                     CCPR1H          equ	781	;# 
   150     030E                     CCP1CON         equ	782	;# 
   151     030F                     CCP1CAP         equ	783	;# 
   152     0310                     CCPR2           equ	784	;# 
   153     0310                     CCPR2L          equ	784	;# 
   154     0311                     CCPR2H          equ	785	;# 
   155     0312                     CCP2CON         equ	786	;# 
   156     0313                     CCP2CAP         equ	787	;# 
   157     0314                     PWM3DC          equ	788	;# 
   158     0314                     PWM3DCL         equ	788	;# 
   159     0315                     PWM3DCH         equ	789	;# 
   160     0316                     PWM3CON         equ	790	;# 
   161     0318                     PWM4DC          equ	792	;# 
   162     0318                     PWM4DCL         equ	792	;# 
   163     0319                     PWM4DCH         equ	793	;# 
   164     031A                     PWM4CON         equ	794	;# 
   165     059C                     TMR0L           equ	1436	;# 
   166     059C                     TMR0            equ	1436	;# 
   167     059D                     TMR0H           equ	1437	;# 
   168     059D                     PR0             equ	1437	;# 
   169     059E                     T0CON0          equ	1438	;# 
   170     059F                     T0CON1          equ	1439	;# 
   171     070C                     PIR0            equ	1804	;# 
   172     070D                     PIR1            equ	1805	;# 
   173     070E                     PIR2            equ	1806	;# 
   174     0716                     PIE0            equ	1814	;# 
   175     0717                     PIE1            equ	1815	;# 
   176     0718                     PIE2            equ	1816	;# 
   177     080C                     WDTCON          equ	2060	;# 
   178     0811                     BORCON          equ	2065	;# 
   179     0813                     PCON0           equ	2067	;# 
   180     0814                     PCON1           equ	2068	;# 
   181     081A                     NVMADR          equ	2074	;# 
   182     081A                     NVMADRL         equ	2074	;# 
   183     081B                     NVMADRH         equ	2075	;# 
   184     081C                     NVMDAT          equ	2076	;# 
   185     081C                     NVMDATL         equ	2076	;# 
   186     081D                     NVMDATH         equ	2077	;# 
   187     081E                     NVMCON1         equ	2078	;# 
   188     081F                     NVMCON2         equ	2079	;# 
   189     088E                     OSCCON          equ	2190	;# 
   190     0890                     OSCSTAT         equ	2192	;# 
   191     0891                     OSCEN           equ	2193	;# 
   192     0892                     OSCTUNE         equ	2194	;# 
   193     0893                     OSCFRQ          equ	2195	;# 
   194     090C                     FVRCON          equ	2316	;# 
   195     1E8F                     PPSLOCK         equ	7823	;# 
   196     1E90                     INTPPS          equ	7824	;# 
   197     1E91                     T0CKIPPS        equ	7825	;# 
   198     1E92                     T1CKIPPS        equ	7826	;# 
   199     1E93                     T1GPPS          equ	7827	;# 
   200     1E9C                     T2INPPS         equ	7836	;# 
   201     1EA1                     CCP1PPS         equ	7841	;# 
   202     1EA2                     CCP2PPS         equ	7842	;# 
   203     1EC3                     ADACTPPS        equ	7875	;# 
   204     1EC5                     SSP1CLKPPS      equ	7877	;# 
   205     1EC6                     SSP1DATPPS      equ	7878	;# 
   206     1EC7                     SSP1SSPPS       equ	7879	;# 
   207     1ECB                     RX1PPS          equ	7883	;# 
   208     1ECB                     RX1DTPPS        equ	7883	;# 
   209     1ECB                     RXPPS           equ	7883	;# 
   210     1ECC                     CK1PPS          equ	7884	;# 
   211     1ECC                     TX1CKPPS        equ	7884	;# 
   212     1ECC                     CKPPS           equ	7884	;# 
   213     1F10                     RA0PPS          equ	7952	;# 
   214     1F11                     RA1PPS          equ	7953	;# 
   215     1F12                     RA2PPS          equ	7954	;# 
   216     1F14                     RA4PPS          equ	7956	;# 
   217     1F15                     RA5PPS          equ	7957	;# 
   218     1F1C                     RB4PPS          equ	7964	;# 
   219     1F1D                     RB5PPS          equ	7965	;# 
   220     1F1E                     RB6PPS          equ	7966	;# 
   221     1F1F                     RB7PPS          equ	7967	;# 
   222     1F20                     RC0PPS          equ	7968	;# 
   223     1F21                     RC1PPS          equ	7969	;# 
   224     1F22                     RC2PPS          equ	7970	;# 
   225     1F23                     RC3PPS          equ	7971	;# 
   226     1F24                     RC4PPS          equ	7972	;# 
   227     1F25                     RC5PPS          equ	7973	;# 
   228     1F26                     RC6PPS          equ	7974	;# 
   229     1F27                     RC7PPS          equ	7975	;# 
   230     1F38                     ANSELA          equ	7992	;# 
   231     1F39                     WPUA            equ	7993	;# 
   232     1F3A                     ODCONA          equ	7994	;# 
   233     1F3B                     SLRCONA         equ	7995	;# 
   234     1F3C                     INLVLA          equ	7996	;# 
   235     1F3D                     IOCAP           equ	7997	;# 
   236     1F3E                     IOCAN           equ	7998	;# 
   237     1F3F                     IOCAF           equ	7999	;# 
   238     1F43                     ANSELB          equ	8003	;# 
   239     1F44                     WPUB            equ	8004	;# 
   240     1F45                     ODCONB          equ	8005	;# 
   241     1F46                     SLRCONB         equ	8006	;# 
   242     1F47                     INLVLB          equ	8007	;# 
   243     1F48                     IOCBP           equ	8008	;# 
   244     1F49                     IOCBN           equ	8009	;# 
   245     1F4A                     IOCBF           equ	8010	;# 
   246     1F4E                     ANSELC          equ	8014	;# 
   247     1F4F                     WPUC            equ	8015	;# 
   248     1F50                     ODCONC          equ	8016	;# 
   249     1F51                     SLRCONC         equ	8017	;# 
   250     1F52                     INLVLC          equ	8018	;# 
   251     1F53                     IOCCP           equ	8019	;# 
   252     1F54                     IOCCN           equ	8020	;# 
   253     1F55                     IOCCF           equ	8021	;# 
   254     1FE4                     STATUS_SHAD     equ	8164	;# 
   255     1FE5                     WREG_SHAD       equ	8165	;# 
   256     1FE6                     BSR_SHAD        equ	8166	;# 
   257     1FE7                     PCLATH_SHAD     equ	8167	;# 
   258     1FE8                     FSR0_SHAD       equ	8168	;# 
   259     1FE8                     FSR0L_SHAD      equ	8168	;# 
   260     1FE9                     FSR0H_SHAD      equ	8169	;# 
   261     1FEA                     FSR1L_SHAD      equ	8170	;# 
   262     1FEB                     FSR1H_SHAD      equ	8171	;# 
   263     1FED                     STKPTR          equ	8173	;# 
   264     1FEE                     TOSL            equ	8174	;# 
   265     1FEF                     TOSH            equ	8175	;# 
   266     0000                     INDF0           equ	0	;# 
   267     0001                     INDF1           equ	1	;# 
   268     0002                     PCL             equ	2	;# 
   269     0003                     STATUS          equ	3	;# 
   270     0004                     FSR0L           equ	4	;# 
   271     0005                     FSR0H           equ	5	;# 
   272     0006                     FSR1L           equ	6	;# 
   273     0007                     FSR1H           equ	7	;# 
   274     0008                     BSR             equ	8	;# 
   275     0009                     WREG            equ	9	;# 
   276     000A                     PCLATH          equ	10	;# 
   277     000B                     INTCON          equ	11	;# 
   278     000C                     PORTA           equ	12	;# 
   279     000D                     PORTB           equ	13	;# 
   280     000E                     PORTC           equ	14	;# 
   281     0012                     TRISA           equ	18	;# 
   282     0013                     TRISB           equ	19	;# 
   283     0014                     TRISC           equ	20	;# 
   284     0018                     LATA            equ	24	;# 
   285     0019                     LATB            equ	25	;# 
   286     001A                     LATC            equ	26	;# 
   287     009A                     CPCON           equ	154	;# 
   288     009B                     ADRES           equ	155	;# 
   289     009B                     ADRESL          equ	155	;# 
   290     009C                     ADRESH          equ	156	;# 
   291     009D                     ADCON0          equ	157	;# 
   292     009E                     ADCON1          equ	158	;# 
   293     009F                     ADACT           equ	159	;# 
   294     010C                     RB4I2C          equ	268	;# 
   295     010D                     RB6I2C          equ	269	;# 
   296     0119                     RC1REG          equ	281	;# 
   297     011A                     TX1REG          equ	282	;# 
   298     011B                     SP1BRG          equ	283	;# 
   299     011B                     SP1BRGL         equ	283	;# 
   300     011C                     SP1BRGH         equ	284	;# 
   301     011D                     RC1STA          equ	285	;# 
   302     011E                     TX1STA          equ	286	;# 
   303     011F                     BAUD1CON        equ	287	;# 
   304     018C                     SSP1BUF         equ	396	;# 
   305     018D                     SSP1ADD         equ	397	;# 
   306     018E                     SSP1MSK         equ	398	;# 
   307     018F                     SSP1STAT        equ	399	;# 
   308     0190                     SSP1CON1        equ	400	;# 
   309     0191                     SSP1CON2        equ	401	;# 
   310     0192                     SSP1CON3        equ	402	;# 
   311     020C                     TMR1            equ	524	;# 
   312     020C                     TMR1L           equ	524	;# 
   313     020D                     TMR1H           equ	525	;# 
   314     020E                     T1CON           equ	526	;# 
   315     020E                     TMR1CON         equ	526	;# 
   316     020F                     T1GCON          equ	527	;# 
   317     020F                     TMR1GCON        equ	527	;# 
   318     0210                     T1GATE          equ	528	;# 
   319     0210                     TMR1GATE        equ	528	;# 
   320     0211                     T1CLK           equ	529	;# 
   321     0211                     TMR1CLK         equ	529	;# 
   322     0211                     PR1             equ	529	;# 
   323     028C                     T2TMR           equ	652	;# 
   324     028C                     TMR2            equ	652	;# 
   325     028D                     T2PR            equ	653	;# 
   326     028D                     PR2             equ	653	;# 
   327     028E                     T2CON           equ	654	;# 
   328     028F                     T2HLT           equ	655	;# 
   329     0290                     T2CLKCON        equ	656	;# 
   330     0291                     T2RST           equ	657	;# 
   331     030C                     CCPR1           equ	780	;# 
   332     030C                     CCPR1L          equ	780	;# 
   333     030D                     CCPR1H          equ	781	;# 
   334     030E                     CCP1CON         equ	782	;# 
   335     030F                     CCP1CAP         equ	783	;# 
   336     0310                     CCPR2           equ	784	;# 
   337     0310                     CCPR2L          equ	784	;# 
   338     0311                     CCPR2H          equ	785	;# 
   339     0312                     CCP2CON         equ	786	;# 
   340     0313                     CCP2CAP         equ	787	;# 
   341     0314                     PWM3DC          equ	788	;# 
   342     0314                     PWM3DCL         equ	788	;# 
   343     0315                     PWM3DCH         equ	789	;# 
   344     0316                     PWM3CON         equ	790	;# 
   345     0318                     PWM4DC          equ	792	;# 
   346     0318                     PWM4DCL         equ	792	;# 
   347     0319                     PWM4DCH         equ	793	;# 
   348     031A                     PWM4CON         equ	794	;# 
   349     059C                     TMR0L           equ	1436	;# 
   350     059C                     TMR0            equ	1436	;# 
   351     059D                     TMR0H           equ	1437	;# 
   352     059D                     PR0             equ	1437	;# 
   353     059E                     T0CON0          equ	1438	;# 
   354     059F                     T0CON1          equ	1439	;# 
   355     070C                     PIR0            equ	1804	;# 
   356     070D                     PIR1            equ	1805	;# 
   357     070E                     PIR2            equ	1806	;# 
   358     0716                     PIE0            equ	1814	;# 
   359     0717                     PIE1            equ	1815	;# 
   360     0718                     PIE2            equ	1816	;# 
   361     080C                     WDTCON          equ	2060	;# 
   362     0811                     BORCON          equ	2065	;# 
   363     0813                     PCON0           equ	2067	;# 
   364     0814                     PCON1           equ	2068	;# 
   365     081A                     NVMADR          equ	2074	;# 
   366     081A                     NVMADRL         equ	2074	;# 
   367     081B                     NVMADRH         equ	2075	;# 
   368     081C                     NVMDAT          equ	2076	;# 
   369     081C                     NVMDATL         equ	2076	;# 
   370     081D                     NVMDATH         equ	2077	;# 
   371     081E                     NVMCON1         equ	2078	;# 
   372     081F                     NVMCON2         equ	2079	;# 
   373     088E                     OSCCON          equ	2190	;# 
   374     0890                     OSCSTAT         equ	2192	;# 
   375     0891                     OSCEN           equ	2193	;# 
   376     0892                     OSCTUNE         equ	2194	;# 
   377     0893                     OSCFRQ          equ	2195	;# 
   378     090C                     FVRCON          equ	2316	;# 
   379     1E8F                     PPSLOCK         equ	7823	;# 
   380     1E90                     INTPPS          equ	7824	;# 
   381     1E91                     T0CKIPPS        equ	7825	;# 
   382     1E92                     T1CKIPPS        equ	7826	;# 
   383     1E93                     T1GPPS          equ	7827	;# 
   384     1E9C                     T2INPPS         equ	7836	;# 
   385     1EA1                     CCP1PPS         equ	7841	;# 
   386     1EA2                     CCP2PPS         equ	7842	;# 
   387     1EC3                     ADACTPPS        equ	7875	;# 
   388     1EC5                     SSP1CLKPPS      equ	7877	;# 
   389     1EC6                     SSP1DATPPS      equ	7878	;# 
   390     1EC7                     SSP1SSPPS       equ	7879	;# 
   391     1ECB                     RX1PPS          equ	7883	;# 
   392     1ECB                     RX1DTPPS        equ	7883	;# 
   393     1ECB                     RXPPS           equ	7883	;# 
   394     1ECC                     CK1PPS          equ	7884	;# 
   395     1ECC                     TX1CKPPS        equ	7884	;# 
   396     1ECC                     CKPPS           equ	7884	;# 
   397     1F10                     RA0PPS          equ	7952	;# 
   398     1F11                     RA1PPS          equ	7953	;# 
   399     1F12                     RA2PPS          equ	7954	;# 
   400     1F14                     RA4PPS          equ	7956	;# 
   401     1F15                     RA5PPS          equ	7957	;# 
   402     1F1C                     RB4PPS          equ	7964	;# 
   403     1F1D                     RB5PPS          equ	7965	;# 
   404     1F1E                     RB6PPS          equ	7966	;# 
   405     1F1F                     RB7PPS          equ	7967	;# 
   406     1F20                     RC0PPS          equ	7968	;# 
   407     1F21                     RC1PPS          equ	7969	;# 
   408     1F22                     RC2PPS          equ	7970	;# 
   409     1F23                     RC3PPS          equ	7971	;# 
   410     1F24                     RC4PPS          equ	7972	;# 
   411     1F25                     RC5PPS          equ	7973	;# 
   412     1F26                     RC6PPS          equ	7974	;# 
   413     1F27                     RC7PPS          equ	7975	;# 
   414     1F38                     ANSELA          equ	7992	;# 
   415     1F39                     WPUA            equ	7993	;# 
   416     1F3A                     ODCONA          equ	7994	;# 
   417     1F3B                     SLRCONA         equ	7995	;# 
   418     1F3C                     INLVLA          equ	7996	;# 
   419     1F3D                     IOCAP           equ	7997	;# 
   420     1F3E                     IOCAN           equ	7998	;# 
   421     1F3F                     IOCAF           equ	7999	;# 
   422     1F43                     ANSELB          equ	8003	;# 
   423     1F44                     WPUB            equ	8004	;# 
   424     1F45                     ODCONB          equ	8005	;# 
   425     1F46                     SLRCONB         equ	8006	;# 
   426     1F47                     INLVLB          equ	8007	;# 
   427     1F48                     IOCBP           equ	8008	;# 
   428     1F49                     IOCBN           equ	8009	;# 
   429     1F4A                     IOCBF           equ	8010	;# 
   430     1F4E                     ANSELC          equ	8014	;# 
   431     1F4F                     WPUC            equ	8015	;# 
   432     1F50                     ODCONC          equ	8016	;# 
   433     1F51                     SLRCONC         equ	8017	;# 
   434     1F52                     INLVLC          equ	8018	;# 
   435     1F53                     IOCCP           equ	8019	;# 
   436     1F54                     IOCCN           equ	8020	;# 
   437     1F55                     IOCCF           equ	8021	;# 
   438     1FE4                     STATUS_SHAD     equ	8164	;# 
   439     1FE5                     WREG_SHAD       equ	8165	;# 
   440     1FE6                     BSR_SHAD        equ	8166	;# 
   441     1FE7                     PCLATH_SHAD     equ	8167	;# 
   442     1FE8                     FSR0_SHAD       equ	8168	;# 
   443     1FE8                     FSR0L_SHAD      equ	8168	;# 
   444     1FE9                     FSR0H_SHAD      equ	8169	;# 
   445     1FEA                     FSR1L_SHAD      equ	8170	;# 
   446     1FEB                     FSR1H_SHAD      equ	8171	;# 
   447     1FED                     STKPTR          equ	8173	;# 
   448     1FEE                     TOSL            equ	8174	;# 
   449     1FEF                     TOSH            equ	8175	;# 
   450     0000                     INDF0           equ	0	;# 
   451     0001                     INDF1           equ	1	;# 
   452     0002                     PCL             equ	2	;# 
   453     0003                     STATUS          equ	3	;# 
   454     0004                     FSR0L           equ	4	;# 
   455     0005                     FSR0H           equ	5	;# 
   456     0006                     FSR1L           equ	6	;# 
   457     0007                     FSR1H           equ	7	;# 
   458     0008                     BSR             equ	8	;# 
   459     0009                     WREG            equ	9	;# 
   460     000A                     PCLATH          equ	10	;# 
   461     000B                     INTCON          equ	11	;# 
   462     000C                     PORTA           equ	12	;# 
   463     000D                     PORTB           equ	13	;# 
   464     000E                     PORTC           equ	14	;# 
   465     0012                     TRISA           equ	18	;# 
   466     0013                     TRISB           equ	19	;# 
   467     0014                     TRISC           equ	20	;# 
   468     0018                     LATA            equ	24	;# 
   469     0019                     LATB            equ	25	;# 
   470     001A                     LATC            equ	26	;# 
   471     009A                     CPCON           equ	154	;# 
   472     009B                     ADRES           equ	155	;# 
   473     009B                     ADRESL          equ	155	;# 
   474     009C                     ADRESH          equ	156	;# 
   475     009D                     ADCON0          equ	157	;# 
   476     009E                     ADCON1          equ	158	;# 
   477     009F                     ADACT           equ	159	;# 
   478     010C                     RB4I2C          equ	268	;# 
   479     010D                     RB6I2C          equ	269	;# 
   480     0119                     RC1REG          equ	281	;# 
   481     011A                     TX1REG          equ	282	;# 
   482     011B                     SP1BRG          equ	283	;# 
   483     011B                     SP1BRGL         equ	283	;# 
   484     011C                     SP1BRGH         equ	284	;# 
   485     011D                     RC1STA          equ	285	;# 
   486     011E                     TX1STA          equ	286	;# 
   487     011F                     BAUD1CON        equ	287	;# 
   488     018C                     SSP1BUF         equ	396	;# 
   489     018D                     SSP1ADD         equ	397	;# 
   490     018E                     SSP1MSK         equ	398	;# 
   491     018F                     SSP1STAT        equ	399	;# 
   492     0190                     SSP1CON1        equ	400	;# 
   493     0191                     SSP1CON2        equ	401	;# 
   494     0192                     SSP1CON3        equ	402	;# 
   495     020C                     TMR1            equ	524	;# 
   496     020C                     TMR1L           equ	524	;# 
   497     020D                     TMR1H           equ	525	;# 
   498     020E                     T1CON           equ	526	;# 
   499     020E                     TMR1CON         equ	526	;# 
   500     020F                     T1GCON          equ	527	;# 
   501     020F                     TMR1GCON        equ	527	;# 
   502     0210                     T1GATE          equ	528	;# 
   503     0210                     TMR1GATE        equ	528	;# 
   504     0211                     T1CLK           equ	529	;# 
   505     0211                     TMR1CLK         equ	529	;# 
   506     0211                     PR1             equ	529	;# 
   507     028C                     T2TMR           equ	652	;# 
   508     028C                     TMR2            equ	652	;# 
   509     028D                     T2PR            equ	653	;# 
   510     028D                     PR2             equ	653	;# 
   511     028E                     T2CON           equ	654	;# 
   512     028F                     T2HLT           equ	655	;# 
   513     0290                     T2CLKCON        equ	656	;# 
   514     0291                     T2RST           equ	657	;# 
   515     030C                     CCPR1           equ	780	;# 
   516     030C                     CCPR1L          equ	780	;# 
   517     030D                     CCPR1H          equ	781	;# 
   518     030E                     CCP1CON         equ	782	;# 
   519     030F                     CCP1CAP         equ	783	;# 
   520     0310                     CCPR2           equ	784	;# 
   521     0310                     CCPR2L          equ	784	;# 
   522     0311                     CCPR2H          equ	785	;# 
   523     0312                     CCP2CON         equ	786	;# 
   524     0313                     CCP2CAP         equ	787	;# 
   525     0314                     PWM3DC          equ	788	;# 
   526     0314                     PWM3DCL         equ	788	;# 
   527     0315                     PWM3DCH         equ	789	;# 
   528     0316                     PWM3CON         equ	790	;# 
   529     0318                     PWM4DC          equ	792	;# 
   530     0318                     PWM4DCL         equ	792	;# 
   531     0319                     PWM4DCH         equ	793	;# 
   532     031A                     PWM4CON         equ	794	;# 
   533     059C                     TMR0L           equ	1436	;# 
   534     059C                     TMR0            equ	1436	;# 
   535     059D                     TMR0H           equ	1437	;# 
   536     059D                     PR0             equ	1437	;# 
   537     059E                     T0CON0          equ	1438	;# 
   538     059F                     T0CON1          equ	1439	;# 
   539     070C                     PIR0            equ	1804	;# 
   540     070D                     PIR1            equ	1805	;# 
   541     070E                     PIR2            equ	1806	;# 
   542     0716                     PIE0            equ	1814	;# 
   543     0717                     PIE1            equ	1815	;# 
   544     0718                     PIE2            equ	1816	;# 
   545     080C                     WDTCON          equ	2060	;# 
   546     0811                     BORCON          equ	2065	;# 
   547     0813                     PCON0           equ	2067	;# 
   548     0814                     PCON1           equ	2068	;# 
   549     081A                     NVMADR          equ	2074	;# 
   550     081A                     NVMADRL         equ	2074	;# 
   551     081B                     NVMADRH         equ	2075	;# 
   552     081C                     NVMDAT          equ	2076	;# 
   553     081C                     NVMDATL         equ	2076	;# 
   554     081D                     NVMDATH         equ	2077	;# 
   555     081E                     NVMCON1         equ	2078	;# 
   556     081F                     NVMCON2         equ	2079	;# 
   557     088E                     OSCCON          equ	2190	;# 
   558     0890                     OSCSTAT         equ	2192	;# 
   559     0891                     OSCEN           equ	2193	;# 
   560     0892                     OSCTUNE         equ	2194	;# 
   561     0893                     OSCFRQ          equ	2195	;# 
   562     090C                     FVRCON          equ	2316	;# 
   563     1E8F                     PPSLOCK         equ	7823	;# 
   564     1E90                     INTPPS          equ	7824	;# 
   565     1E91                     T0CKIPPS        equ	7825	;# 
   566     1E92                     T1CKIPPS        equ	7826	;# 
   567     1E93                     T1GPPS          equ	7827	;# 
   568     1E9C                     T2INPPS         equ	7836	;# 
   569     1EA1                     CCP1PPS         equ	7841	;# 
   570     1EA2                     CCP2PPS         equ	7842	;# 
   571     1EC3                     ADACTPPS        equ	7875	;# 
   572     1EC5                     SSP1CLKPPS      equ	7877	;# 
   573     1EC6                     SSP1DATPPS      equ	7878	;# 
   574     1EC7                     SSP1SSPPS       equ	7879	;# 
   575     1ECB                     RX1PPS          equ	7883	;# 
   576     1ECB                     RX1DTPPS        equ	7883	;# 
   577     1ECB                     RXPPS           equ	7883	;# 
   578     1ECC                     CK1PPS          equ	7884	;# 
   579     1ECC                     TX1CKPPS        equ	7884	;# 
   580     1ECC                     CKPPS           equ	7884	;# 
   581     1F10                     RA0PPS          equ	7952	;# 
   582     1F11                     RA1PPS          equ	7953	;# 
   583     1F12                     RA2PPS          equ	7954	;# 
   584     1F14                     RA4PPS          equ	7956	;# 
   585     1F15                     RA5PPS          equ	7957	;# 
   586     1F1C                     RB4PPS          equ	7964	;# 
   587     1F1D                     RB5PPS          equ	7965	;# 
   588     1F1E                     RB6PPS          equ	7966	;# 
   589     1F1F                     RB7PPS          equ	7967	;# 
   590     1F20                     RC0PPS          equ	7968	;# 
   591     1F21                     RC1PPS          equ	7969	;# 
   592     1F22                     RC2PPS          equ	7970	;# 
   593     1F23                     RC3PPS          equ	7971	;# 
   594     1F24                     RC4PPS          equ	7972	;# 
   595     1F25                     RC5PPS          equ	7973	;# 
   596     1F26                     RC6PPS          equ	7974	;# 
   597     1F27                     RC7PPS          equ	7975	;# 
   598     1F38                     ANSELA          equ	7992	;# 
   599     1F39                     WPUA            equ	7993	;# 
   600     1F3A                     ODCONA          equ	7994	;# 
   601     1F3B                     SLRCONA         equ	7995	;# 
   602     1F3C                     INLVLA          equ	7996	;# 
   603     1F3D                     IOCAP           equ	7997	;# 
   604     1F3E                     IOCAN           equ	7998	;# 
   605     1F3F                     IOCAF           equ	7999	;# 
   606     1F43                     ANSELB          equ	8003	;# 
   607     1F44                     WPUB            equ	8004	;# 
   608     1F45                     ODCONB          equ	8005	;# 
   609     1F46                     SLRCONB         equ	8006	;# 
   610     1F47                     INLVLB          equ	8007	;# 
   611     1F48                     IOCBP           equ	8008	;# 
   612     1F49                     IOCBN           equ	8009	;# 
   613     1F4A                     IOCBF           equ	8010	;# 
   614     1F4E                     ANSELC          equ	8014	;# 
   615     1F4F                     WPUC            equ	8015	;# 
   616     1F50                     ODCONC          equ	8016	;# 
   617     1F51                     SLRCONC         equ	8017	;# 
   618     1F52                     INLVLC          equ	8018	;# 
   619     1F53                     IOCCP           equ	8019	;# 
   620     1F54                     IOCCN           equ	8020	;# 
   621     1F55                     IOCCF           equ	8021	;# 
   622     1FE4                     STATUS_SHAD     equ	8164	;# 
   623     1FE5                     WREG_SHAD       equ	8165	;# 
   624     1FE6                     BSR_SHAD        equ	8166	;# 
   625     1FE7                     PCLATH_SHAD     equ	8167	;# 
   626     1FE8                     FSR0_SHAD       equ	8168	;# 
   627     1FE8                     FSR0L_SHAD      equ	8168	;# 
   628     1FE9                     FSR0H_SHAD      equ	8169	;# 
   629     1FEA                     FSR1L_SHAD      equ	8170	;# 
   630     1FEB                     FSR1H_SHAD      equ	8171	;# 
   631     1FED                     STKPTR          equ	8173	;# 
   632     1FEE                     TOSL            equ	8174	;# 
   633     1FEF                     TOSH            equ	8175	;# 
   634     0000                     INDF0           equ	0	;# 
   635     0001                     INDF1           equ	1	;# 
   636     0002                     PCL             equ	2	;# 
   637     0003                     STATUS          equ	3	;# 
   638     0004                     FSR0L           equ	4	;# 
   639     0005                     FSR0H           equ	5	;# 
   640     0006                     FSR1L           equ	6	;# 
   641     0007                     FSR1H           equ	7	;# 
   642     0008                     BSR             equ	8	;# 
   643     0009                     WREG            equ	9	;# 
   644     000A                     PCLATH          equ	10	;# 
   645     000B                     INTCON          equ	11	;# 
   646     000C                     PORTA           equ	12	;# 
   647     000D                     PORTB           equ	13	;# 
   648     000E                     PORTC           equ	14	;# 
   649     0012                     TRISA           equ	18	;# 
   650     0013                     TRISB           equ	19	;# 
   651     0014                     TRISC           equ	20	;# 
   652     0018                     LATA            equ	24	;# 
   653     0019                     LATB            equ	25	;# 
   654     001A                     LATC            equ	26	;# 
   655     009A                     CPCON           equ	154	;# 
   656     009B                     ADRES           equ	155	;# 
   657     009B                     ADRESL          equ	155	;# 
   658     009C                     ADRESH          equ	156	;# 
   659     009D                     ADCON0          equ	157	;# 
   660     009E                     ADCON1          equ	158	;# 
   661     009F                     ADACT           equ	159	;# 
   662     010C                     RB4I2C          equ	268	;# 
   663     010D                     RB6I2C          equ	269	;# 
   664     0119                     RC1REG          equ	281	;# 
   665     011A                     TX1REG          equ	282	;# 
   666     011B                     SP1BRG          equ	283	;# 
   667     011B                     SP1BRGL         equ	283	;# 
   668     011C                     SP1BRGH         equ	284	;# 
   669     011D                     RC1STA          equ	285	;# 
   670     011E                     TX1STA          equ	286	;# 
   671     011F                     BAUD1CON        equ	287	;# 
   672     018C                     SSP1BUF         equ	396	;# 
   673     018D                     SSP1ADD         equ	397	;# 
   674     018E                     SSP1MSK         equ	398	;# 
   675     018F                     SSP1STAT        equ	399	;# 
   676     0190                     SSP1CON1        equ	400	;# 
   677     0191                     SSP1CON2        equ	401	;# 
   678     0192                     SSP1CON3        equ	402	;# 
   679     020C                     TMR1            equ	524	;# 
   680     020C                     TMR1L           equ	524	;# 
   681     020D                     TMR1H           equ	525	;# 
   682     020E                     T1CON           equ	526	;# 
   683     020E                     TMR1CON         equ	526	;# 
   684     020F                     T1GCON          equ	527	;# 
   685     020F                     TMR1GCON        equ	527	;# 
   686     0210                     T1GATE          equ	528	;# 
   687     0210                     TMR1GATE        equ	528	;# 
   688     0211                     T1CLK           equ	529	;# 
   689     0211                     TMR1CLK         equ	529	;# 
   690     0211                     PR1             equ	529	;# 
   691     028C                     T2TMR           equ	652	;# 
   692     028C                     TMR2            equ	652	;# 
   693     028D                     T2PR            equ	653	;# 
   694     028D                     PR2             equ	653	;# 
   695     028E                     T2CON           equ	654	;# 
   696     028F                     T2HLT           equ	655	;# 
   697     0290                     T2CLKCON        equ	656	;# 
   698     0291                     T2RST           equ	657	;# 
   699     030C                     CCPR1           equ	780	;# 
   700     030C                     CCPR1L          equ	780	;# 
   701     030D                     CCPR1H          equ	781	;# 
   702     030E                     CCP1CON         equ	782	;# 
   703     030F                     CCP1CAP         equ	783	;# 
   704     0310                     CCPR2           equ	784	;# 
   705     0310                     CCPR2L          equ	784	;# 
   706     0311                     CCPR2H          equ	785	;# 
   707     0312                     CCP2CON         equ	786	;# 
   708     0313                     CCP2CAP         equ	787	;# 
   709     0314                     PWM3DC          equ	788	;# 
   710     0314                     PWM3DCL         equ	788	;# 
   711     0315                     PWM3DCH         equ	789	;# 
   712     0316                     PWM3CON         equ	790	;# 
   713     0318                     PWM4DC          equ	792	;# 
   714     0318                     PWM4DCL         equ	792	;# 
   715     0319                     PWM4DCH         equ	793	;# 
   716     031A                     PWM4CON         equ	794	;# 
   717     059C                     TMR0L           equ	1436	;# 
   718     059C                     TMR0            equ	1436	;# 
   719     059D                     TMR0H           equ	1437	;# 
   720     059D                     PR0             equ	1437	;# 
   721     059E                     T0CON0          equ	1438	;# 
   722     059F                     T0CON1          equ	1439	;# 
   723     070C                     PIR0            equ	1804	;# 
   724     070D                     PIR1            equ	1805	;# 
   725     070E                     PIR2            equ	1806	;# 
   726     0716                     PIE0            equ	1814	;# 
   727     0717                     PIE1            equ	1815	;# 
   728     0718                     PIE2            equ	1816	;# 
   729     080C                     WDTCON          equ	2060	;# 
   730     0811                     BORCON          equ	2065	;# 
   731     0813                     PCON0           equ	2067	;# 
   732     0814                     PCON1           equ	2068	;# 
   733     081A                     NVMADR          equ	2074	;# 
   734     081A                     NVMADRL         equ	2074	;# 
   735     081B                     NVMADRH         equ	2075	;# 
   736     081C                     NVMDAT          equ	2076	;# 
   737     081C                     NVMDATL         equ	2076	;# 
   738     081D                     NVMDATH         equ	2077	;# 
   739     081E                     NVMCON1         equ	2078	;# 
   740     081F                     NVMCON2         equ	2079	;# 
   741     088E                     OSCCON          equ	2190	;# 
   742     0890                     OSCSTAT         equ	2192	;# 
   743     0891                     OSCEN           equ	2193	;# 
   744     0892                     OSCTUNE         equ	2194	;# 
   745     0893                     OSCFRQ          equ	2195	;# 
   746     090C                     FVRCON          equ	2316	;# 
   747     1E8F                     PPSLOCK         equ	7823	;# 
   748     1E90                     INTPPS          equ	7824	;# 
   749     1E91                     T0CKIPPS        equ	7825	;# 
   750     1E92                     T1CKIPPS        equ	7826	;# 
   751     1E93                     T1GPPS          equ	7827	;# 
   752     1E9C                     T2INPPS         equ	7836	;# 
   753     1EA1                     CCP1PPS         equ	7841	;# 
   754     1EA2                     CCP2PPS         equ	7842	;# 
   755     1EC3                     ADACTPPS        equ	7875	;# 
   756     1EC5                     SSP1CLKPPS      equ	7877	;# 
   757     1EC6                     SSP1DATPPS      equ	7878	;# 
   758     1EC7                     SSP1SSPPS       equ	7879	;# 
   759     1ECB                     RX1PPS          equ	7883	;# 
   760     1ECB                     RX1DTPPS        equ	7883	;# 
   761     1ECB                     RXPPS           equ	7883	;# 
   762     1ECC                     CK1PPS          equ	7884	;# 
   763     1ECC                     TX1CKPPS        equ	7884	;# 
   764     1ECC                     CKPPS           equ	7884	;# 
   765     1F10                     RA0PPS          equ	7952	;# 
   766     1F11                     RA1PPS          equ	7953	;# 
   767     1F12                     RA2PPS          equ	7954	;# 
   768     1F14                     RA4PPS          equ	7956	;# 
   769     1F15                     RA5PPS          equ	7957	;# 
   770     1F1C                     RB4PPS          equ	7964	;# 
   771     1F1D                     RB5PPS          equ	7965	;# 
   772     1F1E                     RB6PPS          equ	7966	;# 
   773     1F1F                     RB7PPS          equ	7967	;# 
   774     1F20                     RC0PPS          equ	7968	;# 
   775     1F21                     RC1PPS          equ	7969	;# 
   776     1F22                     RC2PPS          equ	7970	;# 
   777     1F23                     RC3PPS          equ	7971	;# 
   778     1F24                     RC4PPS          equ	7972	;# 
   779     1F25                     RC5PPS          equ	7973	;# 
   780     1F26                     RC6PPS          equ	7974	;# 
   781     1F27                     RC7PPS          equ	7975	;# 
   782     1F38                     ANSELA          equ	7992	;# 
   783     1F39                     WPUA            equ	7993	;# 
   784     1F3A                     ODCONA          equ	7994	;# 
   785     1F3B                     SLRCONA         equ	7995	;# 
   786     1F3C                     INLVLA          equ	7996	;# 
   787     1F3D                     IOCAP           equ	7997	;# 
   788     1F3E                     IOCAN           equ	7998	;# 
   789     1F3F                     IOCAF           equ	7999	;# 
   790     1F43                     ANSELB          equ	8003	;# 
   791     1F44                     WPUB            equ	8004	;# 
   792     1F45                     ODCONB          equ	8005	;# 
   793     1F46                     SLRCONB         equ	8006	;# 
   794     1F47                     INLVLB          equ	8007	;# 
   795     1F48                     IOCBP           equ	8008	;# 
   796     1F49                     IOCBN           equ	8009	;# 
   797     1F4A                     IOCBF           equ	8010	;# 
   798     1F4E                     ANSELC          equ	8014	;# 
   799     1F4F                     WPUC            equ	8015	;# 
   800     1F50                     ODCONC          equ	8016	;# 
   801     1F51                     SLRCONC         equ	8017	;# 
   802     1F52                     INLVLC          equ	8018	;# 
   803     1F53                     IOCCP           equ	8019	;# 
   804     1F54                     IOCCN           equ	8020	;# 
   805     1F55                     IOCCF           equ	8021	;# 
   806     1FE4                     STATUS_SHAD     equ	8164	;# 
   807     1FE5                     WREG_SHAD       equ	8165	;# 
   808     1FE6                     BSR_SHAD        equ	8166	;# 
   809     1FE7                     PCLATH_SHAD     equ	8167	;# 
   810     1FE8                     FSR0_SHAD       equ	8168	;# 
   811     1FE8                     FSR0L_SHAD      equ	8168	;# 
   812     1FE9                     FSR0H_SHAD      equ	8169	;# 
   813     1FEA                     FSR1L_SHAD      equ	8170	;# 
   814     1FEB                     FSR1H_SHAD      equ	8171	;# 
   815     1FED                     STKPTR          equ	8173	;# 
   816     1FEE                     TOSL            equ	8174	;# 
   817     1FEF                     TOSH            equ	8175	;# 
   818     0000                     INDF0           equ	0	;# 
   819     0001                     INDF1           equ	1	;# 
   820     0002                     PCL             equ	2	;# 
   821     0003                     STATUS          equ	3	;# 
   822     0004                     FSR0L           equ	4	;# 
   823     0005                     FSR0H           equ	5	;# 
   824     0006                     FSR1L           equ	6	;# 
   825     0007                     FSR1H           equ	7	;# 
   826     0008                     BSR             equ	8	;# 
   827     0009                     WREG            equ	9	;# 
   828     000A                     PCLATH          equ	10	;# 
   829     000B                     INTCON          equ	11	;# 
   830     000C                     PORTA           equ	12	;# 
   831     000D                     PORTB           equ	13	;# 
   832     000E                     PORTC           equ	14	;# 
   833     0012                     TRISA           equ	18	;# 
   834     0013                     TRISB           equ	19	;# 
   835     0014                     TRISC           equ	20	;# 
   836     0018                     LATA            equ	24	;# 
   837     0019                     LATB            equ	25	;# 
   838     001A                     LATC            equ	26	;# 
   839     009A                     CPCON           equ	154	;# 
   840     009B                     ADRES           equ	155	;# 
   841     009B                     ADRESL          equ	155	;# 
   842     009C                     ADRESH          equ	156	;# 
   843     009D                     ADCON0          equ	157	;# 
   844     009E                     ADCON1          equ	158	;# 
   845     009F                     ADACT           equ	159	;# 
   846     010C                     RB4I2C          equ	268	;# 
   847     010D                     RB6I2C          equ	269	;# 
   848     0119                     RC1REG          equ	281	;# 
   849     011A                     TX1REG          equ	282	;# 
   850     011B                     SP1BRG          equ	283	;# 
   851     011B                     SP1BRGL         equ	283	;# 
   852     011C                     SP1BRGH         equ	284	;# 
   853     011D                     RC1STA          equ	285	;# 
   854     011E                     TX1STA          equ	286	;# 
   855     011F                     BAUD1CON        equ	287	;# 
   856     018C                     SSP1BUF         equ	396	;# 
   857     018D                     SSP1ADD         equ	397	;# 
   858     018E                     SSP1MSK         equ	398	;# 
   859     018F                     SSP1STAT        equ	399	;# 
   860     0190                     SSP1CON1        equ	400	;# 
   861     0191                     SSP1CON2        equ	401	;# 
   862     0192                     SSP1CON3        equ	402	;# 
   863     020C                     TMR1            equ	524	;# 
   864     020C                     TMR1L           equ	524	;# 
   865     020D                     TMR1H           equ	525	;# 
   866     020E                     T1CON           equ	526	;# 
   867     020E                     TMR1CON         equ	526	;# 
   868     020F                     T1GCON          equ	527	;# 
   869     020F                     TMR1GCON        equ	527	;# 
   870     0210                     T1GATE          equ	528	;# 
   871     0210                     TMR1GATE        equ	528	;# 
   872     0211                     T1CLK           equ	529	;# 
   873     0211                     TMR1CLK         equ	529	;# 
   874     0211                     PR1             equ	529	;# 
   875     028C                     T2TMR           equ	652	;# 
   876     028C                     TMR2            equ	652	;# 
   877     028D                     T2PR            equ	653	;# 
   878     028D                     PR2             equ	653	;# 
   879     028E                     T2CON           equ	654	;# 
   880     028F                     T2HLT           equ	655	;# 
   881     0290                     T2CLKCON        equ	656	;# 
   882     0291                     T2RST           equ	657	;# 
   883     030C                     CCPR1           equ	780	;# 
   884     030C                     CCPR1L          equ	780	;# 
   885     030D                     CCPR1H          equ	781	;# 
   886     030E                     CCP1CON         equ	782	;# 
   887     030F                     CCP1CAP         equ	783	;# 
   888     0310                     CCPR2           equ	784	;# 
   889     0310                     CCPR2L          equ	784	;# 
   890     0311                     CCPR2H          equ	785	;# 
   891     0312                     CCP2CON         equ	786	;# 
   892     0313                     CCP2CAP         equ	787	;# 
   893     0314                     PWM3DC          equ	788	;# 
   894     0314                     PWM3DCL         equ	788	;# 
   895     0315                     PWM3DCH         equ	789	;# 
   896     0316                     PWM3CON         equ	790	;# 
   897     0318                     PWM4DC          equ	792	;# 
   898     0318                     PWM4DCL         equ	792	;# 
   899     0319                     PWM4DCH         equ	793	;# 
   900     031A                     PWM4CON         equ	794	;# 
   901     059C                     TMR0L           equ	1436	;# 
   902     059C                     TMR0            equ	1436	;# 
   903     059D                     TMR0H           equ	1437	;# 
   904     059D                     PR0             equ	1437	;# 
   905     059E                     T0CON0          equ	1438	;# 
   906     059F                     T0CON1          equ	1439	;# 
   907     070C                     PIR0            equ	1804	;# 
   908     070D                     PIR1            equ	1805	;# 
   909     070E                     PIR2            equ	1806	;# 
   910     0716                     PIE0            equ	1814	;# 
   911     0717                     PIE1            equ	1815	;# 
   912     0718                     PIE2            equ	1816	;# 
   913     080C                     WDTCON          equ	2060	;# 
   914     0811                     BORCON          equ	2065	;# 
   915     0813                     PCON0           equ	2067	;# 
   916     0814                     PCON1           equ	2068	;# 
   917     081A                     NVMADR          equ	2074	;# 
   918     081A                     NVMADRL         equ	2074	;# 
   919     081B                     NVMADRH         equ	2075	;# 
   920     081C                     NVMDAT          equ	2076	;# 
   921     081C                     NVMDATL         equ	2076	;# 
   922     081D                     NVMDATH         equ	2077	;# 
   923     081E                     NVMCON1         equ	2078	;# 
   924     081F                     NVMCON2         equ	2079	;# 
   925     088E                     OSCCON          equ	2190	;# 
   926     0890                     OSCSTAT         equ	2192	;# 
   927     0891                     OSCEN           equ	2193	;# 
   928     0892                     OSCTUNE         equ	2194	;# 
   929     0893                     OSCFRQ          equ	2195	;# 
   930     090C                     FVRCON          equ	2316	;# 
   931     1E8F                     PPSLOCK         equ	7823	;# 
   932     1E90                     INTPPS          equ	7824	;# 
   933     1E91                     T0CKIPPS        equ	7825	;# 
   934     1E92                     T1CKIPPS        equ	7826	;# 
   935     1E93                     T1GPPS          equ	7827	;# 
   936     1E9C                     T2INPPS         equ	7836	;# 
   937     1EA1                     CCP1PPS         equ	7841	;# 
   938     1EA2                     CCP2PPS         equ	7842	;# 
   939     1EC3                     ADACTPPS        equ	7875	;# 
   940     1EC5                     SSP1CLKPPS      equ	7877	;# 
   941     1EC6                     SSP1DATPPS      equ	7878	;# 
   942     1EC7                     SSP1SSPPS       equ	7879	;# 
   943     1ECB                     RX1PPS          equ	7883	;# 
   944     1ECB                     RX1DTPPS        equ	7883	;# 
   945     1ECB                     RXPPS           equ	7883	;# 
   946     1ECC                     CK1PPS          equ	7884	;# 
   947     1ECC                     TX1CKPPS        equ	7884	;# 
   948     1ECC                     CKPPS           equ	7884	;# 
   949     1F10                     RA0PPS          equ	7952	;# 
   950     1F11                     RA1PPS          equ	7953	;# 
   951     1F12                     RA2PPS          equ	7954	;# 
   952     1F14                     RA4PPS          equ	7956	;# 
   953     1F15                     RA5PPS          equ	7957	;# 
   954     1F1C                     RB4PPS          equ	7964	;# 
   955     1F1D                     RB5PPS          equ	7965	;# 
   956     1F1E                     RB6PPS          equ	7966	;# 
   957     1F1F                     RB7PPS          equ	7967	;# 
   958     1F20                     RC0PPS          equ	7968	;# 
   959     1F21                     RC1PPS          equ	7969	;# 
   960     1F22                     RC2PPS          equ	7970	;# 
   961     1F23                     RC3PPS          equ	7971	;# 
   962     1F24                     RC4PPS          equ	7972	;# 
   963     1F25                     RC5PPS          equ	7973	;# 
   964     1F26                     RC6PPS          equ	7974	;# 
   965     1F27                     RC7PPS          equ	7975	;# 
   966     1F38                     ANSELA          equ	7992	;# 
   967     1F39                     WPUA            equ	7993	;# 
   968     1F3A                     ODCONA          equ	7994	;# 
   969     1F3B                     SLRCONA         equ	7995	;# 
   970     1F3C                     INLVLA          equ	7996	;# 
   971     1F3D                     IOCAP           equ	7997	;# 
   972     1F3E                     IOCAN           equ	7998	;# 
   973     1F3F                     IOCAF           equ	7999	;# 
   974     1F43                     ANSELB          equ	8003	;# 
   975     1F44                     WPUB            equ	8004	;# 
   976     1F45                     ODCONB          equ	8005	;# 
   977     1F46                     SLRCONB         equ	8006	;# 
   978     1F47                     INLVLB          equ	8007	;# 
   979     1F48                     IOCBP           equ	8008	;# 
   980     1F49                     IOCBN           equ	8009	;# 
   981     1F4A                     IOCBF           equ	8010	;# 
   982     1F4E                     ANSELC          equ	8014	;# 
   983     1F4F                     WPUC            equ	8015	;# 
   984     1F50                     ODCONC          equ	8016	;# 
   985     1F51                     SLRCONC         equ	8017	;# 
   986     1F52                     INLVLC          equ	8018	;# 
   987     1F53                     IOCCP           equ	8019	;# 
   988     1F54                     IOCCN           equ	8020	;# 
   989     1F55                     IOCCF           equ	8021	;# 
   990     1FE4                     STATUS_SHAD     equ	8164	;# 
   991     1FE5                     WREG_SHAD       equ	8165	;# 
   992     1FE6                     BSR_SHAD        equ	8166	;# 
   993     1FE7                     PCLATH_SHAD     equ	8167	;# 
   994     1FE8                     FSR0_SHAD       equ	8168	;# 
   995     1FE8                     FSR0L_SHAD      equ	8168	;# 
   996     1FE9                     FSR0H_SHAD      equ	8169	;# 
   997     1FEA                     FSR1L_SHAD      equ	8170	;# 
   998     1FEB                     FSR1H_SHAD      equ	8171	;# 
   999     1FED                     STKPTR          equ	8173	;# 
  1000     1FEE                     TOSL            equ	8174	;# 
  1001     1FEF                     TOSH            equ	8175	;# 
  1002     0000                     INDF0           equ	0	;# 
  1003     0001                     INDF1           equ	1	;# 
  1004     0002                     PCL             equ	2	;# 
  1005     0003                     STATUS          equ	3	;# 
  1006     0004                     FSR0L           equ	4	;# 
  1007     0005                     FSR0H           equ	5	;# 
  1008     0006                     FSR1L           equ	6	;# 
  1009     0007                     FSR1H           equ	7	;# 
  1010     0008                     BSR             equ	8	;# 
  1011     0009                     WREG            equ	9	;# 
  1012     000A                     PCLATH          equ	10	;# 
  1013     000B                     INTCON          equ	11	;# 
  1014     000C                     PORTA           equ	12	;# 
  1015     000D                     PORTB           equ	13	;# 
  1016     000E                     PORTC           equ	14	;# 
  1017     0012                     TRISA           equ	18	;# 
  1018     0013                     TRISB           equ	19	;# 
  1019     0014                     TRISC           equ	20	;# 
  1020     0018                     LATA            equ	24	;# 
  1021     0019                     LATB            equ	25	;# 
  1022     001A                     LATC            equ	26	;# 
  1023     009A                     CPCON           equ	154	;# 
  1024     009B                     ADRES           equ	155	;# 
  1025     009B                     ADRESL          equ	155	;# 
  1026     009C                     ADRESH          equ	156	;# 
  1027     009D                     ADCON0          equ	157	;# 
  1028     009E                     ADCON1          equ	158	;# 
  1029     009F                     ADACT           equ	159	;# 
  1030     010C                     RB4I2C          equ	268	;# 
  1031     010D                     RB6I2C          equ	269	;# 
  1032     0119                     RC1REG          equ	281	;# 
  1033     011A                     TX1REG          equ	282	;# 
  1034     011B                     SP1BRG          equ	283	;# 
  1035     011B                     SP1BRGL         equ	283	;# 
  1036     011C                     SP1BRGH         equ	284	;# 
  1037     011D                     RC1STA          equ	285	;# 
  1038     011E                     TX1STA          equ	286	;# 
  1039     011F                     BAUD1CON        equ	287	;# 
  1040     018C                     SSP1BUF         equ	396	;# 
  1041     018D                     SSP1ADD         equ	397	;# 
  1042     018E                     SSP1MSK         equ	398	;# 
  1043     018F                     SSP1STAT        equ	399	;# 
  1044     0190                     SSP1CON1        equ	400	;# 
  1045     0191                     SSP1CON2        equ	401	;# 
  1046     0192                     SSP1CON3        equ	402	;# 
  1047     020C                     TMR1            equ	524	;# 
  1048     020C                     TMR1L           equ	524	;# 
  1049     020D                     TMR1H           equ	525	;# 
  1050     020E                     T1CON           equ	526	;# 
  1051     020E                     TMR1CON         equ	526	;# 
  1052     020F                     T1GCON          equ	527	;# 
  1053     020F                     TMR1GCON        equ	527	;# 
  1054     0210                     T1GATE          equ	528	;# 
  1055     0210                     TMR1GATE        equ	528	;# 
  1056     0211                     T1CLK           equ	529	;# 
  1057     0211                     TMR1CLK         equ	529	;# 
  1058     0211                     PR1             equ	529	;# 
  1059     028C                     T2TMR           equ	652	;# 
  1060     028C                     TMR2            equ	652	;# 
  1061     028D                     T2PR            equ	653	;# 
  1062     028D                     PR2             equ	653	;# 
  1063     028E                     T2CON           equ	654	;# 
  1064     028F                     T2HLT           equ	655	;# 
  1065     0290                     T2CLKCON        equ	656	;# 
  1066     0291                     T2RST           equ	657	;# 
  1067     030C                     CCPR1           equ	780	;# 
  1068     030C                     CCPR1L          equ	780	;# 
  1069     030D                     CCPR1H          equ	781	;# 
  1070     030E                     CCP1CON         equ	782	;# 
  1071     030F                     CCP1CAP         equ	783	;# 
  1072     0310                     CCPR2           equ	784	;# 
  1073     0310                     CCPR2L          equ	784	;# 
  1074     0311                     CCPR2H          equ	785	;# 
  1075     0312                     CCP2CON         equ	786	;# 
  1076     0313                     CCP2CAP         equ	787	;# 
  1077     0314                     PWM3DC          equ	788	;# 
  1078     0314                     PWM3DCL         equ	788	;# 
  1079     0315                     PWM3DCH         equ	789	;# 
  1080     0316                     PWM3CON         equ	790	;# 
  1081     0318                     PWM4DC          equ	792	;# 
  1082     0318                     PWM4DCL         equ	792	;# 
  1083     0319                     PWM4DCH         equ	793	;# 
  1084     031A                     PWM4CON         equ	794	;# 
  1085     059C                     TMR0L           equ	1436	;# 
  1086     059C                     TMR0            equ	1436	;# 
  1087     059D                     TMR0H           equ	1437	;# 
  1088     059D                     PR0             equ	1437	;# 
  1089     059E                     T0CON0          equ	1438	;# 
  1090     059F                     T0CON1          equ	1439	;# 
  1091     070C                     PIR0            equ	1804	;# 
  1092     070D                     PIR1            equ	1805	;# 
  1093     070E                     PIR2            equ	1806	;# 
  1094     0716                     PIE0            equ	1814	;# 
  1095     0717                     PIE1            equ	1815	;# 
  1096     0718                     PIE2            equ	1816	;# 
  1097     080C                     WDTCON          equ	2060	;# 
  1098     0811                     BORCON          equ	2065	;# 
  1099     0813                     PCON0           equ	2067	;# 
  1100     0814                     PCON1           equ	2068	;# 
  1101     081A                     NVMADR          equ	2074	;# 
  1102     081A                     NVMADRL         equ	2074	;# 
  1103     081B                     NVMADRH         equ	2075	;# 
  1104     081C                     NVMDAT          equ	2076	;# 
  1105     081C                     NVMDATL         equ	2076	;# 
  1106     081D                     NVMDATH         equ	2077	;# 
  1107     081E                     NVMCON1         equ	2078	;# 
  1108     081F                     NVMCON2         equ	2079	;# 
  1109     088E                     OSCCON          equ	2190	;# 
  1110     0890                     OSCSTAT         equ	2192	;# 
  1111     0891                     OSCEN           equ	2193	;# 
  1112     0892                     OSCTUNE         equ	2194	;# 
  1113     0893                     OSCFRQ          equ	2195	;# 
  1114     090C                     FVRCON          equ	2316	;# 
  1115     1E8F                     PPSLOCK         equ	7823	;# 
  1116     1E90                     INTPPS          equ	7824	;# 
  1117     1E91                     T0CKIPPS        equ	7825	;# 
  1118     1E92                     T1CKIPPS        equ	7826	;# 
  1119     1E93                     T1GPPS          equ	7827	;# 
  1120     1E9C                     T2INPPS         equ	7836	;# 
  1121     1EA1                     CCP1PPS         equ	7841	;# 
  1122     1EA2                     CCP2PPS         equ	7842	;# 
  1123     1EC3                     ADACTPPS        equ	7875	;# 
  1124     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1125     1EC6                     SSP1DATPPS      equ	7878	;# 
  1126     1EC7                     SSP1SSPPS       equ	7879	;# 
  1127     1ECB                     RX1PPS          equ	7883	;# 
  1128     1ECB                     RX1DTPPS        equ	7883	;# 
  1129     1ECB                     RXPPS           equ	7883	;# 
  1130     1ECC                     CK1PPS          equ	7884	;# 
  1131     1ECC                     TX1CKPPS        equ	7884	;# 
  1132     1ECC                     CKPPS           equ	7884	;# 
  1133     1F10                     RA0PPS          equ	7952	;# 
  1134     1F11                     RA1PPS          equ	7953	;# 
  1135     1F12                     RA2PPS          equ	7954	;# 
  1136     1F14                     RA4PPS          equ	7956	;# 
  1137     1F15                     RA5PPS          equ	7957	;# 
  1138     1F1C                     RB4PPS          equ	7964	;# 
  1139     1F1D                     RB5PPS          equ	7965	;# 
  1140     1F1E                     RB6PPS          equ	7966	;# 
  1141     1F1F                     RB7PPS          equ	7967	;# 
  1142     1F20                     RC0PPS          equ	7968	;# 
  1143     1F21                     RC1PPS          equ	7969	;# 
  1144     1F22                     RC2PPS          equ	7970	;# 
  1145     1F23                     RC3PPS          equ	7971	;# 
  1146     1F24                     RC4PPS          equ	7972	;# 
  1147     1F25                     RC5PPS          equ	7973	;# 
  1148     1F26                     RC6PPS          equ	7974	;# 
  1149     1F27                     RC7PPS          equ	7975	;# 
  1150     1F38                     ANSELA          equ	7992	;# 
  1151     1F39                     WPUA            equ	7993	;# 
  1152     1F3A                     ODCONA          equ	7994	;# 
  1153     1F3B                     SLRCONA         equ	7995	;# 
  1154     1F3C                     INLVLA          equ	7996	;# 
  1155     1F3D                     IOCAP           equ	7997	;# 
  1156     1F3E                     IOCAN           equ	7998	;# 
  1157     1F3F                     IOCAF           equ	7999	;# 
  1158     1F43                     ANSELB          equ	8003	;# 
  1159     1F44                     WPUB            equ	8004	;# 
  1160     1F45                     ODCONB          equ	8005	;# 
  1161     1F46                     SLRCONB         equ	8006	;# 
  1162     1F47                     INLVLB          equ	8007	;# 
  1163     1F48                     IOCBP           equ	8008	;# 
  1164     1F49                     IOCBN           equ	8009	;# 
  1165     1F4A                     IOCBF           equ	8010	;# 
  1166     1F4E                     ANSELC          equ	8014	;# 
  1167     1F4F                     WPUC            equ	8015	;# 
  1168     1F50                     ODCONC          equ	8016	;# 
  1169     1F51                     SLRCONC         equ	8017	;# 
  1170     1F52                     INLVLC          equ	8018	;# 
  1171     1F53                     IOCCP           equ	8019	;# 
  1172     1F54                     IOCCN           equ	8020	;# 
  1173     1F55                     IOCCF           equ	8021	;# 
  1174     1FE4                     STATUS_SHAD     equ	8164	;# 
  1175     1FE5                     WREG_SHAD       equ	8165	;# 
  1176     1FE6                     BSR_SHAD        equ	8166	;# 
  1177     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1178     1FE8                     FSR0_SHAD       equ	8168	;# 
  1179     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1180     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1181     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1182     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1183     1FED                     STKPTR          equ	8173	;# 
  1184     1FEE                     TOSL            equ	8174	;# 
  1185     1FEF                     TOSH            equ	8175	;# 
  1186     0000                     INDF0           equ	0	;# 
  1187     0001                     INDF1           equ	1	;# 
  1188     0002                     PCL             equ	2	;# 
  1189     0003                     STATUS          equ	3	;# 
  1190     0004                     FSR0L           equ	4	;# 
  1191     0005                     FSR0H           equ	5	;# 
  1192     0006                     FSR1L           equ	6	;# 
  1193     0007                     FSR1H           equ	7	;# 
  1194     0008                     BSR             equ	8	;# 
  1195     0009                     WREG            equ	9	;# 
  1196     000A                     PCLATH          equ	10	;# 
  1197     000B                     INTCON          equ	11	;# 
  1198     000C                     PORTA           equ	12	;# 
  1199     000D                     PORTB           equ	13	;# 
  1200     000E                     PORTC           equ	14	;# 
  1201     0012                     TRISA           equ	18	;# 
  1202     0013                     TRISB           equ	19	;# 
  1203     0014                     TRISC           equ	20	;# 
  1204     0018                     LATA            equ	24	;# 
  1205     0019                     LATB            equ	25	;# 
  1206     001A                     LATC            equ	26	;# 
  1207     009A                     CPCON           equ	154	;# 
  1208     009B                     ADRES           equ	155	;# 
  1209     009B                     ADRESL          equ	155	;# 
  1210     009C                     ADRESH          equ	156	;# 
  1211     009D                     ADCON0          equ	157	;# 
  1212     009E                     ADCON1          equ	158	;# 
  1213     009F                     ADACT           equ	159	;# 
  1214     010C                     RB4I2C          equ	268	;# 
  1215     010D                     RB6I2C          equ	269	;# 
  1216     0119                     RC1REG          equ	281	;# 
  1217     011A                     TX1REG          equ	282	;# 
  1218     011B                     SP1BRG          equ	283	;# 
  1219     011B                     SP1BRGL         equ	283	;# 
  1220     011C                     SP1BRGH         equ	284	;# 
  1221     011D                     RC1STA          equ	285	;# 
  1222     011E                     TX1STA          equ	286	;# 
  1223     011F                     BAUD1CON        equ	287	;# 
  1224     018C                     SSP1BUF         equ	396	;# 
  1225     018D                     SSP1ADD         equ	397	;# 
  1226     018E                     SSP1MSK         equ	398	;# 
  1227     018F                     SSP1STAT        equ	399	;# 
  1228     0190                     SSP1CON1        equ	400	;# 
  1229     0191                     SSP1CON2        equ	401	;# 
  1230     0192                     SSP1CON3        equ	402	;# 
  1231     020C                     TMR1            equ	524	;# 
  1232     020C                     TMR1L           equ	524	;# 
  1233     020D                     TMR1H           equ	525	;# 
  1234     020E                     T1CON           equ	526	;# 
  1235     020E                     TMR1CON         equ	526	;# 
  1236     020F                     T1GCON          equ	527	;# 
  1237     020F                     TMR1GCON        equ	527	;# 
  1238     0210                     T1GATE          equ	528	;# 
  1239     0210                     TMR1GATE        equ	528	;# 
  1240     0211                     T1CLK           equ	529	;# 
  1241     0211                     TMR1CLK         equ	529	;# 
  1242     0211                     PR1             equ	529	;# 
  1243     028C                     T2TMR           equ	652	;# 
  1244     028C                     TMR2            equ	652	;# 
  1245     028D                     T2PR            equ	653	;# 
  1246     028D                     PR2             equ	653	;# 
  1247     028E                     T2CON           equ	654	;# 
  1248     028F                     T2HLT           equ	655	;# 
  1249     0290                     T2CLKCON        equ	656	;# 
  1250     0291                     T2RST           equ	657	;# 
  1251     030C                     CCPR1           equ	780	;# 
  1252     030C                     CCPR1L          equ	780	;# 
  1253     030D                     CCPR1H          equ	781	;# 
  1254     030E                     CCP1CON         equ	782	;# 
  1255     030F                     CCP1CAP         equ	783	;# 
  1256     0310                     CCPR2           equ	784	;# 
  1257     0310                     CCPR2L          equ	784	;# 
  1258     0311                     CCPR2H          equ	785	;# 
  1259     0312                     CCP2CON         equ	786	;# 
  1260     0313                     CCP2CAP         equ	787	;# 
  1261     0314                     PWM3DC          equ	788	;# 
  1262     0314                     PWM3DCL         equ	788	;# 
  1263     0315                     PWM3DCH         equ	789	;# 
  1264     0316                     PWM3CON         equ	790	;# 
  1265     0318                     PWM4DC          equ	792	;# 
  1266     0318                     PWM4DCL         equ	792	;# 
  1267     0319                     PWM4DCH         equ	793	;# 
  1268     031A                     PWM4CON         equ	794	;# 
  1269     059C                     TMR0L           equ	1436	;# 
  1270     059C                     TMR0            equ	1436	;# 
  1271     059D                     TMR0H           equ	1437	;# 
  1272     059D                     PR0             equ	1437	;# 
  1273     059E                     T0CON0          equ	1438	;# 
  1274     059F                     T0CON1          equ	1439	;# 
  1275     070C                     PIR0            equ	1804	;# 
  1276     070D                     PIR1            equ	1805	;# 
  1277     070E                     PIR2            equ	1806	;# 
  1278     0716                     PIE0            equ	1814	;# 
  1279     0717                     PIE1            equ	1815	;# 
  1280     0718                     PIE2            equ	1816	;# 
  1281     080C                     WDTCON          equ	2060	;# 
  1282     0811                     BORCON          equ	2065	;# 
  1283     0813                     PCON0           equ	2067	;# 
  1284     0814                     PCON1           equ	2068	;# 
  1285     081A                     NVMADR          equ	2074	;# 
  1286     081A                     NVMADRL         equ	2074	;# 
  1287     081B                     NVMADRH         equ	2075	;# 
  1288     081C                     NVMDAT          equ	2076	;# 
  1289     081C                     NVMDATL         equ	2076	;# 
  1290     081D                     NVMDATH         equ	2077	;# 
  1291     081E                     NVMCON1         equ	2078	;# 
  1292     081F                     NVMCON2         equ	2079	;# 
  1293     088E                     OSCCON          equ	2190	;# 
  1294     0890                     OSCSTAT         equ	2192	;# 
  1295     0891                     OSCEN           equ	2193	;# 
  1296     0892                     OSCTUNE         equ	2194	;# 
  1297     0893                     OSCFRQ          equ	2195	;# 
  1298     090C                     FVRCON          equ	2316	;# 
  1299     1E8F                     PPSLOCK         equ	7823	;# 
  1300     1E90                     INTPPS          equ	7824	;# 
  1301     1E91                     T0CKIPPS        equ	7825	;# 
  1302     1E92                     T1CKIPPS        equ	7826	;# 
  1303     1E93                     T1GPPS          equ	7827	;# 
  1304     1E9C                     T2INPPS         equ	7836	;# 
  1305     1EA1                     CCP1PPS         equ	7841	;# 
  1306     1EA2                     CCP2PPS         equ	7842	;# 
  1307     1EC3                     ADACTPPS        equ	7875	;# 
  1308     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1309     1EC6                     SSP1DATPPS      equ	7878	;# 
  1310     1EC7                     SSP1SSPPS       equ	7879	;# 
  1311     1ECB                     RX1PPS          equ	7883	;# 
  1312     1ECB                     RX1DTPPS        equ	7883	;# 
  1313     1ECB                     RXPPS           equ	7883	;# 
  1314     1ECC                     CK1PPS          equ	7884	;# 
  1315     1ECC                     TX1CKPPS        equ	7884	;# 
  1316     1ECC                     CKPPS           equ	7884	;# 
  1317     1F10                     RA0PPS          equ	7952	;# 
  1318     1F11                     RA1PPS          equ	7953	;# 
  1319     1F12                     RA2PPS          equ	7954	;# 
  1320     1F14                     RA4PPS          equ	7956	;# 
  1321     1F15                     RA5PPS          equ	7957	;# 
  1322     1F1C                     RB4PPS          equ	7964	;# 
  1323     1F1D                     RB5PPS          equ	7965	;# 
  1324     1F1E                     RB6PPS          equ	7966	;# 
  1325     1F1F                     RB7PPS          equ	7967	;# 
  1326     1F20                     RC0PPS          equ	7968	;# 
  1327     1F21                     RC1PPS          equ	7969	;# 
  1328     1F22                     RC2PPS          equ	7970	;# 
  1329     1F23                     RC3PPS          equ	7971	;# 
  1330     1F24                     RC4PPS          equ	7972	;# 
  1331     1F25                     RC5PPS          equ	7973	;# 
  1332     1F26                     RC6PPS          equ	7974	;# 
  1333     1F27                     RC7PPS          equ	7975	;# 
  1334     1F38                     ANSELA          equ	7992	;# 
  1335     1F39                     WPUA            equ	7993	;# 
  1336     1F3A                     ODCONA          equ	7994	;# 
  1337     1F3B                     SLRCONA         equ	7995	;# 
  1338     1F3C                     INLVLA          equ	7996	;# 
  1339     1F3D                     IOCAP           equ	7997	;# 
  1340     1F3E                     IOCAN           equ	7998	;# 
  1341     1F3F                     IOCAF           equ	7999	;# 
  1342     1F43                     ANSELB          equ	8003	;# 
  1343     1F44                     WPUB            equ	8004	;# 
  1344     1F45                     ODCONB          equ	8005	;# 
  1345     1F46                     SLRCONB         equ	8006	;# 
  1346     1F47                     INLVLB          equ	8007	;# 
  1347     1F48                     IOCBP           equ	8008	;# 
  1348     1F49                     IOCBN           equ	8009	;# 
  1349     1F4A                     IOCBF           equ	8010	;# 
  1350     1F4E                     ANSELC          equ	8014	;# 
  1351     1F4F                     WPUC            equ	8015	;# 
  1352     1F50                     ODCONC          equ	8016	;# 
  1353     1F51                     SLRCONC         equ	8017	;# 
  1354     1F52                     INLVLC          equ	8018	;# 
  1355     1F53                     IOCCP           equ	8019	;# 
  1356     1F54                     IOCCN           equ	8020	;# 
  1357     1F55                     IOCCF           equ	8021	;# 
  1358     1FE4                     STATUS_SHAD     equ	8164	;# 
  1359     1FE5                     WREG_SHAD       equ	8165	;# 
  1360     1FE6                     BSR_SHAD        equ	8166	;# 
  1361     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1362     1FE8                     FSR0_SHAD       equ	8168	;# 
  1363     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1364     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1365     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1366     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1367     1FED                     STKPTR          equ	8173	;# 
  1368     1FEE                     TOSL            equ	8174	;# 
  1369     1FEF                     TOSH            equ	8175	;# 
  1370                           
  1371 ;; Function _SPI1_Deinitialize is unused but had its address taken
  1372     0000                     _SPI1_Deinitialize equ	0
  1373                           
  1374 ;; Function _SPI1_Close is unused but had its address taken
  1375     0000                     _SPI1_Close     equ	0
  1376                           
  1377 ;; Function _SPI1_BufferExchange is unused but had its address taken
  1378     0000                     _SPI1_BufferExchange equ	0
  1379                           
  1380 ;; Function _SPI1_BufferWrite is unused but had its address taken
  1381     0000                     _SPI1_BufferWrite equ	0
  1382                           
  1383 ;; Function _SPI1_BufferRead is unused but had its address taken
  1384     0000                     _SPI1_BufferRead equ	0
  1385                           
  1386 ;; Function _SPI1_ByteExchange is unused but had its address taken
  1387     0000                     _SPI1_ByteExchange equ	0
  1388                           
  1389 ;; Function _SPI1_ByteRead is unused but had its address taken
  1390     0000                     _SPI1_ByteRead  equ	0
  1391                           
  1392 ;; Function _SPI1_IsRxReady is unused but had its address taken
  1393     0000                     _SPI1_IsRxReady equ	0
  1394                           
  1395 ;; Function _SPI1_IsTxReady is unused but had its address taken
  1396     0000                     _SPI1_IsTxReady equ	0
  1397                           
  1398                           	psect	idataBANK0
  1399     01DF                     __pidataBANK0:
  1400                           
  1401                           ;initializer for _divider
  1402     01DF  34FF               	retlw	255
  1403     01E0  34FF               	retlw	255
  1404                           
  1405                           	psect	stringtext1
  1406     011E                     __pstringtext1:
  1407     011E                     _SPI1_Client:
  1408     011E  34BD               	retlw	low _SPI1_Initialize
  1409     011F  3401               	retlw	high _SPI1_Initialize
  1410     0120  3400               	retlw	0
  1411     0121  3400               	retlw	0
  1412     0122  3436               	retlw	low _SPI1_Open
  1413     0123  3400               	retlw	high _SPI1_Open
  1414     0124  3400               	retlw	0
  1415     0125  3400               	retlw	0
  1416     0126  3400               	retlw	0
  1417     0127  3400               	retlw	0
  1418     0128  3400               	retlw	0
  1419     0129  3400               	retlw	0
  1420     012A  3400               	retlw	0
  1421     012B  3400               	retlw	0
  1422     012C  3400               	retlw	0
  1423     012D  3400               	retlw	0
  1424     012E  3400               	retlw	0
  1425     012F  3400               	retlw	0
  1426     0130  34D8               	retlw	low _SPI1_ByteWrite
  1427     0131  3401               	retlw	high _SPI1_ByteWrite
  1428     0132  3400               	retlw	0
  1429     0133  3400               	retlw	0
  1430     0134  3400               	retlw	0
  1431     0135  3400               	retlw	0
  1432     0136  3400               	retlw	0
  1433     0137  3400               	retlw	0
  1434     0138  3400               	retlw	0
  1435     0139  3400               	retlw	0
  1436     013A                     __end_of_SPI1_Client:
  1437                           
  1438                           	psect	stringtext2
  1439     01B3                     __pstringtext2:
  1440     01B3                     _spi1_configuration:
  1441     01B3  3400               	retlw	0
  1442     01B4  3404               	retlw	4
  1443     01B5  3410               	retlw	16
  1444     01B6  3401               	retlw	1
  1445     01B7  3400               	retlw	0
  1446     01B8  3464               	retlw	100
  1447     01B9  3404               	retlw	4
  1448     01BA  3410               	retlw	16
  1449     01BB  3400               	retlw	0
  1450     01BC  3400               	retlw	0
  1451     01BD                     __end_of_spi1_configuration:
  1452                           
  1453                           	psect	nvBANK0
  1454     0020                     __pnvBANK0:
  1455     0020                     _TMR0_PeriodMatchCallback:
  1456     0020                     	ds	2
  1457     0022                     _INT_InterruptHandler:
  1458     0022                     	ds	2
  1459     0018                     _LATAbits       set	24
  1460     0014                     _TRISC          set	20
  1461     0013                     _TRISB          set	19
  1462     0012                     _TRISA          set	18
  1463     001A                     _LATC           set	26
  1464     0019                     _LATB           set	25
  1465     0018                     _LATA           set	24
  1466     000B                     _INTCONbits     set	11
  1467     018C                     _SSP1BUF        set	396
  1468     0190                     _SSP1CON1bits   set	400
  1469     018D                     _SSP1ADD        set	397
  1470     0192                     _SSP1CON3       set	402
  1471     0190                     _SSP1CON1       set	400
  1472     018F                     _SSP1STAT       set	399
  1473     059E                     _T0CON0bits     set	1438
  1474     059E                     _T0CON0         set	1438
  1475     059F                     _T0CON1         set	1439
  1476     059C                     _TMR0L          set	1436
  1477     059D                     _TMR0H          set	1437
  1478     070D                     _PIR1bits       set	1805
  1479     0717                     _PIE1bits       set	1815
  1480     0716                     _PIE0bits       set	1814
  1481     070C                     _PIR0bits       set	1804
  1482     0892                     _OSCTUNE        set	2194
  1483     0893                     _OSCFRQ         set	2195
  1484     0891                     _OSCEN          set	2193
  1485     1EC5                     _SSP1CLKPPS     set	7877
  1486     1EC7                     _SSP1SSPPS      set	7879
  1487     1EC6                     _SSP1DATPPS     set	7878
  1488     1E90                     _INTPPS         set	7824
  1489     1F55                     _IOCCF          set	8021
  1490     1F54                     _IOCCN          set	8020
  1491     1F53                     _IOCCP          set	8019
  1492     1F4A                     _IOCBF          set	8010
  1493     1F49                     _IOCBN          set	8009
  1494     1F48                     _IOCBP          set	8008
  1495     1F3F                     _IOCAF          set	7999
  1496     1F3E                     _IOCAN          set	7998
  1497     1F3D                     _IOCAP          set	7997
  1498     1F1C                     _RB4PPS         set	7964
  1499     1F1F                     _RB7PPS         set	7967
  1500     1F52                     _INLVLC         set	8018
  1501     1F47                     _INLVLB         set	8007
  1502     1F3C                     _INLVLA         set	7996
  1503     1F51                     _SLRCONC        set	8017
  1504     1F46                     _SLRCONB        set	8006
  1505     1F3B                     _SLRCONA        set	7995
  1506     1F50                     _ODCONC         set	8016
  1507     1F45                     _ODCONB         set	8005
  1508     1F3A                     _ODCONA         set	7994
  1509     1F4F                     _WPUC           set	8015
  1510     1F44                     _WPUB           set	8004
  1511     1F39                     _WPUA           set	7993
  1512     1F4E                     _ANSELC         set	8014
  1513     1F43                     _ANSELB         set	8003
  1514     1F38                     _ANSELA         set	7992
  1515                           
  1516                           	psect	cinit
  1517     0027                     start_initialization:	
  1518                           ; #config settings
  1519                           
  1520     0027                     __initialization:
  1521                           
  1522                           ; Initialize objects allocated to BANK0
  1523     0027  3181  21DF  3180   	fcall	__pidataBANK0	;fetch initializer
  1524     002A  00A4               	movwf	__pdataBANK0& (0+127)
  1525     002B  3181  21E0  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1526     002E  00A5               	movwf	(__pdataBANK0+1)& (0+127)
  1527                           
  1528                           ; Clear objects allocated to COMMON
  1529     002F  01FB               	clrf	__pbssCOMMON& (0+127)
  1530     0030  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  1531     0031  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
  1532     0032                     end_of_initialization:	
  1533                           ;End of C runtime variable initialization code
  1534                           
  1535     0032                     __end_of__initialization:
  1536     0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1537     0033  0140               	movlb	0
  1538     0034  3180  28DF         	ljmp	_main	;jump to C main() function
  1539                           
  1540                           	psect	bssCOMMON
  1541     007B                     __pbssCOMMON:
  1542     007B                     _led_state:
  1543     007B                     	ds	1
  1544     007C                     _timerOverflow:
  1545     007C                     	ds	1
  1546     007D                     _pushed:
  1547     007D                     	ds	1
  1548                           
  1549                           	psect	dataBANK0
  1550     0024                     __pdataBANK0:
  1551     0024                     _divider:
  1552     0024                     	ds	2
  1553                           
  1554                           	psect	cstackCOMMON
  1555     0070                     __pcstackCOMMON:
  1556     0070                     ?_INT_SetInterruptHandler:
  1557     0070                     ?_INT_DefaultInterruptHandler:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560     0070                     ?_INT_ISR:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563     0070                     ?_TMR0_ISR:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566     0070                     ?_INT_CallBack:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569     0070                     ?_CLOCK_Initialize:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572     0070                     ?_SPI1_Initialize:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575     0070                     ?_SPI1_ByteWrite:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578     0070                     ?_TMR0_Initialize:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581     0070                     ?_toggle_led:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584     0070                     ?_spi_send_data:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587     0070                     ?_TMR0_DefaultCallback:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590     0070                     ?_INTERRUPT_Initialize:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593     0070                     ?_INTERRUPT_InterruptManager:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596     0070                     ?_PIN_MANAGER_Initialize:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599     0070                     ?_SYSTEM_Initialize:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602     0070                     ?_main:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605     0070                     ?___wmul:	
  1606                           ; 2 bytes @ 0x0
  1607                           
  1608     0070                     SPI1_ByteWrite@byteData:	
  1609                           ; 2 bytes @ 0x0
  1610                           
  1611     0070                     INT_SetInterruptHandler@InterruptHandler:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614     0070                     ___wmul@multiplier:	
  1615                           ; 2 bytes @ 0x0
  1616                           
  1617     0070                     ??_INT_DefaultInterruptHandler:	
  1618                           ; 2 bytes @ 0x0
  1619                           
  1620     0070                     ??_INT_ISR:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623     0070                     ??_TMR0_ISR:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626     0070                     ??_INT_CallBack:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629     0070                     ??_CLOCK_Initialize:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632     0070                     ??_SPI1_Initialize:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635     0070                     ??_TMR0_Initialize:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638     0070                     ??_toggle_led:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641     0070                     ??_TMR0_DefaultCallback:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644     0070                     ??_INTERRUPT_InterruptManager:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647     0070                     ??_PIN_MANAGER_Initialize:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650                           
  1651                           ; 1 bytes @ 0x0
  1652     0070                     	ds	1
  1653     0071                     ??_SPI1_ByteWrite:
  1654                           
  1655                           ; 1 bytes @ 0x1
  1656     0071                     	ds	1
  1657     0072                     ___wmul@multiplicand:
  1658     0072                     ??_INT_SetInterruptHandler:	
  1659                           ; 2 bytes @ 0x2
  1660                           
  1661     0072                     ??_INTERRUPT_Initialize:	
  1662                           ; 1 bytes @ 0x2
  1663                           
  1664     0072                     ??_SYSTEM_Initialize:	
  1665                           ; 1 bytes @ 0x2
  1666                           
  1667                           
  1668                           ; 1 bytes @ 0x2
  1669     0072                     	ds	2
  1670     0074                     ___wmul@product:
  1671     0074                     ??___wmul:	
  1672                           ; 2 bytes @ 0x4
  1673                           
  1674                           
  1675                           ; 1 bytes @ 0x4
  1676     0074                     	ds	2
  1677     0076                     ?_SPI1_Open:
  1678     0076                     SPI1_Open@spiConfigIndex:	
  1679                           ; 1 bytes @ 0x6
  1680                           
  1681                           
  1682                           ; 1 bytes @ 0x6
  1683     0076                     	ds	1
  1684     0077                     ??_SPI1_Open:
  1685                           
  1686                           ; 1 bytes @ 0x7
  1687     0077                     	ds	2
  1688     0079                     SPI1_Open@returnValue:
  1689                           
  1690                           ; 1 bytes @ 0x9
  1691     0079                     	ds	1
  1692     007A                     spi_send_data@data:
  1693     007A                     ??_spi_send_data:	
  1694                           ; 1 bytes @ 0xA
  1695                           
  1696                           
  1697                           ; 1 bytes @ 0xA
  1698     007A                     	ds	1
  1699     007B                     ??_main:
  1700                           
  1701                           	psect	maintext
  1702     00DF                     __pmaintext:	
  1703                           ; 1 bytes @ 0xB
  1704 ;;
  1705 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1706 ;;
  1707 ;; *************** function _main *****************
  1708 ;; Defined at:
  1709 ;;		line 46 in file "main.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  2  287[None  ] int 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : B3F/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1723 ;;      Params:         0       0       0       0       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0       0
  1726 ;;      Totals:         0       0       0       0       0       0       0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels required when called: 7
  1729 ;; This function calls:
  1730 ;;		_SYSTEM_Initialize
  1731 ;;		_TMR0_Initialize
  1732 ;;		_spi_send_data
  1733 ;;		_toggle_led
  1734 ;; This function is called by:
  1735 ;;		Startup code after reset
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739     00DF                     _main:	
  1740                           ;psect for function _main
  1741                           
  1742     00DF                     l1260:	
  1743                           ;incstack = 0
  1744                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1745                           
  1746                           
  1747                           ;main.c: 47:     SYSTEM_Initialize();
  1748     00DF  3181  218C  3180   	fcall	_SYSTEM_Initialize
  1749     00E2                     l1262:
  1750                           
  1751                           ;main.c: 53:     (INTCONbits.GIE = 1);
  1752     00E2  178B               	bsf	11,7	;volatile
  1753     00E3                     l1264:
  1754                           
  1755                           ;main.c: 59:     (INTCONbits.PEIE = 1);
  1756     00E3  170B               	bsf	11,6	;volatile
  1757                           
  1758                           ;main.c: 61:     TMR0_Initialize();
  1759     00E4  3181  213A  3180   	fcall	_TMR0_Initialize
  1760     00E7                     l1266:
  1761                           
  1762                           ;main.c: 65:     pushed= 0;
  1763     00E7  01FD               	clrf	_pushed
  1764     00E8                     l1268:
  1765                           
  1766                           ;main.c: 66:     timerOverflow=0;
  1767     00E8  01FC               	clrf	_timerOverflow
  1768     00E9                     l1270:
  1769                           
  1770                           ;main.c: 70:         if (timerOverflow) {
  1771     00E9  087C               	movf	_timerOverflow,w
  1772     00EA  1903               	btfsc	3,2
  1773     00EB  28ED               	goto	u431
  1774     00EC  28EE               	goto	u430
  1775     00ED                     u431:
  1776     00ED  28F2               	goto	l1276
  1777     00EE                     u430:
  1778     00EE                     l1272:
  1779                           
  1780                           ;main.c: 71:             toggle_led();
  1781     00EE  3181  216E  3180   	fcall	_toggle_led
  1782     00F1                     l1274:
  1783                           
  1784                           ;main.c: 72:             timerOverflow = 0;
  1785     00F1  01FC               	clrf	_timerOverflow
  1786     00F2                     l1276:
  1787                           
  1788                           ;main.c: 74:         if (pushed) {
  1789     00F2  087D               	movf	_pushed,w
  1790     00F3  1903               	btfsc	3,2
  1791     00F4  28F6               	goto	u441
  1792     00F5  28F7               	goto	u440
  1793     00F6                     u441:
  1794     00F6  28E9               	goto	l1270
  1795     00F7                     u440:
  1796     00F7                     l1278:
  1797                           
  1798                           ;main.c: 75:             spi_send_data(0x33);
  1799     00F7  3033               	movlw	51
  1800     00F8  3181  215E  3180   	fcall	_spi_send_data
  1801     00FB                     l1280:
  1802                           
  1803                           ;main.c: 76:             pushed = 0;
  1804     00FB  01FD               	clrf	_pushed
  1805     00FC  28E9               	goto	l1270
  1806     00FD  3180  2825         	ljmp	start
  1807     00FF                     __end_of_main:
  1808                           
  1809                           	psect	text1
  1810     016E                     __ptext1:	
  1811 ;; *************** function _toggle_led *****************
  1812 ;; Defined at:
  1813 ;;		line 81 in file "main.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1827 ;;      Params:         0       0       0       0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 4
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841     016E                     _toggle_led:	
  1842                           ;psect for function _toggle_led
  1843                           
  1844     016E                     l1020:	
  1845                           ;incstack = 0
  1846                           ; Regs used in _toggle_led: [wreg+status,2+status,0]
  1847                           
  1848                           
  1849                           ;main.c: 82:     led_state = ~led_state;
  1850     016E  037B               	decf	_led_state,w
  1851     016F  1D03               	btfss	3,2
  1852     0170  2972               	goto	u91
  1853     0171  2974               	goto	u90
  1854     0172                     u91:
  1855     0172  3001               	movlw	1
  1856     0173  2975               	goto	u100
  1857     0174                     u90:
  1858     0174  3000               	movlw	0
  1859     0175                     u100:
  1860     0175  00FB               	movwf	_led_state
  1861     0176                     l1022:
  1862                           
  1863                           ;main.c: 83:     LATAbits.LATA2 = led_state;
  1864     0176  0C7B               	rrf	_led_state,w
  1865     0177  0140               	movlb	0	; select bank0
  1866     0178  1C03               	skipc
  1867     0179  1118               	bcf	24,2	;volatile
  1868     017A  1803               	skipnc
  1869     017B  1518               	bsf	24,2	;volatile
  1870     017C                     l296:
  1871     017C  0008               	return
  1872     017D                     __end_of_toggle_led:
  1873                           
  1874                           	psect	text2
  1875     015E                     __ptext2:	
  1876 ;; *************** function _spi_send_data *****************
  1877 ;; Defined at:
  1878 ;;		line 86 in file "main.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  data            1    wreg     unsigned char 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  data            1   10[COMMON] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1892 ;;      Params:         0       0       0       0       0       0       0       0
  1893 ;;      Locals:         1       0       0       0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0
  1895 ;;      Totals:         1       0       0       0       0       0       0       0
  1896 ;;Total ram usage:        1 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; Hardware stack levels required when called: 6
  1899 ;; This function calls:
  1900 ;;		_SPI1_ByteWrite
  1901 ;;		_SPI1_Open
  1902 ;; This function is called by:
  1903 ;;		_main
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907     015E                     _spi_send_data:	
  1908                           ;psect for function _spi_send_data
  1909                           
  1910                           
  1911                           ;incstack = 0
  1912                           ; Regs used in _spi_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1913                           ;spi_send_data@data stored from wreg
  1914     015E  00FA               	movwf	spi_send_data@data
  1915     015F                     l1244:
  1916                           
  1917                           ;main.c: 87:     if (SPI1_Open(0)) {
  1918     015F  01F6               	clrf	SPI1_Open@spiConfigIndex
  1919     0160  3180  2036  3181   	fcall	_SPI1_Open
  1920     0163  3A00               	xorlw	0
  1921     0164  1903               	skipnz
  1922     0165  2967               	goto	u371
  1923     0166  2968               	goto	u370
  1924     0167                     u371:
  1925     0167  296D               	goto	l300
  1926     0168                     u370:
  1927     0168                     l1246:
  1928                           
  1929                           ;main.c: 88:         SPI1_ByteWrite(data);
  1930     0168  087A               	movf	spi_send_data@data,w
  1931     0169  00F0               	movwf	SPI1_ByteWrite@byteData
  1932     016A  3181  21D8  3181   	fcall	_SPI1_ByteWrite
  1933     016D                     l300:
  1934     016D  0008               	return
  1935     016E                     __end_of_spi_send_data:
  1936                           
  1937                           	psect	text3
  1938     0036                     __ptext3:	
  1939 ;; *************** function _SPI1_Open *****************
  1940 ;; Defined at:
  1941 ;;		line 81 in file "mcc_generated_files/spi/src/mssp1.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  spiConfigInd    1    6[COMMON] unsigned char 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  returnValue     1    9[COMMON] _Bool 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      _Bool 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1955 ;;      Params:         1       0       0       0       0       0       0       0
  1956 ;;      Locals:         1       0       0       0       0       0       0       0
  1957 ;;      Temps:          2       0       0       0       0       0       0       0
  1958 ;;      Totals:         4       0       0       0       0       0       0       0
  1959 ;;Total ram usage:        4 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 5
  1962 ;; This function calls:
  1963 ;;		___wmul
  1964 ;; This function is called by:
  1965 ;;		_spi_send_data
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969     0036                     _SPI1_Open:	
  1970                           ;psect for function _SPI1_Open
  1971                           
  1972     0036                     l1190:	
  1973                           ;incstack = 0
  1974                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1975                           
  1976     0036                     l1192:
  1977                           
  1978                           ;mcc_generated_files/spi/src/mssp1.c: 84:     if (SSP1CON1bits.SSPEN == 0)
  1979     0036  0143               	movlb	3	; select bank3
  1980     0037  1A90               	btfsc	16,5	;volatile
  1981     0038  283A               	goto	u341
  1982     0039  283B               	goto	u340
  1983     003A                     u341:
  1984     003A  289F               	goto	l1200
  1985     003B                     u340:
  1986     003B                     l1194:
  1987                           
  1988                           ;mcc_generated_files/spi/src/mssp1.c: 85:     {;mcc_generated_files/spi/src/mssp1.c: 86:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
  1989     003B  0876               	movf	SPI1_Open@spiConfigIndex,w
  1990     003C  00F7               	movwf	??_SPI1_Open
  1991     003D  01F8               	clrf	??_SPI1_Open+1
  1992     003E  0877               	movf	??_SPI1_Open,w
  1993     003F  00F0               	movwf	___wmul@multiplier
  1994     0040  0878               	movf	??_SPI1_Open+1,w
  1995     0041  00F1               	movwf	___wmul@multiplier+1
  1996     0042  3005               	movlw	5
  1997     0043  00F2               	movwf	___wmul@multiplicand
  1998     0044  3000               	movlw	0
  1999     0045  00F3               	movwf	___wmul@multiplicand+1
  2000     0046  3180  20FF  3180   	fcall	___wmul
  2001     0049  30B3               	movlw	low _spi1_configuration
  2002     004A  0770               	addwf	?___wmul,w
  2003     004B  0084               	movwf	4
  2004     004C  3001               	movlw	high _spi1_configuration
  2005     004D  3D71               	addwfc	?___wmul+1,w
  2006     004E  3880               	iorlw	128
  2007     004F  0085               	movwf	5
  2008     0050  0800               	movf	0,w	;code access
  2009     0051  0143               	movlb	3	; select bank3
  2010     0052  008F               	movwf	15	;volatile
  2011                           
  2012                           ;mcc_generated_files/spi/src/mssp1.c: 87:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
  2013     0053  0876               	movf	SPI1_Open@spiConfigIndex,w
  2014     0054  00F7               	movwf	??_SPI1_Open
  2015     0055  01F8               	clrf	??_SPI1_Open+1
  2016     0056  0877               	movf	??_SPI1_Open,w
  2017     0057  00F0               	movwf	___wmul@multiplier
  2018     0058  0878               	movf	??_SPI1_Open+1,w
  2019     0059  00F1               	movwf	___wmul@multiplier+1
  2020     005A  3005               	movlw	5
  2021     005B  00F2               	movwf	___wmul@multiplicand
  2022     005C  3000               	movlw	0
  2023     005D  00F3               	movwf	___wmul@multiplicand+1
  2024     005E  3180  20FF  3180   	fcall	___wmul
  2025     0061  30B4               	movlw	low (_spi1_configuration+1)
  2026     0062  0770               	addwf	?___wmul,w
  2027     0063  0084               	movwf	4
  2028     0064  3001               	movlw	high (_spi1_configuration+1)
  2029     0065  3D71               	addwfc	?___wmul+1,w
  2030     0066  3880               	iorlw	128
  2031     0067  0085               	movwf	5
  2032     0068  0800               	movf	0,w	;code access
  2033     0069  0143               	movlb	3	; select bank3
  2034     006A  0090               	movwf	16	;volatile
  2035                           
  2036                           ;mcc_generated_files/spi/src/mssp1.c: 88:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
  2037     006B  0876               	movf	SPI1_Open@spiConfigIndex,w
  2038     006C  00F7               	movwf	??_SPI1_Open
  2039     006D  01F8               	clrf	??_SPI1_Open+1
  2040     006E  0877               	movf	??_SPI1_Open,w
  2041     006F  00F0               	movwf	___wmul@multiplier
  2042     0070  0878               	movf	??_SPI1_Open+1,w
  2043     0071  00F1               	movwf	___wmul@multiplier+1
  2044     0072  3005               	movlw	5
  2045     0073  00F2               	movwf	___wmul@multiplicand
  2046     0074  3000               	movlw	0
  2047     0075  00F3               	movwf	___wmul@multiplicand+1
  2048     0076  3180  20FF  3180   	fcall	___wmul
  2049     0079  30B5               	movlw	low (_spi1_configuration+2)
  2050     007A  0770               	addwf	?___wmul,w
  2051     007B  0084               	movwf	4
  2052     007C  3001               	movlw	high (_spi1_configuration+2)
  2053     007D  3D71               	addwfc	?___wmul+1,w
  2054     007E  3880               	iorlw	128
  2055     007F  0085               	movwf	5
  2056     0080  0800               	movf	0,w	;code access
  2057     0081  0143               	movlb	3	; select bank3
  2058     0082  0092               	movwf	18	;volatile
  2059                           
  2060                           ;mcc_generated_files/spi/src/mssp1.c: 89:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
  2061     0083  0876               	movf	SPI1_Open@spiConfigIndex,w
  2062     0084  00F7               	movwf	??_SPI1_Open
  2063     0085  01F8               	clrf	??_SPI1_Open+1
  2064     0086  0877               	movf	??_SPI1_Open,w
  2065     0087  00F0               	movwf	___wmul@multiplier
  2066     0088  0878               	movf	??_SPI1_Open+1,w
  2067     0089  00F1               	movwf	___wmul@multiplier+1
  2068     008A  3005               	movlw	5
  2069     008B  00F2               	movwf	___wmul@multiplicand
  2070     008C  3000               	movlw	0
  2071     008D  00F3               	movwf	___wmul@multiplicand+1
  2072     008E  3180  20FF  3180   	fcall	___wmul
  2073     0091  30B6               	movlw	low (_spi1_configuration+3)
  2074     0092  0770               	addwf	?___wmul,w
  2075     0093  0084               	movwf	4
  2076     0094  3001               	movlw	high (_spi1_configuration+3)
  2077     0095  3D71               	addwfc	?___wmul+1,w
  2078     0096  3880               	iorlw	128
  2079     0097  0085               	movwf	5
  2080     0098  0800               	movf	0,w	;code access
  2081     0099  0143               	movlb	3	; select bank3
  2082     009A  008D               	movwf	13	;volatile
  2083     009B                     l1196:
  2084                           
  2085                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON1bits.SSPEN = 1;
  2086     009B  1690               	bsf	16,5	;volatile
  2087     009C                     l1198:
  2088                           
  2089                           ;mcc_generated_files/spi/src/mssp1.c: 93:         returnValue = 1;
  2090     009C  3001               	movlw	1
  2091     009D  00F9               	movwf	SPI1_Open@returnValue
  2092                           
  2093                           ;mcc_generated_files/spi/src/mssp1.c: 94:     }
  2094     009E  28A0               	goto	l1202
  2095     009F                     l1200:
  2096                           
  2097                           ;mcc_generated_files/spi/src/mssp1.c: 96:     {;mcc_generated_files/spi/src/mssp1.c: 97:
      +                                   returnValue = 0;
  2098     009F  01F9               	clrf	SPI1_Open@returnValue
  2099     00A0                     l1202:
  2100                           
  2101                           ;mcc_generated_files/spi/src/mssp1.c: 99:     return returnValue;
  2102     00A0  0879               	movf	SPI1_Open@returnValue,w
  2103     00A1                     l197:
  2104     00A1  0008               	return
  2105     00A2                     __end_of_SPI1_Open:
  2106                           
  2107                           	psect	text4
  2108     00FF                     __ptext4:	
  2109 ;; *************** function ___wmul *****************
  2110 ;; Defined at:
  2111 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  multiplier      2    0[COMMON] unsigned int 
  2114 ;;  multiplicand    2    2[COMMON] unsigned int 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  product         2    4[COMMON] unsigned int 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  2    0[COMMON] unsigned int 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2126 ;;      Params:         4       0       0       0       0       0       0       0
  2127 ;;      Locals:         2       0       0       0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0
  2129 ;;      Totals:         6       0       0       0       0       0       0       0
  2130 ;;Total ram usage:        6 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; Hardware stack levels required when called: 4
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_SPI1_Open
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140     00FF                     ___wmul:	
  2141                           ;psect for function ___wmul
  2142                           
  2143     00FF                     l1166:	
  2144                           ;incstack = 0
  2145                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2146                           
  2147     00FF  01F4               	clrf	___wmul@product
  2148     0100  01F5               	clrf	___wmul@product+1
  2149     0101                     l1168:
  2150     0101  1C70               	btfss	___wmul@multiplier,0
  2151     0102  2904               	goto	u291
  2152     0103  2905               	goto	u290
  2153     0104                     u291:
  2154     0104  2909               	goto	l434
  2155     0105                     u290:
  2156     0105                     l1170:
  2157     0105  0872               	movf	___wmul@multiplicand,w
  2158     0106  07F4               	addwf	___wmul@product,f
  2159     0107  0873               	movf	___wmul@multiplicand+1,w
  2160     0108  3DF5               	addwfc	___wmul@product+1,f
  2161     0109                     l434:
  2162     0109  3001               	movlw	1
  2163     010A                     u305:
  2164     010A  35F2               	lslf	___wmul@multiplicand,f
  2165     010B  0DF3               	rlf	___wmul@multiplicand+1,f
  2166     010C  0B89               	decfsz	9,f
  2167     010D  290A               	goto	u305
  2168     010E                     l1172:
  2169     010E  3001               	movlw	1
  2170     010F                     u315:
  2171     010F  36F1               	lsrf	___wmul@multiplier+1,f
  2172     0110  0CF0               	rrf	___wmul@multiplier,f
  2173     0111  0B89               	decfsz	9,f
  2174     0112  290F               	goto	u315
  2175     0113                     l1174:
  2176     0113  0870               	movf	___wmul@multiplier,w
  2177     0114  0471               	iorwf	___wmul@multiplier+1,w
  2178     0115  1D03               	btfss	3,2
  2179     0116  2918               	goto	u321
  2180     0117  2919               	goto	u320
  2181     0118                     u321:
  2182     0118  2901               	goto	l1168
  2183     0119                     u320:
  2184     0119                     l1176:
  2185     0119  0875               	movf	___wmul@product+1,w
  2186     011A  00F1               	movwf	?___wmul+1
  2187     011B  0874               	movf	___wmul@product,w
  2188     011C  00F0               	movwf	?___wmul
  2189     011D                     l436:
  2190     011D  0008               	return
  2191     011E                     __end_of___wmul:
  2192                           
  2193                           	psect	text5
  2194     01D8                     __ptext5:	
  2195 ;; *************** function _SPI1_ByteWrite *****************
  2196 ;; Defined at:
  2197 ;;		line 171 in file "mcc_generated_files/spi/src/mssp1.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  byteData        1    0[COMMON] unsigned char 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2211 ;;      Params:         1       0       0       0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0
  2214 ;;      Totals:         1       0       0       0       0       0       0       0
  2215 ;;Total ram usage:        1 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 4
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_spi_send_data
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225     01D8                     _SPI1_ByteWrite:	
  2226                           ;psect for function _SPI1_ByteWrite
  2227                           
  2228     01D8                     l1206:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _SPI1_ByteWrite: [wreg]
  2231                           
  2232                           
  2233                           ;mcc_generated_files/spi/src/mssp1.c: 171: void SPI1_ByteWrite(uint8_t byteData);mcc_gen
      +                          erated_files/spi/src/mssp1.c: 172: {;mcc_generated_files/spi/src/mssp1.c: 173:     SSP1B
      +                          UF = byteData;
  2234     01D8  0870               	movf	SPI1_ByteWrite@byteData,w
  2235     01D9  0143               	movlb	3	; select bank3
  2236     01DA  008C               	movwf	12	;volatile
  2237     01DB                     l236:
  2238     01DB  0008               	return
  2239     01DC                     __end_of_SPI1_ByteWrite:
  2240                           
  2241                           	psect	text6
  2242     013A                     __ptext6:	
  2243 ;; *************** function _TMR0_Initialize *****************
  2244 ;; Defined at:
  2245 ;;		line 45 in file "mcc_generated_files/timer/src/tmr0.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, status,2
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2259 ;;      Params:         0       0       0       0       0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0       0
  2262 ;;      Totals:         0       0       0       0       0       0       0       0
  2263 ;;Total ram usage:        0 bytes
  2264 ;; Hardware stack levels used: 1
  2265 ;; Hardware stack levels required when called: 4
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273     013A                     _TMR0_Initialize:	
  2274                           ;psect for function _TMR0_Initialize
  2275                           
  2276     013A                     l1230:	
  2277                           ;incstack = 0
  2278                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  2279                           
  2280                           
  2281                           ;mcc_generated_files/timer/src/tmr0.c: 47:     TMR0H = 0xFF;
  2282     013A  30FF               	movlw	255
  2283     013B  014B               	movlb	11	; select bank11
  2284     013C  009D               	movwf	29	;volatile
  2285     013D                     l1232:
  2286                           
  2287                           ;mcc_generated_files/timer/src/tmr0.c: 48:     TMR0L = 0x0;
  2288     013D  019C               	clrf	28	;volatile
  2289     013E                     l1234:
  2290                           
  2291                           ;mcc_generated_files/timer/src/tmr0.c: 50:     T0CON1 = (3 << 0x5)
  2292     013E  3070               	movlw	112
  2293     013F  009F               	movwf	31	;volatile
  2294     0140                     l1236:
  2295                           
  2296                           ;mcc_generated_files/timer/src/tmr0.c: 54:     TMR0_PeriodMatchCallback = TMR0_DefaultCa
      +                          llback;
  2297     0140  304C               	movlw	low _TMR0_DefaultCallback
  2298     0141  0140               	movlb	0	; select bank0
  2299     0142  00A0               	movwf	_TMR0_PeriodMatchCallback
  2300     0143  3001               	movlw	high _TMR0_DefaultCallback
  2301     0144  00A1               	movwf	_TMR0_PeriodMatchCallback+1
  2302     0145                     l1238:
  2303                           
  2304                           ;mcc_generated_files/timer/src/tmr0.c: 56:     PIR0bits.TMR0IF = 0;
  2305     0145  014E               	movlb	14	; select bank14
  2306     0146  128C               	bcf	12,5	;volatile
  2307     0147                     l1240:
  2308                           
  2309                           ;mcc_generated_files/timer/src/tmr0.c: 57:     PIE0bits.TMR0IE = 1;
  2310     0147  1696               	bsf	22,5	;volatile
  2311     0148                     l1242:
  2312                           
  2313                           ;mcc_generated_files/timer/src/tmr0.c: 59:     T0CON0 = (0 << 0x0)
  2314     0148  3080               	movlw	128
  2315     0149  014B               	movlb	11	; select bank11
  2316     014A  009E               	movwf	30	;volatile
  2317     014B                     l325:
  2318     014B  0008               	return
  2319     014C                     __end_of_TMR0_Initialize:
  2320                           
  2321                           	psect	text7
  2322     018C                     __ptext7:	
  2323 ;; *************** function _SYSTEM_Initialize *****************
  2324 ;; Defined at:
  2325 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, pclath, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2339 ;;      Params:         0       0       0       0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 6
  2346 ;; This function calls:
  2347 ;;		_CLOCK_Initialize
  2348 ;;		_INTERRUPT_Initialize
  2349 ;;		_PIN_MANAGER_Initialize
  2350 ;;		_SPI1_Initialize
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356     018C                     _SYSTEM_Initialize:	
  2357                           ;psect for function _SYSTEM_Initialize
  2358                           
  2359     018C                     l1226:	
  2360                           ;incstack = 0
  2361                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2362                           
  2363                           
  2364                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  2365     018C  3181  21CC  3181   	fcall	_CLOCK_Initialize
  2366                           
  2367                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  2368     018F  3180  20A2  3181   	fcall	_PIN_MANAGER_Initialize
  2369                           
  2370                           ;mcc_generated_files/system/src/system.c: 44:     SPI1_Initialize();
  2371     0192  3181  21BD  3181   	fcall	_SPI1_Initialize
  2372     0195                     l1228:
  2373                           
  2374                           ;mcc_generated_files/system/src/system.c: 45:     INTERRUPT_Initialize();
  2375     0195  3181  2199  3181   	fcall	_INTERRUPT_Initialize
  2376     0198                     l142:
  2377     0198  0008               	return
  2378     0199                     __end_of_SYSTEM_Initialize:
  2379                           
  2380                           	psect	text8
  2381     01BD                     __ptext8:	
  2382 ;; *************** function _SPI1_Initialize *****************
  2383 ;; Defined at:
  2384 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		status,2
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2398 ;;      Params:         0       0       0       0       0       0       0       0
  2399 ;;      Locals:         0       0       0       0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0       0
  2401 ;;      Totals:         0       0       0       0       0       0       0       0
  2402 ;;Total ram usage:        0 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; Hardware stack levels required when called: 4
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_SYSTEM_Initialize
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412     01BD                     _SPI1_Initialize:	
  2413                           ;psect for function _SPI1_Initialize
  2414                           
  2415     01BD                     l962:	
  2416                           ;incstack = 0
  2417                           ; Regs used in _SPI1_Initialize: [status,2]
  2418                           
  2419                           
  2420                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
  2421     01BD  014E               	movlb	14	; select bank14
  2422     01BE  1097               	bcf	23,1	;volatile
  2423                           
  2424                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
  2425     01BF  108D               	bcf	13,1	;volatile
  2426     01C0                     l964:
  2427                           
  2428                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
  2429     01C0  0143               	movlb	3	; select bank3
  2430     01C1  018F               	clrf	15	;volatile
  2431                           
  2432                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
  2433     01C2  0190               	clrf	16	;volatile
  2434                           
  2435                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
  2436     01C3  0192               	clrf	18	;volatile
  2437                           
  2438                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
  2439     01C4  018D               	clrf	13	;volatile
  2440     01C5                     l189:
  2441     01C5  0008               	return
  2442     01C6                     __end_of_SPI1_Initialize:
  2443                           
  2444                           	psect	text9
  2445     00A2                     __ptext9:	
  2446 ;; *************** function _PIN_MANAGER_Initialize *****************
  2447 ;; Defined at:
  2448 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		status,2
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2462 ;;      Params:         0       0       0       0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0       0
  2465 ;;      Totals:         0       0       0       0       0       0       0       0
  2466 ;;Total ram usage:        0 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 4
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_SYSTEM_Initialize
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476     00A2                     _PIN_MANAGER_Initialize:	
  2477                           ;psect for function _PIN_MANAGER_Initialize
  2478                           
  2479     00A2                     l920:	
  2480                           ;incstack = 0
  2481                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2482                           
  2483                           
  2484                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  2485     00A2  0140               	movlb	0	; select bank0
  2486     00A3  0198               	clrf	24	;volatile
  2487                           
  2488                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  2489     00A4  0199               	clrf	25	;volatile
  2490                           
  2491                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  2492     00A5  019A               	clrf	26	;volatile
  2493     00A6                     l922:
  2494                           
  2495                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3B;
  2496     00A6  303B               	movlw	59
  2497     00A7  0092               	movwf	18	;volatile
  2498     00A8                     l924:
  2499                           
  2500                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x70;
  2501     00A8  3070               	movlw	112
  2502     00A9  0093               	movwf	19	;volatile
  2503     00AA                     l926:
  2504                           
  2505                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xFF;
  2506     00AA  30FF               	movlw	255
  2507     00AB  0094               	movwf	20	;volatile
  2508     00AC                     l928:
  2509                           
  2510                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x33;
  2511     00AC  3033               	movlw	51
  2512     00AD  017E               	movlb	62	; select bank62
  2513     00AE  00B8               	movwf	56	;volatile
  2514     00AF                     l930:
  2515                           
  2516                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x20;
  2517     00AF  3020               	movlw	32
  2518     00B0  00C3               	movwf	67	;volatile
  2519     00B1                     l932:
  2520                           
  2521                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xBB;
  2522     00B1  30BB               	movlw	187
  2523     00B2  00CE               	movwf	78	;volatile
  2524                           
  2525                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
  2526     00B3  01B9               	clrf	57	;volatile
  2527                           
  2528                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
  2529     00B4  01C4               	clrf	68	;volatile
  2530                           
  2531                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
  2532     00B5  01CF               	clrf	79	;volatile
  2533                           
  2534                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
  2535     00B6  01BA               	clrf	58	;volatile
  2536                           
  2537                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
  2538     00B7  01C5               	clrf	69	;volatile
  2539                           
  2540                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
  2541     00B8  01D0               	clrf	80	;volatile
  2542     00B9                     l934:
  2543                           
  2544                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
  2545     00B9  3037               	movlw	55
  2546     00BA  00BB               	movwf	59	;volatile
  2547     00BB                     l936:
  2548                           
  2549                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
  2550     00BB  30F0               	movlw	240
  2551     00BC  00C6               	movwf	70	;volatile
  2552     00BD                     l938:
  2553                           
  2554                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
  2555     00BD  30FF               	movlw	255
  2556     00BE  00D1               	movwf	81	;volatile
  2557     00BF                     l940:
  2558                           
  2559                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
  2560     00BF  303F               	movlw	63
  2561     00C0  00BC               	movwf	60	;volatile
  2562     00C1                     l942:
  2563                           
  2564                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
  2565     00C1  30F0               	movlw	240
  2566     00C2  00C7               	movwf	71	;volatile
  2567     00C3                     l944:
  2568                           
  2569                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
  2570     00C3  30FF               	movlw	255
  2571     00C4  00D2               	movwf	82	;volatile
  2572     00C5                     l946:
  2573                           
  2574                           ;mcc_generated_files/system/src/pins.c: 91:     INTPPS = 0x12;
  2575     00C5  3012               	movlw	18
  2576     00C6  017D               	movlb	61	; select bank61
  2577     00C7  0090               	movwf	16	;volatile
  2578     00C8                     l948:
  2579                           
  2580                           ;mcc_generated_files/system/src/pins.c: 92:     SSP1DATPPS = 0xE;
  2581     00C8  300E               	movlw	14
  2582     00C9  00C6               	movwf	70	;volatile
  2583     00CA                     l950:
  2584                           
  2585                           ;mcc_generated_files/system/src/pins.c: 93:     SSP1SSPPS = 0x16;
  2586     00CA  3016               	movlw	22
  2587     00CB  00C7               	movwf	71	;volatile
  2588     00CC                     l952:
  2589                           
  2590                           ;mcc_generated_files/system/src/pins.c: 94:     RB7PPS = 0x08;
  2591     00CC  3008               	movlw	8
  2592     00CD  017E               	movlb	62	; select bank62
  2593     00CE  009F               	movwf	31	;volatile
  2594     00CF                     l954:
  2595                           
  2596                           ;mcc_generated_files/system/src/pins.c: 95:     SSP1CLKPPS = 0xC;
  2597     00CF  300C               	movlw	12
  2598     00D0  017D               	movlb	61	; select bank61
  2599     00D1  00C5               	movwf	69	;volatile
  2600     00D2                     l956:
  2601                           
  2602                           ;mcc_generated_files/system/src/pins.c: 96:     RB4PPS = 0x07;
  2603     00D2  3007               	movlw	7
  2604     00D3  017E               	movlb	62	; select bank62
  2605     00D4  009C               	movwf	28	;volatile
  2606                           
  2607                           ;mcc_generated_files/system/src/pins.c: 105:     IOCAP = 0x0;
  2608     00D5  01BD               	clrf	61	;volatile
  2609                           
  2610                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAN = 0x0;
  2611     00D6  01BE               	clrf	62	;volatile
  2612                           
  2613                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAF = 0x0;
  2614     00D7  01BF               	clrf	63	;volatile
  2615                           
  2616                           ;mcc_generated_files/system/src/pins.c: 108:     IOCBP = 0x0;
  2617     00D8  01C8               	clrf	72	;volatile
  2618                           
  2619                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBN = 0x0;
  2620     00D9  01C9               	clrf	73	;volatile
  2621                           
  2622                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBF = 0x0;
  2623     00DA  01CA               	clrf	74	;volatile
  2624                           
  2625                           ;mcc_generated_files/system/src/pins.c: 111:     IOCCP = 0x0;
  2626     00DB  01D3               	clrf	83	;volatile
  2627                           
  2628                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCN = 0x0;
  2629     00DC  01D4               	clrf	84	;volatile
  2630                           
  2631                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCF = 0x0;
  2632     00DD  01D5               	clrf	85	;volatile
  2633     00DE                     l126:
  2634     00DE  0008               	return
  2635     00DF                     __end_of_PIN_MANAGER_Initialize:
  2636                           
  2637                           	psect	text10
  2638     0199                     __ptext10:	
  2639 ;; *************** function _INTERRUPT_Initialize *****************
  2640 ;; Defined at:
  2641 ;;		line 41 in file "mcc_generated_files/system/src/interrupt.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2655 ;;      Params:         0       0       0       0       0       0       0       0
  2656 ;;      Locals:         0       0       0       0       0       0       0       0
  2657 ;;      Temps:          0       0       0       0       0       0       0       0
  2658 ;;      Totals:         0       0       0       0       0       0       0       0
  2659 ;;Total ram usage:        0 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 5
  2662 ;; This function calls:
  2663 ;;		_INT_SetInterruptHandler
  2664 ;; This function is called by:
  2665 ;;		_SYSTEM_Initialize
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669     0199                     _INTERRUPT_Initialize:	
  2670                           ;psect for function _INTERRUPT_Initialize
  2671                           
  2672     0199                     l1180:	
  2673                           ;incstack = 0
  2674                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2675                           
  2676                           
  2677                           ;mcc_generated_files/system/src/interrupt.c: 45:         (PIR0bits.INTF = 0);
  2678     0199  014E               	movlb	14	; select bank14
  2679     019A  100C               	bcf	12,0	;volatile
  2680                           
  2681                           ;mcc_generated_files/system/src/interrupt.c: 46:     (INTCONbits.INTEDG = 0);
  2682     019B  100B               	bcf	11,0	;volatile
  2683     019C                     l1182:
  2684                           
  2685                           ;mcc_generated_files/system/src/interrupt.c: 48:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  2686     019C  30DC               	movlw	low _INT_DefaultInterruptHandler
  2687     019D  00F0               	movwf	INT_SetInterruptHandler@InterruptHandler
  2688     019E  3001               	movlw	high _INT_DefaultInterruptHandler
  2689     019F  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2690     01A0  3181  21C6  3181   	fcall	_INT_SetInterruptHandler
  2691     01A3                     l1184:
  2692                           
  2693                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIE0bits.INTE = 1);
  2694     01A3  014E               	movlb	14	; select bank14
  2695     01A4  1416               	bsf	22,0	;volatile
  2696     01A5                     l27:
  2697     01A5  0008               	return
  2698     01A6                     __end_of_INTERRUPT_Initialize:
  2699                           
  2700                           	psect	text11
  2701     01C6                     __ptext11:	
  2702 ;; *************** function _INT_SetInterruptHandler *****************
  2703 ;; Defined at:
  2704 ;;		line 101 in file "mcc_generated_files/system/src/interrupt.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2707 ;;		 -> INT_DefaultInterruptHandler(1), 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;		None
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2719 ;;      Params:         2       0       0       0       0       0       0       0
  2720 ;;      Locals:         0       0       0       0       0       0       0       0
  2721 ;;      Temps:          0       0       0       0       0       0       0       0
  2722 ;;      Totals:         2       0       0       0       0       0       0       0
  2723 ;;Total ram usage:        2 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; Hardware stack levels required when called: 4
  2726 ;; This function calls:
  2727 ;;		Nothing
  2728 ;; This function is called by:
  2729 ;;		_INTERRUPT_Initialize
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733     01C6                     _INT_SetInterruptHandler:	
  2734                           ;psect for function _INT_SetInterruptHandler
  2735                           
  2736     01C6                     l1162:	
  2737                           ;incstack = 0
  2738                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  2739                           
  2740                           
  2741                           ;mcc_generated_files/system/src/interrupt.c: 102:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  2742     01C6  0871               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  2743     01C7  0140               	movlb	0	; select bank0
  2744     01C8  00A3               	movwf	_INT_InterruptHandler+1
  2745     01C9  0870               	movf	INT_SetInterruptHandler@InterruptHandler,w
  2746     01CA  00A2               	movwf	_INT_InterruptHandler
  2747     01CB                     l48:
  2748     01CB  0008               	return
  2749     01CC                     __end_of_INT_SetInterruptHandler:
  2750                           
  2751                           	psect	text12
  2752     01CC                     __ptext12:	
  2753 ;; *************** function _CLOCK_Initialize *****************
  2754 ;; Defined at:
  2755 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		status,2
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2769 ;;      Params:         0       0       0       0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 4
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_SYSTEM_Initialize
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783     01CC                     _CLOCK_Initialize:	
  2784                           ;psect for function _CLOCK_Initialize
  2785                           
  2786     01CC                     l958:	
  2787                           ;incstack = 0
  2788                           ; Regs used in _CLOCK_Initialize: [status,2]
  2789                           
  2790                           
  2791                           ;mcc_generated_files/system/src/clock.c: 41:     OSCEN = (0 << 0x6)
  2792     01CC  0151               	movlb	17	; select bank17
  2793     01CD  0191               	clrf	17	;volatile
  2794     01CE                     l960:
  2795                           
  2796                           ;mcc_generated_files/system/src/clock.c: 45:     OSCFRQ = (5 << 0x0);
  2797     01CE  3005               	movlw	5
  2798     01CF  0093               	movwf	19	;volatile
  2799                           
  2800                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  2801     01D0  0192               	clrf	18	;volatile
  2802     01D1                     l259:
  2803     01D1  0008               	return
  2804     01D2                     __end_of_CLOCK_Initialize:
  2805                           
  2806                           	psect	intentry
  2807     0004                     __pintentry:	
  2808 ;; *************** function _INTERRUPT_InterruptManager *****************
  2809 ;; Defined at:
  2810 ;;		line 66 in file "mcc_generated_files/system/src/interrupt.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0, pclath, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2824 ;;      Params:         0       0       0       0       0       0       0       0
  2825 ;;      Locals:         0       0       0       0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0
  2827 ;;      Totals:         0       0       0       0       0       0       0       0
  2828 ;;Total ram usage:        0 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 3
  2831 ;; This function calls:
  2832 ;;		_INT_ISR
  2833 ;;		_TMR0_ISR
  2834 ;; This function is called by:
  2835 ;;		Interrupt level 1
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839     0004                     _INTERRUPT_InterruptManager:
  2840                           
  2841                           ;incstack = 0
  2842     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2843                           
  2844                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2845     0005  3180               	pagesel	$
  2846     0006                     i1l1248:
  2847                           
  2848                           ;mcc_generated_files/system/src/interrupt.c: 68:     if (PIE0bits.INTE == 1 && PIR0bits.
      +                          INTF == 1) {
  2849     0006  014E               	movlb	14	; select bank14
  2850     0007  1C16               	btfss	22,0	;volatile
  2851     0008  280A               	goto	u38_21
  2852     0009  280B               	goto	u38_20
  2853     000A                     u38_21:
  2854     000A  2813               	goto	i1l32
  2855     000B                     u38_20:
  2856     000B                     i1l1250:
  2857     000B  1C0C               	btfss	12,0	;volatile
  2858     000C  280E               	goto	u39_21
  2859     000D  280F               	goto	u39_20
  2860     000E                     u39_21:
  2861     000E  2813               	goto	i1l32
  2862     000F                     u39_20:
  2863     000F                     i1l1252:
  2864                           
  2865                           ;mcc_generated_files/system/src/interrupt.c: 69:         INT_ISR();
  2866     000F  3181  21D2  3180   	fcall	_INT_ISR
  2867                           
  2868                           ;mcc_generated_files/system/src/interrupt.c: 70:     } else if (INTCONbits.PEIE == 1) {
  2869     0012  2823               	goto	i1l38
  2870     0013                     i1l32:
  2871     0013  1F0B               	btfss	11,6	;volatile
  2872     0014  2816               	goto	u40_21
  2873     0015  2817               	goto	u40_20
  2874     0016                     u40_21:
  2875     0016  2823               	goto	i1l38
  2876     0017                     u40_20:
  2877     0017                     i1l1254:
  2878                           
  2879                           ;mcc_generated_files/system/src/interrupt.c: 71:         if (PIE0bits.TMR0IE == 1 && PIR
      +                          0bits.TMR0IF == 1) {
  2880     0017  1E96               	btfss	22,5	;volatile
  2881     0018  281A               	goto	u41_21
  2882     0019  281B               	goto	u41_20
  2883     001A                     u41_21:
  2884     001A  2823               	goto	i1l37
  2885     001B                     u41_20:
  2886     001B                     i1l1256:
  2887     001B  1E8C               	btfss	12,5	;volatile
  2888     001C  281E               	goto	u42_21
  2889     001D  281F               	goto	u42_20
  2890     001E                     u42_21:
  2891     001E  2823               	goto	i1l37
  2892     001F                     u42_20:
  2893     001F                     i1l1258:
  2894                           
  2895                           ;mcc_generated_files/system/src/interrupt.c: 72:             TMR0_ISR();
  2896     001F  3181  217D  3180   	fcall	_TMR0_ISR
  2897                           
  2898                           ;mcc_generated_files/system/src/interrupt.c: 73:         }
  2899     0022  2823               	goto	i1l38
  2900     0023                     i1l37:	
  2901                           ;mcc_generated_files/system/src/interrupt.c: 80:     }
  2902                           
  2903     0023                     i1l38:
  2904     0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2905     0024  0009               	retfie
  2906     0025                     __end_of_INTERRUPT_InterruptManager:
  2907                           
  2908                           	psect	text14
  2909     017D                     __ptext14:	
  2910 ;; *************** function _TMR0_ISR *****************
  2911 ;; Defined at:
  2912 ;;		line 126 in file "mcc_generated_files/timer/src/tmr0.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2, status,0, pclath, cstack
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2926 ;;      Params:         0       0       0       0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0
  2929 ;;      Totals:         0       0       0       0       0       0       0       0
  2930 ;;Total ram usage:        0 bytes
  2931 ;; Hardware stack levels used: 1
  2932 ;; Hardware stack levels required when called: 1
  2933 ;; This function calls:
  2934 ;;		NULL
  2935 ;;		_TMR0_DefaultCallback
  2936 ;; This function is called by:
  2937 ;;		_INTERRUPT_InterruptManager
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941     017D                     _TMR0_ISR:	
  2942                           ;psect for function _TMR0_ISR
  2943                           
  2944     017D                     i1l1220:	
  2945                           ;incstack = 0
  2946                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2947                           
  2948                           
  2949                           ;mcc_generated_files/timer/src/tmr0.c: 128:     if(((void*)0) != TMR0_PeriodMatchCallbac
      +                          k)
  2950     017D  0140               	movlb	0	; select bank0
  2951     017E  0820               	movf	_TMR0_PeriodMatchCallback,w
  2952     017F  0421               	iorwf	_TMR0_PeriodMatchCallback+1,w
  2953     0180  1903               	btfsc	3,2
  2954     0181  2983               	goto	u36_21
  2955     0182  2984               	goto	u36_20
  2956     0183                     u36_21:
  2957     0183  2989               	goto	i1l1224
  2958     0184                     u36_20:
  2959     0184                     i1l1222:
  2960                           
  2961                           ;mcc_generated_files/timer/src/tmr0.c: 129:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          130:         TMR0_PeriodMatchCallback();
  2962     0184  0821               	movf	_TMR0_PeriodMatchCallback+1,w
  2963     0185  008A               	movwf	10
  2964     0186  0820               	movf	_TMR0_PeriodMatchCallback,w
  2965     0187  000A               	callw
  2966     0188  3181               	pagesel	$
  2967     0189                     i1l1224:
  2968                           
  2969                           ;mcc_generated_files/timer/src/tmr0.c: 132:     PIR0bits.TMR0IF = 0;
  2970     0189  014E               	movlb	14	; select bank14
  2971     018A  128C               	bcf	12,5	;volatile
  2972     018B                     i1l359:
  2973     018B  0008               	return
  2974     018C                     __end_of_TMR0_ISR:
  2975                           
  2976                           	psect	text15
  2977     014C                     __ptext15:	
  2978 ;; *************** function _TMR0_DefaultCallback *****************
  2979 ;; Defined at:
  2980 ;;		line 140 in file "mcc_generated_files/timer/src/tmr0.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2994 ;;      Params:         0       0       0       0       0       0       0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0       0
  2997 ;;      Totals:         0       0       0       0       0       0       0       0
  2998 ;;Total ram usage:        0 bytes
  2999 ;; Hardware stack levels used: 1
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_TMR0_Initialize
  3004 ;;		_TMR0_ISR
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008     014C                     _TMR0_DefaultCallback:	
  3009                           ;psect for function _TMR0_DefaultCallback
  3010                           
  3011     014C                     i1l1208:	
  3012                           ;incstack = 0
  3013                           ; Regs used in _TMR0_DefaultCallback: [wreg+status,2+status,0]
  3014                           
  3015                           
  3016                           ;mcc_generated_files/timer/src/tmr0.c: 143:         divider--;
  3017     014C  3001               	movlw	1
  3018     014D  0140               	movlb	0	; select bank0
  3019     014E  02A4               	subwf	_divider,f
  3020     014F  3000               	movlw	0
  3021     0150  3BA5               	subwfb	_divider+1,f
  3022     0151                     i1l1210:
  3023                           
  3024                           ;mcc_generated_files/timer/src/tmr0.c: 144:     if (divider == 0)
  3025     0151  0824               	movf	_divider,w
  3026     0152  0425               	iorwf	_divider+1,w
  3027     0153  1D03               	btfss	3,2
  3028     0154  2956               	goto	u35_21
  3029     0155  2957               	goto	u35_20
  3030     0156                     u35_21:
  3031     0156  295D               	goto	i1l366
  3032     0157                     u35_20:
  3033     0157                     i1l1212:
  3034                           
  3035                           ;mcc_generated_files/timer/src/tmr0.c: 145:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          146:         timerOverflow = 1;
  3036     0157  3001               	movlw	1
  3037     0158  00FC               	movwf	_timerOverflow
  3038     0159                     i1l1214:
  3039                           
  3040                           ;mcc_generated_files/timer/src/tmr0.c: 147:         divider = 0xFFFF;
  3041     0159  30FF               	movlw	255
  3042     015A  00A4               	movwf	_divider
  3043     015B  30FF               	movlw	255
  3044     015C  00A5               	movwf	_divider+1
  3045     015D                     i1l366:
  3046     015D  0008               	return
  3047     015E                     __end_of_TMR0_DefaultCallback:
  3048                           
  3049                           	psect	text16
  3050     01D2                     __ptext16:	
  3051 ;; *************** function _INT_ISR *****************
  3052 ;; Defined at:
  3053 ;;		line 83 in file "mcc_generated_files/system/src/interrupt.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;		None
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, pclath, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3067 ;;      Params:         0       0       0       0       0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0
  3070 ;;      Totals:         0       0       0       0       0       0       0       0
  3071 ;;Total ram usage:        0 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 2
  3074 ;; This function calls:
  3075 ;;		_INT_CallBack
  3076 ;; This function is called by:
  3077 ;;		_INTERRUPT_InterruptManager
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081     01D2                     _INT_ISR:	
  3082                           ;psect for function _INT_ISR
  3083                           
  3084     01D2                     i1l1216:	
  3085                           ;incstack = 0
  3086                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  3087                           
  3088                           
  3089                           ;mcc_generated_files/system/src/interrupt.c: 85:     (PIR0bits.INTF = 0);
  3090     01D2  014E               	movlb	14	; select bank14
  3091     01D3  100C               	bcf	12,0	;volatile
  3092     01D4                     i1l1218:
  3093                           
  3094                           ;mcc_generated_files/system/src/interrupt.c: 88:     INT_CallBack();
  3095     01D4  3181  21A6  3181   	fcall	_INT_CallBack
  3096     01D7                     i1l41:
  3097     01D7  0008               	return
  3098     01D8                     __end_of_INT_ISR:
  3099                           
  3100                           	psect	text17
  3101     01A6                     __ptext17:	
  3102 ;; *************** function _INT_CallBack *****************
  3103 ;; Defined at:
  3104 ;;		line 92 in file "mcc_generated_files/system/src/interrupt.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;		None
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  1    wreg      void 
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, status,0, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3118 ;;      Params:         0       0       0       0       0       0       0       0
  3119 ;;      Locals:         0       0       0       0       0       0       0       0
  3120 ;;      Temps:          0       0       0       0       0       0       0       0
  3121 ;;      Totals:         0       0       0       0       0       0       0       0
  3122 ;;Total ram usage:        0 bytes
  3123 ;; Hardware stack levels used: 1
  3124 ;; Hardware stack levels required when called: 1
  3125 ;; This function calls:
  3126 ;;		NULL
  3127 ;;		_INT_DefaultInterruptHandler
  3128 ;; This function is called by:
  3129 ;;		_INT_ISR
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133     01A6                     _INT_CallBack:	
  3134                           ;psect for function _INT_CallBack
  3135                           
  3136     01A6                     i1l1186:	
  3137                           ;incstack = 0
  3138                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3139                           
  3140                           
  3141                           ;mcc_generated_files/system/src/interrupt.c: 95:     if(INT_InterruptHandler)
  3142     01A6  0140               	movlb	0	; select bank0
  3143     01A7  0822               	movf	_INT_InterruptHandler,w
  3144     01A8  0423               	iorwf	_INT_InterruptHandler+1,w
  3145     01A9  1903               	btfsc	3,2
  3146     01AA  29AC               	goto	u33_21
  3147     01AB  29AD               	goto	u33_20
  3148     01AC                     u33_21:
  3149     01AC  29B2               	goto	i1l45
  3150     01AD                     u33_20:
  3151     01AD                     i1l1188:
  3152                           
  3153                           ;mcc_generated_files/system/src/interrupt.c: 96:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 97:         INT_InterruptHandler();
  3154     01AD  0823               	movf	_INT_InterruptHandler+1,w
  3155     01AE  008A               	movwf	10
  3156     01AF  0822               	movf	_INT_InterruptHandler,w
  3157     01B0  000A               	callw
  3158     01B1  3181               	pagesel	$
  3159     01B2                     i1l45:
  3160     01B2  0008               	return
  3161     01B3                     __end_of_INT_CallBack:
  3162                           
  3163                           	psect	text18
  3164     01DC                     __ptext18:	
  3165 ;; *************** function _INT_DefaultInterruptHandler *****************
  3166 ;; Defined at:
  3167 ;;		line 105 in file "mcc_generated_files/system/src/interrupt.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		None
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3181 ;;      Params:         0       0       0       0       0       0       0       0
  3182 ;;      Locals:         0       0       0       0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0
  3184 ;;      Totals:         0       0       0       0       0       0       0       0
  3185 ;;Total ram usage:        0 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_INTERRUPT_Initialize
  3191 ;;		_INT_CallBack
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195     01DC                     _INT_DefaultInterruptHandler:	
  3196                           ;psect for function _INT_DefaultInterruptHandler
  3197                           
  3198     01DC                     i1l1164:	
  3199                           ;incstack = 0
  3200                           ; Regs used in _INT_DefaultInterruptHandler: []
  3201                           
  3202                           
  3203                           ;mcc_generated_files/system/src/interrupt.c: 108:         pushed = 1;
  3204     01DC  3001               	movlw	1
  3205     01DD  00FD               	movwf	_pushed
  3206     01DE                     i1l51:
  3207     01DE  0008               	return
  3208     01DF                     __end_of_INT_DefaultInterruptHandler:
  3209     0001                     ___latbits      equ	1
  3210     007E                     btemp           set	126	;btemp
  3211     007E                     int$flags       set	126
  3212     007E                     wtemp0          set	126
  3213                           
  3214                           	psect	config
  3215                           
  3216                           ;Config register CONFIG1 @ 0x8007
  3217                           ;	External Oscillator Mode Selection bits
  3218                           ;	FEXTOSC = ECH, EC (external clock) 16 MHz and above
  3219                           ;	Power-up Default Value for COSC bits
  3220                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  3221                           ;	Clock Out Enable bit
  3222                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  3223                           ;	VDD Range Analog Calibration Selection bit
  3224                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  3225     8007                     	org	32775
  3226     8007  3FCF               	dw	16335
  3227                           
  3228                           ;Config register CONFIG2 @ 0x8008
  3229                           ;	Master Clear Enable bit
  3230                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  3231                           ;	Power-up Timer Selection bits
  3232                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3233                           ;	WDT Operating Mode bits
  3234                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  3235                           ;	Brown-out Reset Enable bits
  3236                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  3237                           ;	Brown-out Reset Voltage Selection bit
  3238                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  3239                           ;	PPSLOCKED One-Way Set Enable bit
  3240                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  3241                           ;	Stack Overflow/Underflow Reset Enable bit
  3242                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  3243     8008                     	org	32776
  3244     8008  3FE7               	dw	16359
  3245                           
  3246                           ;Config register CONFIG4 @ 0x800A
  3247                           ;	Boot Block Size Selection bits
  3248                           ;	BBSIZE = BB512, 512 words boot block size
  3249                           ;	Boot Block Enable bit
  3250                           ;	BBEN = OFF, Boot Block is disabled
  3251                           ;	SAF Enable bit
  3252                           ;	SAFEN = OFF, SAF is disabled
  3253                           ;	Application Block Write Protection bit
  3254                           ;	WRTAPP = OFF, Application Block is not write-protected
  3255                           ;	Boot Block Write Protection bit
  3256                           ;	WRTB = OFF, Boot Block is not write-protected
  3257                           ;	Configuration Registers Write Protection bit
  3258                           ;	WRTC = OFF, Configuration Registers are not write-protected
  3259                           ;	Storage Area Flash (SAF) Write Protection bit
  3260                           ;	WRTSAF = OFF, SAF is not write-protected
  3261                           ;	Low Voltage Programming Enable bit
  3262                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  3263     800A                     	org	32778
  3264     800A  3FFF               	dw	16383
  3265                           
  3266                           ;Config register CONFIG5 @ 0x800B
  3267                           ;	User Program Flash Memory Code Protection bit
  3268                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  3269     800B                     	org	32779
  3270     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    38
    Data        2
    BSS         3
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      0       6
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    S187$4$0	PTR void  size(2) Largest target is 0

    S187$5$0	PTR void  size(2) Largest target is 0

    S187$6$0	PTR void  size(2) Largest target is 0

    S187SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S187SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S187SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S187SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S187SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S187SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S187SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S187SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S187SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S187SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S187SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S187SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S187SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S187SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SPI1_Client$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_Client$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_Client$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_Client$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_Client$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_Client$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_Client$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_Client$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_Client$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_Client$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_Client$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_Client$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_Client$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SPI1_Client$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    TMR0_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultCallback(), NULL(), 


Critical Paths under _main in COMMON

    _main->_spi_send_data
    _spi_send_data->_SPI1_Open
    _SPI1_Open->___wmul
    _INTERRUPT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     289
                  _SYSTEM_Initialize
                    _TMR0_Initialize
                      _spi_send_data
                         _toggle_led
 ---------------------------------------------------------------------------------
 (1) _toggle_led                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_send_data                                        1     1      0     266
                                             10 COMMON     1     1      0
                     _SPI1_ByteWrite
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     214
                                              6 COMMON     4     3      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     100
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI1_ByteWrite                                       1     0      1      23
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                            _INT_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
               _TMR0_DefaultCallback *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                                NULL *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _TMR0_Initialize
   _spi_send_data
     _SPI1_ByteWrite
     _SPI1_Open
       ___wmul
   _toggle_led

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       NULL(Fake) *
       _INT_DefaultInterruptHandler *
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultCallback *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     11      14    100.0%
BANK0               80      0       6      7.5%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      20      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Jan 18 14:22:19 2025

                      _SPI1_ByteExchange 0000                           ?_spi_send_data 0070  
                                     l27 01A5                                       l48 01CB  
                                     u90 0174                                       u91 0172  
                    ___wmul@multiplicand 0072                                      l300 016D  
                                    l126 00DE                                      l142 0198  
                                    l236 01DB                                      l325 014B  
                                    l434 0109                                      l259 01D1  
                                    l436 011D                                      l189 01C5  
                                    l197 00A1                                      l296 017C  
                                    l920 00A2                                      l930 00AF  
                                    l922 00A6                                      l940 00BF  
                                    l932 00B1                                      l924 00A8  
                                    l950 00CA                                      l942 00C1  
                                    l934 00B9                                      l926 00AA  
                                    l960 01CE                                      l952 00CC  
                                    l944 00C3                                      l936 00BB  
                                    l928 00AC                                      l954 00CF  
                                    l946 00C5                                      l938 00BD  
                                    l962 01BD                                      l956 00D2  
                                    l948 00C8                                      l964 01C0  
                                    l958 01CC                                      u100 0175  
                                    u320 0119                                      u321 0118  
                                    u305 010A                                      u315 010F  
                                    u340 003B                                      u341 003A  
                                    u430 00EE                                      u431 00ED  
                                    u440 00F7                                      u441 00F6  
                                    u290 0105                                      u370 0168  
                                    u291 0104                                      u371 0167  
                                    wreg 0009                                     l1020 016E  
                                   l1022 0176                                     l1200 009F  
                                   l1202 00A0                                     l1230 013A  
                                   l1206 01D8                                     l1240 0147  
                                   l1232 013D                                     l1162 01C6  
                                   l1226 018C                                     l1242 0148  
                                   l1234 013E                                     l1170 0105  
                                   l1180 0199                                     l1228 0195  
                                   l1236 0140                                     l1172 010E  
                                   l1244 015F                                     l1260 00DF  
                                   l1182 019C                                     l1238 0145  
                                   l1174 0113                                     l1166 00FF  
                                   l1190 0036                                     l1246 0168  
                                   l1270 00E9                                     l1262 00E2  
                                   l1184 01A3                                     l1176 0119  
                                   l1168 0101                                     l1192 0036  
                                   l1280 00FB                                     l1272 00EE  
                                   l1264 00E3                                     l1194 003B  
                                   l1274 00F1                                     l1266 00E7  
                                   l1196 009B                                     l1276 00F2  
                                   l1268 00E8                                     l1198 009C  
                                   l1278 00F7                                     _LATA 0018  
                                   _LATB 0019                          __end_of_INT_ISR 01D8  
                                   _LATC 001A                                     i1l32 0013  
                                   i1l41 01D7                                     i1l51 01DE  
                                   i1l45 01B2                                     i1l37 0023  
                                   i1l38 0023                                     _WPUA 1F39  
                                   _WPUB 1F44                                     _WPUC 1F4F  
                                   _main 00DF                                     fsr0h 0005  
                                   indf0 0000                                     fsr0l 0004  
                                   btemp 007E      __end_of_INT_DefaultInterruptHandler 01DF  
            _INT_DefaultInterruptHandler 01DC                                     start 0025  
        __end_of_INT_SetInterruptHandler 01CC                  __end_of_TMR0_Initialize 014C  
                                  ?_main 0070                                    _IOCAF 1F3F  
                                  _IOCBF 1F4A                                    _IOCCF 1F55  
                                  _IOCAN 1F3E                                    _IOCAP 1F3D  
                                  _IOCBN 1F49                                    _IOCBP 1F48  
                                  _IOCCN 1F54                                    _IOCCP 1F53  
                                  i1l366 015D                                    i1l359 018B  
                                  _OSCEN 0891                                    u40_20 0017  
                                  u40_21 0016                                    u33_20 01AD  
                                  u41_20 001B                                    _TMR0H 059D  
                                  u33_21 01AC                                    u41_21 001A  
                                  _TMR0L 059C                                    u42_20 001F  
                                  u42_21 001E                                    u35_20 0157  
                                  u35_21 0156                                    u36_20 0184  
                                  u36_21 0183                                    u38_20 000B  
                                  u38_21 000A                                    u39_20 000F  
                                  u39_21 000E                                    _TRISA 0012  
                                  _TRISB 0013                                    _TRISC 0014  
                       __end_of_TMR0_ISR 018C                                    pclath 000A  
                                  status 0003                                    wtemp0 007E  
                        __initialization 0027                          ??_spi_send_data 007A  
                           __end_of_main 00FF              ?_INTERRUPT_InterruptManager 0070  
                                 ??_main 007B                                ??_INT_ISR 0070  
                                 _ANSELA 1F38                                   _ANSELB 1F43  
                                 _ANSELC 1F4E                                   _T0CON0 059E  
                                 _T0CON1 059F                                   _RB4PPS 1F1C  
                                 i1l1210 0151                                   i1l1212 0157  
                                 i1l1220 017D                                   i1l1214 0159  
                                 i1l1222 0184                                   i1l1216 01D2  
                                 i1l1208 014C                                   i1l1224 0189  
                                 i1l1218 01D4                                   i1l1250 000B  
                                 _RB7PPS 1F1F                                   i1l1164 01DC  
                                 i1l1252 000F                                   i1l1254 0017  
                                 i1l1256 001B                                   i1l1248 0006  
                                 _ODCONA 1F3A                                   i1l1186 01A6  
                                 i1l1258 001F                                   _ODCONB 1F45  
                                 _ODCONC 1F50                                   i1l1188 01AD  
                                 _INLVLA 1F3C                                   _INLVLB 1F47  
                                 _INLVLC 1F52                                   _INTPPS 1E90  
                                 _OSCFRQ 0893                        __end_of_SPI1_Open 00A2  
                                 ___wmul 00FF                         ?_TMR0_Initialize 0070  
                                 _pushed 007D                        ?_CLOCK_Initialize 0070  
                          ?_INT_CallBack 0070                       ??_CLOCK_Initialize 0070  
INT_SetInterruptHandler@InterruptHandler 0070                           _SPI1_IsRxReady 0000  
                         _SPI1_IsTxReady 0000                        _SYSTEM_Initialize 018C  
                __end_of__initialization 0032                           _SPI1_ByteWrite 01D8  
                     ?_SYSTEM_Initialize 0070                           __pcstackCOMMON 0070  
                           __pidataBANK0 01DF                      ??_SYSTEM_Initialize 0072  
                              ?_TMR0_ISR 0070                        ??_SPI1_Initialize 0070  
                         ??_INT_CallBack 0070                       _spi1_configuration 01B3  
              __end_of_SYSTEM_Initialize 0199                   __end_of_SPI1_ByteWrite 01DC  
               _TMR0_PeriodMatchCallback 0020                               __pmaintext 00DF  
                                ?___wmul 0070                               ??_TMR0_ISR 0070  
                             __pintentry 0004                                  _INT_ISR 01D2  
                                _OSCTUNE 0892                                  _SSP1ADD 018D  
                                _SLRCONA 1F3B                                  _SLRCONB 1F46  
                                _SLRCONC 1F51                                  _SSP1BUF 018C  
                        ?_SPI1_ByteWrite 0070             __end_of_TMR0_DefaultCallback 015E  
                                __ptext1 016E                                  __ptext2 015E  
                                __ptext3 0036                                  __ptext4 00FF  
                                __ptext5 01D8                                  __ptext6 013A  
                                __ptext7 018C                                  __ptext8 01BD  
                                __ptext9 00A2                                  _divider 0024  
               ??_PIN_MANAGER_Initialize 0070                  _INT_SetInterruptHandler 01C6  
                   end_of_initialization 0032                     __end_of_INT_CallBack 01B3  
                        _SPI1_BufferRead 0000                    __end_of_spi_send_data 016E  
                              _SPI1_Open 0036                                _SSP1SSPPS 1EC7  
                    _SPI1_BufferExchange 0000                               _toggle_led 016E  
                        _SPI1_Initialize 01BD             __end_of_INTERRUPT_Initialize 01A6  
                             ?_SPI1_Open 0076                           __end_of___wmul 011E  
              ??_INT_SetInterruptHandler 0072                      start_initialization 0027  
                   _TMR0_DefaultCallback 014C             ?_INT_DefaultInterruptHandler 0070  
                      spi_send_data@data 007A                                 ??___wmul 0074  
                            __pdataBANK0 0024                            _SPI1_ByteRead 0000  
                            __pbssCOMMON 007B                              ?_toggle_led 0070  
                              ___latbits 0001                                 ?_INT_ISR 0070  
                       ??_SPI1_ByteWrite 0071                    ?_TMR0_DefaultCallback 0070  
                __end_of_SPI1_Initialize 01C6                                __pnvBANK0 0020  
                 _PIN_MANAGER_Initialize 00A2                     SPI1_Open@returnValue 0079  
          ??_INT_DefaultInterruptHandler 0070                              ??_SPI1_Open 0077  
           ??_INTERRUPT_InterruptManager 0070                             _INT_CallBack 01A6  
                              _led_state 007B                     _INTERRUPT_Initialize 0199  
                       _CLOCK_Initialize 01CC                        ??_TMR0_Initialize 0070  
                         ___wmul@product 0074                                 _LATAbits 0018  
                               _PIE0bits 0716                                 _PIE1bits 0717  
                               _PIR0bits 070C                                 _PIR1bits 070D  
                               _SSP1CON1 0190                                 _SSP1CON3 0192  
                               _TMR0_ISR 017D                                 _SSP1STAT 018F  
                      _SPI1_Deinitialize 0000                        ___wmul@multiplier 0070  
                 ??_TMR0_DefaultCallback 0070                         ?_SPI1_Initialize 0070  
                  ?_INTERRUPT_Initialize 0070                      __end_of_SPI1_Client 013A  
                             _T0CON0bits 059E                                 __ptext10 0199  
                               __ptext11 01C6                                 __ptext12 01CC  
                               __ptext14 017D                                 __ptext15 014C  
                               __ptext16 01D2                                 __ptext17 01A6  
                               __ptext18 01DC                             _SSP1CON1bits 0190  
                 SPI1_ByteWrite@byteData 0070                            _timerOverflow 007C  
                               int$flags 007E       __end_of_INTERRUPT_InterruptManager 0025  
             _INTERRUPT_InterruptManager 0004                               _INTCONbits 000B  
                           ??_toggle_led 0070                     _INT_InterruptHandler 0022  
                            _SPI1_Client 011E                   ??_INTERRUPT_Initialize 0072  
                               intlevel1 0000                  ?_PIN_MANAGER_Initialize 0070  
                     __end_of_toggle_led 017D                         _SPI1_BufferWrite 0000  
               ?_INT_SetInterruptHandler 0070                            _spi_send_data 015E  
               __end_of_CLOCK_Initialize 01D2                            __pstringtext1 011E  
                          __pstringtext2 01B3                               _SPI1_Close 0000  
                             _SSP1DATPPS 1EC6                               _SSP1CLKPPS 1EC5  
                        _TMR0_Initialize 013A           __end_of_PIN_MANAGER_Initialize 00DF  
                SPI1_Open@spiConfigIndex 0076               __end_of_spi1_configuration 01BD  
