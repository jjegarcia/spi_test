

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Jan 13 12:21:51 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,space=0,delta=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Generated 25/01/2024 GMT
    37                           ; 
    38                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F15244 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0008                     bsr             equ	8
    71     0005                     fsr0h           equ	5
    72     0004                     fsr0l           equ	4
    73     0007                     fsr1h           equ	7
    74     0006                     fsr1l           equ	6
    75     0000                     indf            equ	0
    76     0000                     indf0           equ	0
    77     0001                     indf1           equ	1
    78     000B                     intcon          equ	11
    79     0002                     pc              equ	2
    80     0002                     pcl             equ	2
    81     000A                     pclath          equ	10
    82     0003                     status          equ	3
    83     0009                     wreg            equ	9
    84     0000                     INDF0           equ	0	;# 
    85     0001                     INDF1           equ	1	;# 
    86     0002                     PCL             equ	2	;# 
    87     0003                     STATUS          equ	3	;# 
    88     0004                     FSR0L           equ	4	;# 
    89     0005                     FSR0H           equ	5	;# 
    90     0006                     FSR1L           equ	6	;# 
    91     0007                     FSR1H           equ	7	;# 
    92     0008                     BSR             equ	8	;# 
    93     0009                     WREG            equ	9	;# 
    94     000A                     PCLATH          equ	10	;# 
    95     000B                     INTCON          equ	11	;# 
    96     000C                     PORTA           equ	12	;# 
    97     000D                     PORTB           equ	13	;# 
    98     000E                     PORTC           equ	14	;# 
    99     0012                     TRISA           equ	18	;# 
   100     0013                     TRISB           equ	19	;# 
   101     0014                     TRISC           equ	20	;# 
   102     0018                     LATA            equ	24	;# 
   103     0019                     LATB            equ	25	;# 
   104     001A                     LATC            equ	26	;# 
   105     009A                     CPCON           equ	154	;# 
   106     009B                     ADRES           equ	155	;# 
   107     009B                     ADRESL          equ	155	;# 
   108     009C                     ADRESH          equ	156	;# 
   109     009D                     ADCON0          equ	157	;# 
   110     009E                     ADCON1          equ	158	;# 
   111     009F                     ADACT           equ	159	;# 
   112     010C                     RB4I2C          equ	268	;# 
   113     010D                     RB6I2C          equ	269	;# 
   114     0119                     RC1REG          equ	281	;# 
   115     011A                     TX1REG          equ	282	;# 
   116     011B                     SP1BRG          equ	283	;# 
   117     011B                     SP1BRGL         equ	283	;# 
   118     011C                     SP1BRGH         equ	284	;# 
   119     011D                     RC1STA          equ	285	;# 
   120     011E                     TX1STA          equ	286	;# 
   121     011F                     BAUD1CON        equ	287	;# 
   122     018C                     SSP1BUF         equ	396	;# 
   123     018D                     SSP1ADD         equ	397	;# 
   124     018E                     SSP1MSK         equ	398	;# 
   125     018F                     SSP1STAT        equ	399	;# 
   126     0190                     SSP1CON1        equ	400	;# 
   127     0191                     SSP1CON2        equ	401	;# 
   128     0192                     SSP1CON3        equ	402	;# 
   129     020C                     TMR1            equ	524	;# 
   130     020C                     TMR1L           equ	524	;# 
   131     020D                     TMR1H           equ	525	;# 
   132     020E                     T1CON           equ	526	;# 
   133     020E                     TMR1CON         equ	526	;# 
   134     020F                     T1GCON          equ	527	;# 
   135     020F                     TMR1GCON        equ	527	;# 
   136     0210                     T1GATE          equ	528	;# 
   137     0210                     TMR1GATE        equ	528	;# 
   138     0211                     T1CLK           equ	529	;# 
   139     0211                     TMR1CLK         equ	529	;# 
   140     0211                     PR1             equ	529	;# 
   141     028C                     T2TMR           equ	652	;# 
   142     028C                     TMR2            equ	652	;# 
   143     028D                     T2PR            equ	653	;# 
   144     028D                     PR2             equ	653	;# 
   145     028E                     T2CON           equ	654	;# 
   146     028F                     T2HLT           equ	655	;# 
   147     0290                     T2CLKCON        equ	656	;# 
   148     0291                     T2RST           equ	657	;# 
   149     030C                     CCPR1           equ	780	;# 
   150     030C                     CCPR1L          equ	780	;# 
   151     030D                     CCPR1H          equ	781	;# 
   152     030E                     CCP1CON         equ	782	;# 
   153     030F                     CCP1CAP         equ	783	;# 
   154     0310                     CCPR2           equ	784	;# 
   155     0310                     CCPR2L          equ	784	;# 
   156     0311                     CCPR2H          equ	785	;# 
   157     0312                     CCP2CON         equ	786	;# 
   158     0313                     CCP2CAP         equ	787	;# 
   159     0314                     PWM3DC          equ	788	;# 
   160     0314                     PWM3DCL         equ	788	;# 
   161     0315                     PWM3DCH         equ	789	;# 
   162     0316                     PWM3CON         equ	790	;# 
   163     0318                     PWM4DC          equ	792	;# 
   164     0318                     PWM4DCL         equ	792	;# 
   165     0319                     PWM4DCH         equ	793	;# 
   166     031A                     PWM4CON         equ	794	;# 
   167     059C                     TMR0L           equ	1436	;# 
   168     059C                     TMR0            equ	1436	;# 
   169     059D                     TMR0H           equ	1437	;# 
   170     059D                     PR0             equ	1437	;# 
   171     059E                     T0CON0          equ	1438	;# 
   172     059F                     T0CON1          equ	1439	;# 
   173     070C                     PIR0            equ	1804	;# 
   174     070D                     PIR1            equ	1805	;# 
   175     070E                     PIR2            equ	1806	;# 
   176     0716                     PIE0            equ	1814	;# 
   177     0717                     PIE1            equ	1815	;# 
   178     0718                     PIE2            equ	1816	;# 
   179     080C                     WDTCON          equ	2060	;# 
   180     0811                     BORCON          equ	2065	;# 
   181     0813                     PCON0           equ	2067	;# 
   182     0814                     PCON1           equ	2068	;# 
   183     081A                     NVMADR          equ	2074	;# 
   184     081A                     NVMADRL         equ	2074	;# 
   185     081B                     NVMADRH         equ	2075	;# 
   186     081C                     NVMDAT          equ	2076	;# 
   187     081C                     NVMDATL         equ	2076	;# 
   188     081D                     NVMDATH         equ	2077	;# 
   189     081E                     NVMCON1         equ	2078	;# 
   190     081F                     NVMCON2         equ	2079	;# 
   191     088E                     OSCCON          equ	2190	;# 
   192     0890                     OSCSTAT         equ	2192	;# 
   193     0891                     OSCEN           equ	2193	;# 
   194     0892                     OSCTUNE         equ	2194	;# 
   195     0893                     OSCFRQ          equ	2195	;# 
   196     090C                     FVRCON          equ	2316	;# 
   197     1E8F                     PPSLOCK         equ	7823	;# 
   198     1E90                     INTPPS          equ	7824	;# 
   199     1E91                     T0CKIPPS        equ	7825	;# 
   200     1E92                     T1CKIPPS        equ	7826	;# 
   201     1E93                     T1GPPS          equ	7827	;# 
   202     1E9C                     T2INPPS         equ	7836	;# 
   203     1EA1                     CCP1PPS         equ	7841	;# 
   204     1EA2                     CCP2PPS         equ	7842	;# 
   205     1EC3                     ADACTPPS        equ	7875	;# 
   206     1EC5                     SSP1CLKPPS      equ	7877	;# 
   207     1EC6                     SSP1DATPPS      equ	7878	;# 
   208     1EC7                     SSP1SSPPS       equ	7879	;# 
   209     1ECB                     RX1PPS          equ	7883	;# 
   210     1ECB                     RX1DTPPS        equ	7883	;# 
   211     1ECB                     RXPPS           equ	7883	;# 
   212     1ECC                     CK1PPS          equ	7884	;# 
   213     1ECC                     TX1CKPPS        equ	7884	;# 
   214     1ECC                     CKPPS           equ	7884	;# 
   215     1F10                     RA0PPS          equ	7952	;# 
   216     1F11                     RA1PPS          equ	7953	;# 
   217     1F12                     RA2PPS          equ	7954	;# 
   218     1F14                     RA4PPS          equ	7956	;# 
   219     1F15                     RA5PPS          equ	7957	;# 
   220     1F1C                     RB4PPS          equ	7964	;# 
   221     1F1D                     RB5PPS          equ	7965	;# 
   222     1F1E                     RB6PPS          equ	7966	;# 
   223     1F1F                     RB7PPS          equ	7967	;# 
   224     1F20                     RC0PPS          equ	7968	;# 
   225     1F21                     RC1PPS          equ	7969	;# 
   226     1F22                     RC2PPS          equ	7970	;# 
   227     1F23                     RC3PPS          equ	7971	;# 
   228     1F24                     RC4PPS          equ	7972	;# 
   229     1F25                     RC5PPS          equ	7973	;# 
   230     1F26                     RC6PPS          equ	7974	;# 
   231     1F27                     RC7PPS          equ	7975	;# 
   232     1F38                     ANSELA          equ	7992	;# 
   233     1F39                     WPUA            equ	7993	;# 
   234     1F3A                     ODCONA          equ	7994	;# 
   235     1F3B                     SLRCONA         equ	7995	;# 
   236     1F3C                     INLVLA          equ	7996	;# 
   237     1F3D                     IOCAP           equ	7997	;# 
   238     1F3E                     IOCAN           equ	7998	;# 
   239     1F3F                     IOCAF           equ	7999	;# 
   240     1F43                     ANSELB          equ	8003	;# 
   241     1F44                     WPUB            equ	8004	;# 
   242     1F45                     ODCONB          equ	8005	;# 
   243     1F46                     SLRCONB         equ	8006	;# 
   244     1F47                     INLVLB          equ	8007	;# 
   245     1F48                     IOCBP           equ	8008	;# 
   246     1F49                     IOCBN           equ	8009	;# 
   247     1F4A                     IOCBF           equ	8010	;# 
   248     1F4E                     ANSELC          equ	8014	;# 
   249     1F4F                     WPUC            equ	8015	;# 
   250     1F50                     ODCONC          equ	8016	;# 
   251     1F51                     SLRCONC         equ	8017	;# 
   252     1F52                     INLVLC          equ	8018	;# 
   253     1F53                     IOCCP           equ	8019	;# 
   254     1F54                     IOCCN           equ	8020	;# 
   255     1F55                     IOCCF           equ	8021	;# 
   256     1FE4                     STATUS_SHAD     equ	8164	;# 
   257     1FE5                     WREG_SHAD       equ	8165	;# 
   258     1FE6                     BSR_SHAD        equ	8166	;# 
   259     1FE7                     PCLATH_SHAD     equ	8167	;# 
   260     1FE8                     FSR0_SHAD       equ	8168	;# 
   261     1FE8                     FSR0L_SHAD      equ	8168	;# 
   262     1FE9                     FSR0H_SHAD      equ	8169	;# 
   263     1FEA                     FSR1L_SHAD      equ	8170	;# 
   264     1FEB                     FSR1H_SHAD      equ	8171	;# 
   265     1FED                     STKPTR          equ	8173	;# 
   266     1FEE                     TOSL            equ	8174	;# 
   267     1FEF                     TOSH            equ	8175	;# 
   268     0000                     INDF0           equ	0	;# 
   269     0001                     INDF1           equ	1	;# 
   270     0002                     PCL             equ	2	;# 
   271     0003                     STATUS          equ	3	;# 
   272     0004                     FSR0L           equ	4	;# 
   273     0005                     FSR0H           equ	5	;# 
   274     0006                     FSR1L           equ	6	;# 
   275     0007                     FSR1H           equ	7	;# 
   276     0008                     BSR             equ	8	;# 
   277     0009                     WREG            equ	9	;# 
   278     000A                     PCLATH          equ	10	;# 
   279     000B                     INTCON          equ	11	;# 
   280     000C                     PORTA           equ	12	;# 
   281     000D                     PORTB           equ	13	;# 
   282     000E                     PORTC           equ	14	;# 
   283     0012                     TRISA           equ	18	;# 
   284     0013                     TRISB           equ	19	;# 
   285     0014                     TRISC           equ	20	;# 
   286     0018                     LATA            equ	24	;# 
   287     0019                     LATB            equ	25	;# 
   288     001A                     LATC            equ	26	;# 
   289     009A                     CPCON           equ	154	;# 
   290     009B                     ADRES           equ	155	;# 
   291     009B                     ADRESL          equ	155	;# 
   292     009C                     ADRESH          equ	156	;# 
   293     009D                     ADCON0          equ	157	;# 
   294     009E                     ADCON1          equ	158	;# 
   295     009F                     ADACT           equ	159	;# 
   296     010C                     RB4I2C          equ	268	;# 
   297     010D                     RB6I2C          equ	269	;# 
   298     0119                     RC1REG          equ	281	;# 
   299     011A                     TX1REG          equ	282	;# 
   300     011B                     SP1BRG          equ	283	;# 
   301     011B                     SP1BRGL         equ	283	;# 
   302     011C                     SP1BRGH         equ	284	;# 
   303     011D                     RC1STA          equ	285	;# 
   304     011E                     TX1STA          equ	286	;# 
   305     011F                     BAUD1CON        equ	287	;# 
   306     018C                     SSP1BUF         equ	396	;# 
   307     018D                     SSP1ADD         equ	397	;# 
   308     018E                     SSP1MSK         equ	398	;# 
   309     018F                     SSP1STAT        equ	399	;# 
   310     0190                     SSP1CON1        equ	400	;# 
   311     0191                     SSP1CON2        equ	401	;# 
   312     0192                     SSP1CON3        equ	402	;# 
   313     020C                     TMR1            equ	524	;# 
   314     020C                     TMR1L           equ	524	;# 
   315     020D                     TMR1H           equ	525	;# 
   316     020E                     T1CON           equ	526	;# 
   317     020E                     TMR1CON         equ	526	;# 
   318     020F                     T1GCON          equ	527	;# 
   319     020F                     TMR1GCON        equ	527	;# 
   320     0210                     T1GATE          equ	528	;# 
   321     0210                     TMR1GATE        equ	528	;# 
   322     0211                     T1CLK           equ	529	;# 
   323     0211                     TMR1CLK         equ	529	;# 
   324     0211                     PR1             equ	529	;# 
   325     028C                     T2TMR           equ	652	;# 
   326     028C                     TMR2            equ	652	;# 
   327     028D                     T2PR            equ	653	;# 
   328     028D                     PR2             equ	653	;# 
   329     028E                     T2CON           equ	654	;# 
   330     028F                     T2HLT           equ	655	;# 
   331     0290                     T2CLKCON        equ	656	;# 
   332     0291                     T2RST           equ	657	;# 
   333     030C                     CCPR1           equ	780	;# 
   334     030C                     CCPR1L          equ	780	;# 
   335     030D                     CCPR1H          equ	781	;# 
   336     030E                     CCP1CON         equ	782	;# 
   337     030F                     CCP1CAP         equ	783	;# 
   338     0310                     CCPR2           equ	784	;# 
   339     0310                     CCPR2L          equ	784	;# 
   340     0311                     CCPR2H          equ	785	;# 
   341     0312                     CCP2CON         equ	786	;# 
   342     0313                     CCP2CAP         equ	787	;# 
   343     0314                     PWM3DC          equ	788	;# 
   344     0314                     PWM3DCL         equ	788	;# 
   345     0315                     PWM3DCH         equ	789	;# 
   346     0316                     PWM3CON         equ	790	;# 
   347     0318                     PWM4DC          equ	792	;# 
   348     0318                     PWM4DCL         equ	792	;# 
   349     0319                     PWM4DCH         equ	793	;# 
   350     031A                     PWM4CON         equ	794	;# 
   351     059C                     TMR0L           equ	1436	;# 
   352     059C                     TMR0            equ	1436	;# 
   353     059D                     TMR0H           equ	1437	;# 
   354     059D                     PR0             equ	1437	;# 
   355     059E                     T0CON0          equ	1438	;# 
   356     059F                     T0CON1          equ	1439	;# 
   357     070C                     PIR0            equ	1804	;# 
   358     070D                     PIR1            equ	1805	;# 
   359     070E                     PIR2            equ	1806	;# 
   360     0716                     PIE0            equ	1814	;# 
   361     0717                     PIE1            equ	1815	;# 
   362     0718                     PIE2            equ	1816	;# 
   363     080C                     WDTCON          equ	2060	;# 
   364     0811                     BORCON          equ	2065	;# 
   365     0813                     PCON0           equ	2067	;# 
   366     0814                     PCON1           equ	2068	;# 
   367     081A                     NVMADR          equ	2074	;# 
   368     081A                     NVMADRL         equ	2074	;# 
   369     081B                     NVMADRH         equ	2075	;# 
   370     081C                     NVMDAT          equ	2076	;# 
   371     081C                     NVMDATL         equ	2076	;# 
   372     081D                     NVMDATH         equ	2077	;# 
   373     081E                     NVMCON1         equ	2078	;# 
   374     081F                     NVMCON2         equ	2079	;# 
   375     088E                     OSCCON          equ	2190	;# 
   376     0890                     OSCSTAT         equ	2192	;# 
   377     0891                     OSCEN           equ	2193	;# 
   378     0892                     OSCTUNE         equ	2194	;# 
   379     0893                     OSCFRQ          equ	2195	;# 
   380     090C                     FVRCON          equ	2316	;# 
   381     1E8F                     PPSLOCK         equ	7823	;# 
   382     1E90                     INTPPS          equ	7824	;# 
   383     1E91                     T0CKIPPS        equ	7825	;# 
   384     1E92                     T1CKIPPS        equ	7826	;# 
   385     1E93                     T1GPPS          equ	7827	;# 
   386     1E9C                     T2INPPS         equ	7836	;# 
   387     1EA1                     CCP1PPS         equ	7841	;# 
   388     1EA2                     CCP2PPS         equ	7842	;# 
   389     1EC3                     ADACTPPS        equ	7875	;# 
   390     1EC5                     SSP1CLKPPS      equ	7877	;# 
   391     1EC6                     SSP1DATPPS      equ	7878	;# 
   392     1EC7                     SSP1SSPPS       equ	7879	;# 
   393     1ECB                     RX1PPS          equ	7883	;# 
   394     1ECB                     RX1DTPPS        equ	7883	;# 
   395     1ECB                     RXPPS           equ	7883	;# 
   396     1ECC                     CK1PPS          equ	7884	;# 
   397     1ECC                     TX1CKPPS        equ	7884	;# 
   398     1ECC                     CKPPS           equ	7884	;# 
   399     1F10                     RA0PPS          equ	7952	;# 
   400     1F11                     RA1PPS          equ	7953	;# 
   401     1F12                     RA2PPS          equ	7954	;# 
   402     1F14                     RA4PPS          equ	7956	;# 
   403     1F15                     RA5PPS          equ	7957	;# 
   404     1F1C                     RB4PPS          equ	7964	;# 
   405     1F1D                     RB5PPS          equ	7965	;# 
   406     1F1E                     RB6PPS          equ	7966	;# 
   407     1F1F                     RB7PPS          equ	7967	;# 
   408     1F20                     RC0PPS          equ	7968	;# 
   409     1F21                     RC1PPS          equ	7969	;# 
   410     1F22                     RC2PPS          equ	7970	;# 
   411     1F23                     RC3PPS          equ	7971	;# 
   412     1F24                     RC4PPS          equ	7972	;# 
   413     1F25                     RC5PPS          equ	7973	;# 
   414     1F26                     RC6PPS          equ	7974	;# 
   415     1F27                     RC7PPS          equ	7975	;# 
   416     1F38                     ANSELA          equ	7992	;# 
   417     1F39                     WPUA            equ	7993	;# 
   418     1F3A                     ODCONA          equ	7994	;# 
   419     1F3B                     SLRCONA         equ	7995	;# 
   420     1F3C                     INLVLA          equ	7996	;# 
   421     1F3D                     IOCAP           equ	7997	;# 
   422     1F3E                     IOCAN           equ	7998	;# 
   423     1F3F                     IOCAF           equ	7999	;# 
   424     1F43                     ANSELB          equ	8003	;# 
   425     1F44                     WPUB            equ	8004	;# 
   426     1F45                     ODCONB          equ	8005	;# 
   427     1F46                     SLRCONB         equ	8006	;# 
   428     1F47                     INLVLB          equ	8007	;# 
   429     1F48                     IOCBP           equ	8008	;# 
   430     1F49                     IOCBN           equ	8009	;# 
   431     1F4A                     IOCBF           equ	8010	;# 
   432     1F4E                     ANSELC          equ	8014	;# 
   433     1F4F                     WPUC            equ	8015	;# 
   434     1F50                     ODCONC          equ	8016	;# 
   435     1F51                     SLRCONC         equ	8017	;# 
   436     1F52                     INLVLC          equ	8018	;# 
   437     1F53                     IOCCP           equ	8019	;# 
   438     1F54                     IOCCN           equ	8020	;# 
   439     1F55                     IOCCF           equ	8021	;# 
   440     1FE4                     STATUS_SHAD     equ	8164	;# 
   441     1FE5                     WREG_SHAD       equ	8165	;# 
   442     1FE6                     BSR_SHAD        equ	8166	;# 
   443     1FE7                     PCLATH_SHAD     equ	8167	;# 
   444     1FE8                     FSR0_SHAD       equ	8168	;# 
   445     1FE8                     FSR0L_SHAD      equ	8168	;# 
   446     1FE9                     FSR0H_SHAD      equ	8169	;# 
   447     1FEA                     FSR1L_SHAD      equ	8170	;# 
   448     1FEB                     FSR1H_SHAD      equ	8171	;# 
   449     1FED                     STKPTR          equ	8173	;# 
   450     1FEE                     TOSL            equ	8174	;# 
   451     1FEF                     TOSH            equ	8175	;# 
   452     0000                     INDF0           equ	0	;# 
   453     0001                     INDF1           equ	1	;# 
   454     0002                     PCL             equ	2	;# 
   455     0003                     STATUS          equ	3	;# 
   456     0004                     FSR0L           equ	4	;# 
   457     0005                     FSR0H           equ	5	;# 
   458     0006                     FSR1L           equ	6	;# 
   459     0007                     FSR1H           equ	7	;# 
   460     0008                     BSR             equ	8	;# 
   461     0009                     WREG            equ	9	;# 
   462     000A                     PCLATH          equ	10	;# 
   463     000B                     INTCON          equ	11	;# 
   464     000C                     PORTA           equ	12	;# 
   465     000D                     PORTB           equ	13	;# 
   466     000E                     PORTC           equ	14	;# 
   467     0012                     TRISA           equ	18	;# 
   468     0013                     TRISB           equ	19	;# 
   469     0014                     TRISC           equ	20	;# 
   470     0018                     LATA            equ	24	;# 
   471     0019                     LATB            equ	25	;# 
   472     001A                     LATC            equ	26	;# 
   473     009A                     CPCON           equ	154	;# 
   474     009B                     ADRES           equ	155	;# 
   475     009B                     ADRESL          equ	155	;# 
   476     009C                     ADRESH          equ	156	;# 
   477     009D                     ADCON0          equ	157	;# 
   478     009E                     ADCON1          equ	158	;# 
   479     009F                     ADACT           equ	159	;# 
   480     010C                     RB4I2C          equ	268	;# 
   481     010D                     RB6I2C          equ	269	;# 
   482     0119                     RC1REG          equ	281	;# 
   483     011A                     TX1REG          equ	282	;# 
   484     011B                     SP1BRG          equ	283	;# 
   485     011B                     SP1BRGL         equ	283	;# 
   486     011C                     SP1BRGH         equ	284	;# 
   487     011D                     RC1STA          equ	285	;# 
   488     011E                     TX1STA          equ	286	;# 
   489     011F                     BAUD1CON        equ	287	;# 
   490     018C                     SSP1BUF         equ	396	;# 
   491     018D                     SSP1ADD         equ	397	;# 
   492     018E                     SSP1MSK         equ	398	;# 
   493     018F                     SSP1STAT        equ	399	;# 
   494     0190                     SSP1CON1        equ	400	;# 
   495     0191                     SSP1CON2        equ	401	;# 
   496     0192                     SSP1CON3        equ	402	;# 
   497     020C                     TMR1            equ	524	;# 
   498     020C                     TMR1L           equ	524	;# 
   499     020D                     TMR1H           equ	525	;# 
   500     020E                     T1CON           equ	526	;# 
   501     020E                     TMR1CON         equ	526	;# 
   502     020F                     T1GCON          equ	527	;# 
   503     020F                     TMR1GCON        equ	527	;# 
   504     0210                     T1GATE          equ	528	;# 
   505     0210                     TMR1GATE        equ	528	;# 
   506     0211                     T1CLK           equ	529	;# 
   507     0211                     TMR1CLK         equ	529	;# 
   508     0211                     PR1             equ	529	;# 
   509     028C                     T2TMR           equ	652	;# 
   510     028C                     TMR2            equ	652	;# 
   511     028D                     T2PR            equ	653	;# 
   512     028D                     PR2             equ	653	;# 
   513     028E                     T2CON           equ	654	;# 
   514     028F                     T2HLT           equ	655	;# 
   515     0290                     T2CLKCON        equ	656	;# 
   516     0291                     T2RST           equ	657	;# 
   517     030C                     CCPR1           equ	780	;# 
   518     030C                     CCPR1L          equ	780	;# 
   519     030D                     CCPR1H          equ	781	;# 
   520     030E                     CCP1CON         equ	782	;# 
   521     030F                     CCP1CAP         equ	783	;# 
   522     0310                     CCPR2           equ	784	;# 
   523     0310                     CCPR2L          equ	784	;# 
   524     0311                     CCPR2H          equ	785	;# 
   525     0312                     CCP2CON         equ	786	;# 
   526     0313                     CCP2CAP         equ	787	;# 
   527     0314                     PWM3DC          equ	788	;# 
   528     0314                     PWM3DCL         equ	788	;# 
   529     0315                     PWM3DCH         equ	789	;# 
   530     0316                     PWM3CON         equ	790	;# 
   531     0318                     PWM4DC          equ	792	;# 
   532     0318                     PWM4DCL         equ	792	;# 
   533     0319                     PWM4DCH         equ	793	;# 
   534     031A                     PWM4CON         equ	794	;# 
   535     059C                     TMR0L           equ	1436	;# 
   536     059C                     TMR0            equ	1436	;# 
   537     059D                     TMR0H           equ	1437	;# 
   538     059D                     PR0             equ	1437	;# 
   539     059E                     T0CON0          equ	1438	;# 
   540     059F                     T0CON1          equ	1439	;# 
   541     070C                     PIR0            equ	1804	;# 
   542     070D                     PIR1            equ	1805	;# 
   543     070E                     PIR2            equ	1806	;# 
   544     0716                     PIE0            equ	1814	;# 
   545     0717                     PIE1            equ	1815	;# 
   546     0718                     PIE2            equ	1816	;# 
   547     080C                     WDTCON          equ	2060	;# 
   548     0811                     BORCON          equ	2065	;# 
   549     0813                     PCON0           equ	2067	;# 
   550     0814                     PCON1           equ	2068	;# 
   551     081A                     NVMADR          equ	2074	;# 
   552     081A                     NVMADRL         equ	2074	;# 
   553     081B                     NVMADRH         equ	2075	;# 
   554     081C                     NVMDAT          equ	2076	;# 
   555     081C                     NVMDATL         equ	2076	;# 
   556     081D                     NVMDATH         equ	2077	;# 
   557     081E                     NVMCON1         equ	2078	;# 
   558     081F                     NVMCON2         equ	2079	;# 
   559     088E                     OSCCON          equ	2190	;# 
   560     0890                     OSCSTAT         equ	2192	;# 
   561     0891                     OSCEN           equ	2193	;# 
   562     0892                     OSCTUNE         equ	2194	;# 
   563     0893                     OSCFRQ          equ	2195	;# 
   564     090C                     FVRCON          equ	2316	;# 
   565     1E8F                     PPSLOCK         equ	7823	;# 
   566     1E90                     INTPPS          equ	7824	;# 
   567     1E91                     T0CKIPPS        equ	7825	;# 
   568     1E92                     T1CKIPPS        equ	7826	;# 
   569     1E93                     T1GPPS          equ	7827	;# 
   570     1E9C                     T2INPPS         equ	7836	;# 
   571     1EA1                     CCP1PPS         equ	7841	;# 
   572     1EA2                     CCP2PPS         equ	7842	;# 
   573     1EC3                     ADACTPPS        equ	7875	;# 
   574     1EC5                     SSP1CLKPPS      equ	7877	;# 
   575     1EC6                     SSP1DATPPS      equ	7878	;# 
   576     1EC7                     SSP1SSPPS       equ	7879	;# 
   577     1ECB                     RX1PPS          equ	7883	;# 
   578     1ECB                     RX1DTPPS        equ	7883	;# 
   579     1ECB                     RXPPS           equ	7883	;# 
   580     1ECC                     CK1PPS          equ	7884	;# 
   581     1ECC                     TX1CKPPS        equ	7884	;# 
   582     1ECC                     CKPPS           equ	7884	;# 
   583     1F10                     RA0PPS          equ	7952	;# 
   584     1F11                     RA1PPS          equ	7953	;# 
   585     1F12                     RA2PPS          equ	7954	;# 
   586     1F14                     RA4PPS          equ	7956	;# 
   587     1F15                     RA5PPS          equ	7957	;# 
   588     1F1C                     RB4PPS          equ	7964	;# 
   589     1F1D                     RB5PPS          equ	7965	;# 
   590     1F1E                     RB6PPS          equ	7966	;# 
   591     1F1F                     RB7PPS          equ	7967	;# 
   592     1F20                     RC0PPS          equ	7968	;# 
   593     1F21                     RC1PPS          equ	7969	;# 
   594     1F22                     RC2PPS          equ	7970	;# 
   595     1F23                     RC3PPS          equ	7971	;# 
   596     1F24                     RC4PPS          equ	7972	;# 
   597     1F25                     RC5PPS          equ	7973	;# 
   598     1F26                     RC6PPS          equ	7974	;# 
   599     1F27                     RC7PPS          equ	7975	;# 
   600     1F38                     ANSELA          equ	7992	;# 
   601     1F39                     WPUA            equ	7993	;# 
   602     1F3A                     ODCONA          equ	7994	;# 
   603     1F3B                     SLRCONA         equ	7995	;# 
   604     1F3C                     INLVLA          equ	7996	;# 
   605     1F3D                     IOCAP           equ	7997	;# 
   606     1F3E                     IOCAN           equ	7998	;# 
   607     1F3F                     IOCAF           equ	7999	;# 
   608     1F43                     ANSELB          equ	8003	;# 
   609     1F44                     WPUB            equ	8004	;# 
   610     1F45                     ODCONB          equ	8005	;# 
   611     1F46                     SLRCONB         equ	8006	;# 
   612     1F47                     INLVLB          equ	8007	;# 
   613     1F48                     IOCBP           equ	8008	;# 
   614     1F49                     IOCBN           equ	8009	;# 
   615     1F4A                     IOCBF           equ	8010	;# 
   616     1F4E                     ANSELC          equ	8014	;# 
   617     1F4F                     WPUC            equ	8015	;# 
   618     1F50                     ODCONC          equ	8016	;# 
   619     1F51                     SLRCONC         equ	8017	;# 
   620     1F52                     INLVLC          equ	8018	;# 
   621     1F53                     IOCCP           equ	8019	;# 
   622     1F54                     IOCCN           equ	8020	;# 
   623     1F55                     IOCCF           equ	8021	;# 
   624     1FE4                     STATUS_SHAD     equ	8164	;# 
   625     1FE5                     WREG_SHAD       equ	8165	;# 
   626     1FE6                     BSR_SHAD        equ	8166	;# 
   627     1FE7                     PCLATH_SHAD     equ	8167	;# 
   628     1FE8                     FSR0_SHAD       equ	8168	;# 
   629     1FE8                     FSR0L_SHAD      equ	8168	;# 
   630     1FE9                     FSR0H_SHAD      equ	8169	;# 
   631     1FEA                     FSR1L_SHAD      equ	8170	;# 
   632     1FEB                     FSR1H_SHAD      equ	8171	;# 
   633     1FED                     STKPTR          equ	8173	;# 
   634     1FEE                     TOSL            equ	8174	;# 
   635     1FEF                     TOSH            equ	8175	;# 
   636     0000                     INDF0           equ	0	;# 
   637     0001                     INDF1           equ	1	;# 
   638     0002                     PCL             equ	2	;# 
   639     0003                     STATUS          equ	3	;# 
   640     0004                     FSR0L           equ	4	;# 
   641     0005                     FSR0H           equ	5	;# 
   642     0006                     FSR1L           equ	6	;# 
   643     0007                     FSR1H           equ	7	;# 
   644     0008                     BSR             equ	8	;# 
   645     0009                     WREG            equ	9	;# 
   646     000A                     PCLATH          equ	10	;# 
   647     000B                     INTCON          equ	11	;# 
   648     000C                     PORTA           equ	12	;# 
   649     000D                     PORTB           equ	13	;# 
   650     000E                     PORTC           equ	14	;# 
   651     0012                     TRISA           equ	18	;# 
   652     0013                     TRISB           equ	19	;# 
   653     0014                     TRISC           equ	20	;# 
   654     0018                     LATA            equ	24	;# 
   655     0019                     LATB            equ	25	;# 
   656     001A                     LATC            equ	26	;# 
   657     009A                     CPCON           equ	154	;# 
   658     009B                     ADRES           equ	155	;# 
   659     009B                     ADRESL          equ	155	;# 
   660     009C                     ADRESH          equ	156	;# 
   661     009D                     ADCON0          equ	157	;# 
   662     009E                     ADCON1          equ	158	;# 
   663     009F                     ADACT           equ	159	;# 
   664     010C                     RB4I2C          equ	268	;# 
   665     010D                     RB6I2C          equ	269	;# 
   666     0119                     RC1REG          equ	281	;# 
   667     011A                     TX1REG          equ	282	;# 
   668     011B                     SP1BRG          equ	283	;# 
   669     011B                     SP1BRGL         equ	283	;# 
   670     011C                     SP1BRGH         equ	284	;# 
   671     011D                     RC1STA          equ	285	;# 
   672     011E                     TX1STA          equ	286	;# 
   673     011F                     BAUD1CON        equ	287	;# 
   674     018C                     SSP1BUF         equ	396	;# 
   675     018D                     SSP1ADD         equ	397	;# 
   676     018E                     SSP1MSK         equ	398	;# 
   677     018F                     SSP1STAT        equ	399	;# 
   678     0190                     SSP1CON1        equ	400	;# 
   679     0191                     SSP1CON2        equ	401	;# 
   680     0192                     SSP1CON3        equ	402	;# 
   681     020C                     TMR1            equ	524	;# 
   682     020C                     TMR1L           equ	524	;# 
   683     020D                     TMR1H           equ	525	;# 
   684     020E                     T1CON           equ	526	;# 
   685     020E                     TMR1CON         equ	526	;# 
   686     020F                     T1GCON          equ	527	;# 
   687     020F                     TMR1GCON        equ	527	;# 
   688     0210                     T1GATE          equ	528	;# 
   689     0210                     TMR1GATE        equ	528	;# 
   690     0211                     T1CLK           equ	529	;# 
   691     0211                     TMR1CLK         equ	529	;# 
   692     0211                     PR1             equ	529	;# 
   693     028C                     T2TMR           equ	652	;# 
   694     028C                     TMR2            equ	652	;# 
   695     028D                     T2PR            equ	653	;# 
   696     028D                     PR2             equ	653	;# 
   697     028E                     T2CON           equ	654	;# 
   698     028F                     T2HLT           equ	655	;# 
   699     0290                     T2CLKCON        equ	656	;# 
   700     0291                     T2RST           equ	657	;# 
   701     030C                     CCPR1           equ	780	;# 
   702     030C                     CCPR1L          equ	780	;# 
   703     030D                     CCPR1H          equ	781	;# 
   704     030E                     CCP1CON         equ	782	;# 
   705     030F                     CCP1CAP         equ	783	;# 
   706     0310                     CCPR2           equ	784	;# 
   707     0310                     CCPR2L          equ	784	;# 
   708     0311                     CCPR2H          equ	785	;# 
   709     0312                     CCP2CON         equ	786	;# 
   710     0313                     CCP2CAP         equ	787	;# 
   711     0314                     PWM3DC          equ	788	;# 
   712     0314                     PWM3DCL         equ	788	;# 
   713     0315                     PWM3DCH         equ	789	;# 
   714     0316                     PWM3CON         equ	790	;# 
   715     0318                     PWM4DC          equ	792	;# 
   716     0318                     PWM4DCL         equ	792	;# 
   717     0319                     PWM4DCH         equ	793	;# 
   718     031A                     PWM4CON         equ	794	;# 
   719     059C                     TMR0L           equ	1436	;# 
   720     059C                     TMR0            equ	1436	;# 
   721     059D                     TMR0H           equ	1437	;# 
   722     059D                     PR0             equ	1437	;# 
   723     059E                     T0CON0          equ	1438	;# 
   724     059F                     T0CON1          equ	1439	;# 
   725     070C                     PIR0            equ	1804	;# 
   726     070D                     PIR1            equ	1805	;# 
   727     070E                     PIR2            equ	1806	;# 
   728     0716                     PIE0            equ	1814	;# 
   729     0717                     PIE1            equ	1815	;# 
   730     0718                     PIE2            equ	1816	;# 
   731     080C                     WDTCON          equ	2060	;# 
   732     0811                     BORCON          equ	2065	;# 
   733     0813                     PCON0           equ	2067	;# 
   734     0814                     PCON1           equ	2068	;# 
   735     081A                     NVMADR          equ	2074	;# 
   736     081A                     NVMADRL         equ	2074	;# 
   737     081B                     NVMADRH         equ	2075	;# 
   738     081C                     NVMDAT          equ	2076	;# 
   739     081C                     NVMDATL         equ	2076	;# 
   740     081D                     NVMDATH         equ	2077	;# 
   741     081E                     NVMCON1         equ	2078	;# 
   742     081F                     NVMCON2         equ	2079	;# 
   743     088E                     OSCCON          equ	2190	;# 
   744     0890                     OSCSTAT         equ	2192	;# 
   745     0891                     OSCEN           equ	2193	;# 
   746     0892                     OSCTUNE         equ	2194	;# 
   747     0893                     OSCFRQ          equ	2195	;# 
   748     090C                     FVRCON          equ	2316	;# 
   749     1E8F                     PPSLOCK         equ	7823	;# 
   750     1E90                     INTPPS          equ	7824	;# 
   751     1E91                     T0CKIPPS        equ	7825	;# 
   752     1E92                     T1CKIPPS        equ	7826	;# 
   753     1E93                     T1GPPS          equ	7827	;# 
   754     1E9C                     T2INPPS         equ	7836	;# 
   755     1EA1                     CCP1PPS         equ	7841	;# 
   756     1EA2                     CCP2PPS         equ	7842	;# 
   757     1EC3                     ADACTPPS        equ	7875	;# 
   758     1EC5                     SSP1CLKPPS      equ	7877	;# 
   759     1EC6                     SSP1DATPPS      equ	7878	;# 
   760     1EC7                     SSP1SSPPS       equ	7879	;# 
   761     1ECB                     RX1PPS          equ	7883	;# 
   762     1ECB                     RX1DTPPS        equ	7883	;# 
   763     1ECB                     RXPPS           equ	7883	;# 
   764     1ECC                     CK1PPS          equ	7884	;# 
   765     1ECC                     TX1CKPPS        equ	7884	;# 
   766     1ECC                     CKPPS           equ	7884	;# 
   767     1F10                     RA0PPS          equ	7952	;# 
   768     1F11                     RA1PPS          equ	7953	;# 
   769     1F12                     RA2PPS          equ	7954	;# 
   770     1F14                     RA4PPS          equ	7956	;# 
   771     1F15                     RA5PPS          equ	7957	;# 
   772     1F1C                     RB4PPS          equ	7964	;# 
   773     1F1D                     RB5PPS          equ	7965	;# 
   774     1F1E                     RB6PPS          equ	7966	;# 
   775     1F1F                     RB7PPS          equ	7967	;# 
   776     1F20                     RC0PPS          equ	7968	;# 
   777     1F21                     RC1PPS          equ	7969	;# 
   778     1F22                     RC2PPS          equ	7970	;# 
   779     1F23                     RC3PPS          equ	7971	;# 
   780     1F24                     RC4PPS          equ	7972	;# 
   781     1F25                     RC5PPS          equ	7973	;# 
   782     1F26                     RC6PPS          equ	7974	;# 
   783     1F27                     RC7PPS          equ	7975	;# 
   784     1F38                     ANSELA          equ	7992	;# 
   785     1F39                     WPUA            equ	7993	;# 
   786     1F3A                     ODCONA          equ	7994	;# 
   787     1F3B                     SLRCONA         equ	7995	;# 
   788     1F3C                     INLVLA          equ	7996	;# 
   789     1F3D                     IOCAP           equ	7997	;# 
   790     1F3E                     IOCAN           equ	7998	;# 
   791     1F3F                     IOCAF           equ	7999	;# 
   792     1F43                     ANSELB          equ	8003	;# 
   793     1F44                     WPUB            equ	8004	;# 
   794     1F45                     ODCONB          equ	8005	;# 
   795     1F46                     SLRCONB         equ	8006	;# 
   796     1F47                     INLVLB          equ	8007	;# 
   797     1F48                     IOCBP           equ	8008	;# 
   798     1F49                     IOCBN           equ	8009	;# 
   799     1F4A                     IOCBF           equ	8010	;# 
   800     1F4E                     ANSELC          equ	8014	;# 
   801     1F4F                     WPUC            equ	8015	;# 
   802     1F50                     ODCONC          equ	8016	;# 
   803     1F51                     SLRCONC         equ	8017	;# 
   804     1F52                     INLVLC          equ	8018	;# 
   805     1F53                     IOCCP           equ	8019	;# 
   806     1F54                     IOCCN           equ	8020	;# 
   807     1F55                     IOCCF           equ	8021	;# 
   808     1FE4                     STATUS_SHAD     equ	8164	;# 
   809     1FE5                     WREG_SHAD       equ	8165	;# 
   810     1FE6                     BSR_SHAD        equ	8166	;# 
   811     1FE7                     PCLATH_SHAD     equ	8167	;# 
   812     1FE8                     FSR0_SHAD       equ	8168	;# 
   813     1FE8                     FSR0L_SHAD      equ	8168	;# 
   814     1FE9                     FSR0H_SHAD      equ	8169	;# 
   815     1FEA                     FSR1L_SHAD      equ	8170	;# 
   816     1FEB                     FSR1H_SHAD      equ	8171	;# 
   817     1FED                     STKPTR          equ	8173	;# 
   818     1FEE                     TOSL            equ	8174	;# 
   819     1FEF                     TOSH            equ	8175	;# 
   820     0000                     INDF0           equ	0	;# 
   821     0001                     INDF1           equ	1	;# 
   822     0002                     PCL             equ	2	;# 
   823     0003                     STATUS          equ	3	;# 
   824     0004                     FSR0L           equ	4	;# 
   825     0005                     FSR0H           equ	5	;# 
   826     0006                     FSR1L           equ	6	;# 
   827     0007                     FSR1H           equ	7	;# 
   828     0008                     BSR             equ	8	;# 
   829     0009                     WREG            equ	9	;# 
   830     000A                     PCLATH          equ	10	;# 
   831     000B                     INTCON          equ	11	;# 
   832     000C                     PORTA           equ	12	;# 
   833     000D                     PORTB           equ	13	;# 
   834     000E                     PORTC           equ	14	;# 
   835     0012                     TRISA           equ	18	;# 
   836     0013                     TRISB           equ	19	;# 
   837     0014                     TRISC           equ	20	;# 
   838     0018                     LATA            equ	24	;# 
   839     0019                     LATB            equ	25	;# 
   840     001A                     LATC            equ	26	;# 
   841     009A                     CPCON           equ	154	;# 
   842     009B                     ADRES           equ	155	;# 
   843     009B                     ADRESL          equ	155	;# 
   844     009C                     ADRESH          equ	156	;# 
   845     009D                     ADCON0          equ	157	;# 
   846     009E                     ADCON1          equ	158	;# 
   847     009F                     ADACT           equ	159	;# 
   848     010C                     RB4I2C          equ	268	;# 
   849     010D                     RB6I2C          equ	269	;# 
   850     0119                     RC1REG          equ	281	;# 
   851     011A                     TX1REG          equ	282	;# 
   852     011B                     SP1BRG          equ	283	;# 
   853     011B                     SP1BRGL         equ	283	;# 
   854     011C                     SP1BRGH         equ	284	;# 
   855     011D                     RC1STA          equ	285	;# 
   856     011E                     TX1STA          equ	286	;# 
   857     011F                     BAUD1CON        equ	287	;# 
   858     018C                     SSP1BUF         equ	396	;# 
   859     018D                     SSP1ADD         equ	397	;# 
   860     018E                     SSP1MSK         equ	398	;# 
   861     018F                     SSP1STAT        equ	399	;# 
   862     0190                     SSP1CON1        equ	400	;# 
   863     0191                     SSP1CON2        equ	401	;# 
   864     0192                     SSP1CON3        equ	402	;# 
   865     020C                     TMR1            equ	524	;# 
   866     020C                     TMR1L           equ	524	;# 
   867     020D                     TMR1H           equ	525	;# 
   868     020E                     T1CON           equ	526	;# 
   869     020E                     TMR1CON         equ	526	;# 
   870     020F                     T1GCON          equ	527	;# 
   871     020F                     TMR1GCON        equ	527	;# 
   872     0210                     T1GATE          equ	528	;# 
   873     0210                     TMR1GATE        equ	528	;# 
   874     0211                     T1CLK           equ	529	;# 
   875     0211                     TMR1CLK         equ	529	;# 
   876     0211                     PR1             equ	529	;# 
   877     028C                     T2TMR           equ	652	;# 
   878     028C                     TMR2            equ	652	;# 
   879     028D                     T2PR            equ	653	;# 
   880     028D                     PR2             equ	653	;# 
   881     028E                     T2CON           equ	654	;# 
   882     028F                     T2HLT           equ	655	;# 
   883     0290                     T2CLKCON        equ	656	;# 
   884     0291                     T2RST           equ	657	;# 
   885     030C                     CCPR1           equ	780	;# 
   886     030C                     CCPR1L          equ	780	;# 
   887     030D                     CCPR1H          equ	781	;# 
   888     030E                     CCP1CON         equ	782	;# 
   889     030F                     CCP1CAP         equ	783	;# 
   890     0310                     CCPR2           equ	784	;# 
   891     0310                     CCPR2L          equ	784	;# 
   892     0311                     CCPR2H          equ	785	;# 
   893     0312                     CCP2CON         equ	786	;# 
   894     0313                     CCP2CAP         equ	787	;# 
   895     0314                     PWM3DC          equ	788	;# 
   896     0314                     PWM3DCL         equ	788	;# 
   897     0315                     PWM3DCH         equ	789	;# 
   898     0316                     PWM3CON         equ	790	;# 
   899     0318                     PWM4DC          equ	792	;# 
   900     0318                     PWM4DCL         equ	792	;# 
   901     0319                     PWM4DCH         equ	793	;# 
   902     031A                     PWM4CON         equ	794	;# 
   903     059C                     TMR0L           equ	1436	;# 
   904     059C                     TMR0            equ	1436	;# 
   905     059D                     TMR0H           equ	1437	;# 
   906     059D                     PR0             equ	1437	;# 
   907     059E                     T0CON0          equ	1438	;# 
   908     059F                     T0CON1          equ	1439	;# 
   909     070C                     PIR0            equ	1804	;# 
   910     070D                     PIR1            equ	1805	;# 
   911     070E                     PIR2            equ	1806	;# 
   912     0716                     PIE0            equ	1814	;# 
   913     0717                     PIE1            equ	1815	;# 
   914     0718                     PIE2            equ	1816	;# 
   915     080C                     WDTCON          equ	2060	;# 
   916     0811                     BORCON          equ	2065	;# 
   917     0813                     PCON0           equ	2067	;# 
   918     0814                     PCON1           equ	2068	;# 
   919     081A                     NVMADR          equ	2074	;# 
   920     081A                     NVMADRL         equ	2074	;# 
   921     081B                     NVMADRH         equ	2075	;# 
   922     081C                     NVMDAT          equ	2076	;# 
   923     081C                     NVMDATL         equ	2076	;# 
   924     081D                     NVMDATH         equ	2077	;# 
   925     081E                     NVMCON1         equ	2078	;# 
   926     081F                     NVMCON2         equ	2079	;# 
   927     088E                     OSCCON          equ	2190	;# 
   928     0890                     OSCSTAT         equ	2192	;# 
   929     0891                     OSCEN           equ	2193	;# 
   930     0892                     OSCTUNE         equ	2194	;# 
   931     0893                     OSCFRQ          equ	2195	;# 
   932     090C                     FVRCON          equ	2316	;# 
   933     1E8F                     PPSLOCK         equ	7823	;# 
   934     1E90                     INTPPS          equ	7824	;# 
   935     1E91                     T0CKIPPS        equ	7825	;# 
   936     1E92                     T1CKIPPS        equ	7826	;# 
   937     1E93                     T1GPPS          equ	7827	;# 
   938     1E9C                     T2INPPS         equ	7836	;# 
   939     1EA1                     CCP1PPS         equ	7841	;# 
   940     1EA2                     CCP2PPS         equ	7842	;# 
   941     1EC3                     ADACTPPS        equ	7875	;# 
   942     1EC5                     SSP1CLKPPS      equ	7877	;# 
   943     1EC6                     SSP1DATPPS      equ	7878	;# 
   944     1EC7                     SSP1SSPPS       equ	7879	;# 
   945     1ECB                     RX1PPS          equ	7883	;# 
   946     1ECB                     RX1DTPPS        equ	7883	;# 
   947     1ECB                     RXPPS           equ	7883	;# 
   948     1ECC                     CK1PPS          equ	7884	;# 
   949     1ECC                     TX1CKPPS        equ	7884	;# 
   950     1ECC                     CKPPS           equ	7884	;# 
   951     1F10                     RA0PPS          equ	7952	;# 
   952     1F11                     RA1PPS          equ	7953	;# 
   953     1F12                     RA2PPS          equ	7954	;# 
   954     1F14                     RA4PPS          equ	7956	;# 
   955     1F15                     RA5PPS          equ	7957	;# 
   956     1F1C                     RB4PPS          equ	7964	;# 
   957     1F1D                     RB5PPS          equ	7965	;# 
   958     1F1E                     RB6PPS          equ	7966	;# 
   959     1F1F                     RB7PPS          equ	7967	;# 
   960     1F20                     RC0PPS          equ	7968	;# 
   961     1F21                     RC1PPS          equ	7969	;# 
   962     1F22                     RC2PPS          equ	7970	;# 
   963     1F23                     RC3PPS          equ	7971	;# 
   964     1F24                     RC4PPS          equ	7972	;# 
   965     1F25                     RC5PPS          equ	7973	;# 
   966     1F26                     RC6PPS          equ	7974	;# 
   967     1F27                     RC7PPS          equ	7975	;# 
   968     1F38                     ANSELA          equ	7992	;# 
   969     1F39                     WPUA            equ	7993	;# 
   970     1F3A                     ODCONA          equ	7994	;# 
   971     1F3B                     SLRCONA         equ	7995	;# 
   972     1F3C                     INLVLA          equ	7996	;# 
   973     1F3D                     IOCAP           equ	7997	;# 
   974     1F3E                     IOCAN           equ	7998	;# 
   975     1F3F                     IOCAF           equ	7999	;# 
   976     1F43                     ANSELB          equ	8003	;# 
   977     1F44                     WPUB            equ	8004	;# 
   978     1F45                     ODCONB          equ	8005	;# 
   979     1F46                     SLRCONB         equ	8006	;# 
   980     1F47                     INLVLB          equ	8007	;# 
   981     1F48                     IOCBP           equ	8008	;# 
   982     1F49                     IOCBN           equ	8009	;# 
   983     1F4A                     IOCBF           equ	8010	;# 
   984     1F4E                     ANSELC          equ	8014	;# 
   985     1F4F                     WPUC            equ	8015	;# 
   986     1F50                     ODCONC          equ	8016	;# 
   987     1F51                     SLRCONC         equ	8017	;# 
   988     1F52                     INLVLC          equ	8018	;# 
   989     1F53                     IOCCP           equ	8019	;# 
   990     1F54                     IOCCN           equ	8020	;# 
   991     1F55                     IOCCF           equ	8021	;# 
   992     1FE4                     STATUS_SHAD     equ	8164	;# 
   993     1FE5                     WREG_SHAD       equ	8165	;# 
   994     1FE6                     BSR_SHAD        equ	8166	;# 
   995     1FE7                     PCLATH_SHAD     equ	8167	;# 
   996     1FE8                     FSR0_SHAD       equ	8168	;# 
   997     1FE8                     FSR0L_SHAD      equ	8168	;# 
   998     1FE9                     FSR0H_SHAD      equ	8169	;# 
   999     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1000     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1001     1FED                     STKPTR          equ	8173	;# 
  1002     1FEE                     TOSL            equ	8174	;# 
  1003     1FEF                     TOSH            equ	8175	;# 
  1004     0000                     INDF0           equ	0	;# 
  1005     0001                     INDF1           equ	1	;# 
  1006     0002                     PCL             equ	2	;# 
  1007     0003                     STATUS          equ	3	;# 
  1008     0004                     FSR0L           equ	4	;# 
  1009     0005                     FSR0H           equ	5	;# 
  1010     0006                     FSR1L           equ	6	;# 
  1011     0007                     FSR1H           equ	7	;# 
  1012     0008                     BSR             equ	8	;# 
  1013     0009                     WREG            equ	9	;# 
  1014     000A                     PCLATH          equ	10	;# 
  1015     000B                     INTCON          equ	11	;# 
  1016     000C                     PORTA           equ	12	;# 
  1017     000D                     PORTB           equ	13	;# 
  1018     000E                     PORTC           equ	14	;# 
  1019     0012                     TRISA           equ	18	;# 
  1020     0013                     TRISB           equ	19	;# 
  1021     0014                     TRISC           equ	20	;# 
  1022     0018                     LATA            equ	24	;# 
  1023     0019                     LATB            equ	25	;# 
  1024     001A                     LATC            equ	26	;# 
  1025     009A                     CPCON           equ	154	;# 
  1026     009B                     ADRES           equ	155	;# 
  1027     009B                     ADRESL          equ	155	;# 
  1028     009C                     ADRESH          equ	156	;# 
  1029     009D                     ADCON0          equ	157	;# 
  1030     009E                     ADCON1          equ	158	;# 
  1031     009F                     ADACT           equ	159	;# 
  1032     010C                     RB4I2C          equ	268	;# 
  1033     010D                     RB6I2C          equ	269	;# 
  1034     0119                     RC1REG          equ	281	;# 
  1035     011A                     TX1REG          equ	282	;# 
  1036     011B                     SP1BRG          equ	283	;# 
  1037     011B                     SP1BRGL         equ	283	;# 
  1038     011C                     SP1BRGH         equ	284	;# 
  1039     011D                     RC1STA          equ	285	;# 
  1040     011E                     TX1STA          equ	286	;# 
  1041     011F                     BAUD1CON        equ	287	;# 
  1042     018C                     SSP1BUF         equ	396	;# 
  1043     018D                     SSP1ADD         equ	397	;# 
  1044     018E                     SSP1MSK         equ	398	;# 
  1045     018F                     SSP1STAT        equ	399	;# 
  1046     0190                     SSP1CON1        equ	400	;# 
  1047     0191                     SSP1CON2        equ	401	;# 
  1048     0192                     SSP1CON3        equ	402	;# 
  1049     020C                     TMR1            equ	524	;# 
  1050     020C                     TMR1L           equ	524	;# 
  1051     020D                     TMR1H           equ	525	;# 
  1052     020E                     T1CON           equ	526	;# 
  1053     020E                     TMR1CON         equ	526	;# 
  1054     020F                     T1GCON          equ	527	;# 
  1055     020F                     TMR1GCON        equ	527	;# 
  1056     0210                     T1GATE          equ	528	;# 
  1057     0210                     TMR1GATE        equ	528	;# 
  1058     0211                     T1CLK           equ	529	;# 
  1059     0211                     TMR1CLK         equ	529	;# 
  1060     0211                     PR1             equ	529	;# 
  1061     028C                     T2TMR           equ	652	;# 
  1062     028C                     TMR2            equ	652	;# 
  1063     028D                     T2PR            equ	653	;# 
  1064     028D                     PR2             equ	653	;# 
  1065     028E                     T2CON           equ	654	;# 
  1066     028F                     T2HLT           equ	655	;# 
  1067     0290                     T2CLKCON        equ	656	;# 
  1068     0291                     T2RST           equ	657	;# 
  1069     030C                     CCPR1           equ	780	;# 
  1070     030C                     CCPR1L          equ	780	;# 
  1071     030D                     CCPR1H          equ	781	;# 
  1072     030E                     CCP1CON         equ	782	;# 
  1073     030F                     CCP1CAP         equ	783	;# 
  1074     0310                     CCPR2           equ	784	;# 
  1075     0310                     CCPR2L          equ	784	;# 
  1076     0311                     CCPR2H          equ	785	;# 
  1077     0312                     CCP2CON         equ	786	;# 
  1078     0313                     CCP2CAP         equ	787	;# 
  1079     0314                     PWM3DC          equ	788	;# 
  1080     0314                     PWM3DCL         equ	788	;# 
  1081     0315                     PWM3DCH         equ	789	;# 
  1082     0316                     PWM3CON         equ	790	;# 
  1083     0318                     PWM4DC          equ	792	;# 
  1084     0318                     PWM4DCL         equ	792	;# 
  1085     0319                     PWM4DCH         equ	793	;# 
  1086     031A                     PWM4CON         equ	794	;# 
  1087     059C                     TMR0L           equ	1436	;# 
  1088     059C                     TMR0            equ	1436	;# 
  1089     059D                     TMR0H           equ	1437	;# 
  1090     059D                     PR0             equ	1437	;# 
  1091     059E                     T0CON0          equ	1438	;# 
  1092     059F                     T0CON1          equ	1439	;# 
  1093     070C                     PIR0            equ	1804	;# 
  1094     070D                     PIR1            equ	1805	;# 
  1095     070E                     PIR2            equ	1806	;# 
  1096     0716                     PIE0            equ	1814	;# 
  1097     0717                     PIE1            equ	1815	;# 
  1098     0718                     PIE2            equ	1816	;# 
  1099     080C                     WDTCON          equ	2060	;# 
  1100     0811                     BORCON          equ	2065	;# 
  1101     0813                     PCON0           equ	2067	;# 
  1102     0814                     PCON1           equ	2068	;# 
  1103     081A                     NVMADR          equ	2074	;# 
  1104     081A                     NVMADRL         equ	2074	;# 
  1105     081B                     NVMADRH         equ	2075	;# 
  1106     081C                     NVMDAT          equ	2076	;# 
  1107     081C                     NVMDATL         equ	2076	;# 
  1108     081D                     NVMDATH         equ	2077	;# 
  1109     081E                     NVMCON1         equ	2078	;# 
  1110     081F                     NVMCON2         equ	2079	;# 
  1111     088E                     OSCCON          equ	2190	;# 
  1112     0890                     OSCSTAT         equ	2192	;# 
  1113     0891                     OSCEN           equ	2193	;# 
  1114     0892                     OSCTUNE         equ	2194	;# 
  1115     0893                     OSCFRQ          equ	2195	;# 
  1116     090C                     FVRCON          equ	2316	;# 
  1117     1E8F                     PPSLOCK         equ	7823	;# 
  1118     1E90                     INTPPS          equ	7824	;# 
  1119     1E91                     T0CKIPPS        equ	7825	;# 
  1120     1E92                     T1CKIPPS        equ	7826	;# 
  1121     1E93                     T1GPPS          equ	7827	;# 
  1122     1E9C                     T2INPPS         equ	7836	;# 
  1123     1EA1                     CCP1PPS         equ	7841	;# 
  1124     1EA2                     CCP2PPS         equ	7842	;# 
  1125     1EC3                     ADACTPPS        equ	7875	;# 
  1126     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1127     1EC6                     SSP1DATPPS      equ	7878	;# 
  1128     1EC7                     SSP1SSPPS       equ	7879	;# 
  1129     1ECB                     RX1PPS          equ	7883	;# 
  1130     1ECB                     RX1DTPPS        equ	7883	;# 
  1131     1ECB                     RXPPS           equ	7883	;# 
  1132     1ECC                     CK1PPS          equ	7884	;# 
  1133     1ECC                     TX1CKPPS        equ	7884	;# 
  1134     1ECC                     CKPPS           equ	7884	;# 
  1135     1F10                     RA0PPS          equ	7952	;# 
  1136     1F11                     RA1PPS          equ	7953	;# 
  1137     1F12                     RA2PPS          equ	7954	;# 
  1138     1F14                     RA4PPS          equ	7956	;# 
  1139     1F15                     RA5PPS          equ	7957	;# 
  1140     1F1C                     RB4PPS          equ	7964	;# 
  1141     1F1D                     RB5PPS          equ	7965	;# 
  1142     1F1E                     RB6PPS          equ	7966	;# 
  1143     1F1F                     RB7PPS          equ	7967	;# 
  1144     1F20                     RC0PPS          equ	7968	;# 
  1145     1F21                     RC1PPS          equ	7969	;# 
  1146     1F22                     RC2PPS          equ	7970	;# 
  1147     1F23                     RC3PPS          equ	7971	;# 
  1148     1F24                     RC4PPS          equ	7972	;# 
  1149     1F25                     RC5PPS          equ	7973	;# 
  1150     1F26                     RC6PPS          equ	7974	;# 
  1151     1F27                     RC7PPS          equ	7975	;# 
  1152     1F38                     ANSELA          equ	7992	;# 
  1153     1F39                     WPUA            equ	7993	;# 
  1154     1F3A                     ODCONA          equ	7994	;# 
  1155     1F3B                     SLRCONA         equ	7995	;# 
  1156     1F3C                     INLVLA          equ	7996	;# 
  1157     1F3D                     IOCAP           equ	7997	;# 
  1158     1F3E                     IOCAN           equ	7998	;# 
  1159     1F3F                     IOCAF           equ	7999	;# 
  1160     1F43                     ANSELB          equ	8003	;# 
  1161     1F44                     WPUB            equ	8004	;# 
  1162     1F45                     ODCONB          equ	8005	;# 
  1163     1F46                     SLRCONB         equ	8006	;# 
  1164     1F47                     INLVLB          equ	8007	;# 
  1165     1F48                     IOCBP           equ	8008	;# 
  1166     1F49                     IOCBN           equ	8009	;# 
  1167     1F4A                     IOCBF           equ	8010	;# 
  1168     1F4E                     ANSELC          equ	8014	;# 
  1169     1F4F                     WPUC            equ	8015	;# 
  1170     1F50                     ODCONC          equ	8016	;# 
  1171     1F51                     SLRCONC         equ	8017	;# 
  1172     1F52                     INLVLC          equ	8018	;# 
  1173     1F53                     IOCCP           equ	8019	;# 
  1174     1F54                     IOCCN           equ	8020	;# 
  1175     1F55                     IOCCF           equ	8021	;# 
  1176     1FE4                     STATUS_SHAD     equ	8164	;# 
  1177     1FE5                     WREG_SHAD       equ	8165	;# 
  1178     1FE6                     BSR_SHAD        equ	8166	;# 
  1179     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1180     1FE8                     FSR0_SHAD       equ	8168	;# 
  1181     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1182     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1183     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1184     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1185     1FED                     STKPTR          equ	8173	;# 
  1186     1FEE                     TOSL            equ	8174	;# 
  1187     1FEF                     TOSH            equ	8175	;# 
  1188     0000                     INDF0           equ	0	;# 
  1189     0001                     INDF1           equ	1	;# 
  1190     0002                     PCL             equ	2	;# 
  1191     0003                     STATUS          equ	3	;# 
  1192     0004                     FSR0L           equ	4	;# 
  1193     0005                     FSR0H           equ	5	;# 
  1194     0006                     FSR1L           equ	6	;# 
  1195     0007                     FSR1H           equ	7	;# 
  1196     0008                     BSR             equ	8	;# 
  1197     0009                     WREG            equ	9	;# 
  1198     000A                     PCLATH          equ	10	;# 
  1199     000B                     INTCON          equ	11	;# 
  1200     000C                     PORTA           equ	12	;# 
  1201     000D                     PORTB           equ	13	;# 
  1202     000E                     PORTC           equ	14	;# 
  1203     0012                     TRISA           equ	18	;# 
  1204     0013                     TRISB           equ	19	;# 
  1205     0014                     TRISC           equ	20	;# 
  1206     0018                     LATA            equ	24	;# 
  1207     0019                     LATB            equ	25	;# 
  1208     001A                     LATC            equ	26	;# 
  1209     009A                     CPCON           equ	154	;# 
  1210     009B                     ADRES           equ	155	;# 
  1211     009B                     ADRESL          equ	155	;# 
  1212     009C                     ADRESH          equ	156	;# 
  1213     009D                     ADCON0          equ	157	;# 
  1214     009E                     ADCON1          equ	158	;# 
  1215     009F                     ADACT           equ	159	;# 
  1216     010C                     RB4I2C          equ	268	;# 
  1217     010D                     RB6I2C          equ	269	;# 
  1218     0119                     RC1REG          equ	281	;# 
  1219     011A                     TX1REG          equ	282	;# 
  1220     011B                     SP1BRG          equ	283	;# 
  1221     011B                     SP1BRGL         equ	283	;# 
  1222     011C                     SP1BRGH         equ	284	;# 
  1223     011D                     RC1STA          equ	285	;# 
  1224     011E                     TX1STA          equ	286	;# 
  1225     011F                     BAUD1CON        equ	287	;# 
  1226     018C                     SSP1BUF         equ	396	;# 
  1227     018D                     SSP1ADD         equ	397	;# 
  1228     018E                     SSP1MSK         equ	398	;# 
  1229     018F                     SSP1STAT        equ	399	;# 
  1230     0190                     SSP1CON1        equ	400	;# 
  1231     0191                     SSP1CON2        equ	401	;# 
  1232     0192                     SSP1CON3        equ	402	;# 
  1233     020C                     TMR1            equ	524	;# 
  1234     020C                     TMR1L           equ	524	;# 
  1235     020D                     TMR1H           equ	525	;# 
  1236     020E                     T1CON           equ	526	;# 
  1237     020E                     TMR1CON         equ	526	;# 
  1238     020F                     T1GCON          equ	527	;# 
  1239     020F                     TMR1GCON        equ	527	;# 
  1240     0210                     T1GATE          equ	528	;# 
  1241     0210                     TMR1GATE        equ	528	;# 
  1242     0211                     T1CLK           equ	529	;# 
  1243     0211                     TMR1CLK         equ	529	;# 
  1244     0211                     PR1             equ	529	;# 
  1245     028C                     T2TMR           equ	652	;# 
  1246     028C                     TMR2            equ	652	;# 
  1247     028D                     T2PR            equ	653	;# 
  1248     028D                     PR2             equ	653	;# 
  1249     028E                     T2CON           equ	654	;# 
  1250     028F                     T2HLT           equ	655	;# 
  1251     0290                     T2CLKCON        equ	656	;# 
  1252     0291                     T2RST           equ	657	;# 
  1253     030C                     CCPR1           equ	780	;# 
  1254     030C                     CCPR1L          equ	780	;# 
  1255     030D                     CCPR1H          equ	781	;# 
  1256     030E                     CCP1CON         equ	782	;# 
  1257     030F                     CCP1CAP         equ	783	;# 
  1258     0310                     CCPR2           equ	784	;# 
  1259     0310                     CCPR2L          equ	784	;# 
  1260     0311                     CCPR2H          equ	785	;# 
  1261     0312                     CCP2CON         equ	786	;# 
  1262     0313                     CCP2CAP         equ	787	;# 
  1263     0314                     PWM3DC          equ	788	;# 
  1264     0314                     PWM3DCL         equ	788	;# 
  1265     0315                     PWM3DCH         equ	789	;# 
  1266     0316                     PWM3CON         equ	790	;# 
  1267     0318                     PWM4DC          equ	792	;# 
  1268     0318                     PWM4DCL         equ	792	;# 
  1269     0319                     PWM4DCH         equ	793	;# 
  1270     031A                     PWM4CON         equ	794	;# 
  1271     059C                     TMR0L           equ	1436	;# 
  1272     059C                     TMR0            equ	1436	;# 
  1273     059D                     TMR0H           equ	1437	;# 
  1274     059D                     PR0             equ	1437	;# 
  1275     059E                     T0CON0          equ	1438	;# 
  1276     059F                     T0CON1          equ	1439	;# 
  1277     070C                     PIR0            equ	1804	;# 
  1278     070D                     PIR1            equ	1805	;# 
  1279     070E                     PIR2            equ	1806	;# 
  1280     0716                     PIE0            equ	1814	;# 
  1281     0717                     PIE1            equ	1815	;# 
  1282     0718                     PIE2            equ	1816	;# 
  1283     080C                     WDTCON          equ	2060	;# 
  1284     0811                     BORCON          equ	2065	;# 
  1285     0813                     PCON0           equ	2067	;# 
  1286     0814                     PCON1           equ	2068	;# 
  1287     081A                     NVMADR          equ	2074	;# 
  1288     081A                     NVMADRL         equ	2074	;# 
  1289     081B                     NVMADRH         equ	2075	;# 
  1290     081C                     NVMDAT          equ	2076	;# 
  1291     081C                     NVMDATL         equ	2076	;# 
  1292     081D                     NVMDATH         equ	2077	;# 
  1293     081E                     NVMCON1         equ	2078	;# 
  1294     081F                     NVMCON2         equ	2079	;# 
  1295     088E                     OSCCON          equ	2190	;# 
  1296     0890                     OSCSTAT         equ	2192	;# 
  1297     0891                     OSCEN           equ	2193	;# 
  1298     0892                     OSCTUNE         equ	2194	;# 
  1299     0893                     OSCFRQ          equ	2195	;# 
  1300     090C                     FVRCON          equ	2316	;# 
  1301     1E8F                     PPSLOCK         equ	7823	;# 
  1302     1E90                     INTPPS          equ	7824	;# 
  1303     1E91                     T0CKIPPS        equ	7825	;# 
  1304     1E92                     T1CKIPPS        equ	7826	;# 
  1305     1E93                     T1GPPS          equ	7827	;# 
  1306     1E9C                     T2INPPS         equ	7836	;# 
  1307     1EA1                     CCP1PPS         equ	7841	;# 
  1308     1EA2                     CCP2PPS         equ	7842	;# 
  1309     1EC3                     ADACTPPS        equ	7875	;# 
  1310     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1311     1EC6                     SSP1DATPPS      equ	7878	;# 
  1312     1EC7                     SSP1SSPPS       equ	7879	;# 
  1313     1ECB                     RX1PPS          equ	7883	;# 
  1314     1ECB                     RX1DTPPS        equ	7883	;# 
  1315     1ECB                     RXPPS           equ	7883	;# 
  1316     1ECC                     CK1PPS          equ	7884	;# 
  1317     1ECC                     TX1CKPPS        equ	7884	;# 
  1318     1ECC                     CKPPS           equ	7884	;# 
  1319     1F10                     RA0PPS          equ	7952	;# 
  1320     1F11                     RA1PPS          equ	7953	;# 
  1321     1F12                     RA2PPS          equ	7954	;# 
  1322     1F14                     RA4PPS          equ	7956	;# 
  1323     1F15                     RA5PPS          equ	7957	;# 
  1324     1F1C                     RB4PPS          equ	7964	;# 
  1325     1F1D                     RB5PPS          equ	7965	;# 
  1326     1F1E                     RB6PPS          equ	7966	;# 
  1327     1F1F                     RB7PPS          equ	7967	;# 
  1328     1F20                     RC0PPS          equ	7968	;# 
  1329     1F21                     RC1PPS          equ	7969	;# 
  1330     1F22                     RC2PPS          equ	7970	;# 
  1331     1F23                     RC3PPS          equ	7971	;# 
  1332     1F24                     RC4PPS          equ	7972	;# 
  1333     1F25                     RC5PPS          equ	7973	;# 
  1334     1F26                     RC6PPS          equ	7974	;# 
  1335     1F27                     RC7PPS          equ	7975	;# 
  1336     1F38                     ANSELA          equ	7992	;# 
  1337     1F39                     WPUA            equ	7993	;# 
  1338     1F3A                     ODCONA          equ	7994	;# 
  1339     1F3B                     SLRCONA         equ	7995	;# 
  1340     1F3C                     INLVLA          equ	7996	;# 
  1341     1F3D                     IOCAP           equ	7997	;# 
  1342     1F3E                     IOCAN           equ	7998	;# 
  1343     1F3F                     IOCAF           equ	7999	;# 
  1344     1F43                     ANSELB          equ	8003	;# 
  1345     1F44                     WPUB            equ	8004	;# 
  1346     1F45                     ODCONB          equ	8005	;# 
  1347     1F46                     SLRCONB         equ	8006	;# 
  1348     1F47                     INLVLB          equ	8007	;# 
  1349     1F48                     IOCBP           equ	8008	;# 
  1350     1F49                     IOCBN           equ	8009	;# 
  1351     1F4A                     IOCBF           equ	8010	;# 
  1352     1F4E                     ANSELC          equ	8014	;# 
  1353     1F4F                     WPUC            equ	8015	;# 
  1354     1F50                     ODCONC          equ	8016	;# 
  1355     1F51                     SLRCONC         equ	8017	;# 
  1356     1F52                     INLVLC          equ	8018	;# 
  1357     1F53                     IOCCP           equ	8019	;# 
  1358     1F54                     IOCCN           equ	8020	;# 
  1359     1F55                     IOCCF           equ	8021	;# 
  1360     1FE4                     STATUS_SHAD     equ	8164	;# 
  1361     1FE5                     WREG_SHAD       equ	8165	;# 
  1362     1FE6                     BSR_SHAD        equ	8166	;# 
  1363     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1364     1FE8                     FSR0_SHAD       equ	8168	;# 
  1365     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1366     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1367     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1368     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1369     1FED                     STKPTR          equ	8173	;# 
  1370     1FEE                     TOSL            equ	8174	;# 
  1371     1FEF                     TOSH            equ	8175	;# 
  1372                           
  1373 ;; Function _SPI1_Deinitialize is unused but had its address taken
  1374     0000                     _SPI1_Deinitialize equ	0
  1375                           
  1376 ;; Function _SPI1_Close is unused but had its address taken
  1377     0000                     _SPI1_Close     equ	0
  1378                           
  1379 ;; Function _SPI1_BufferExchange is unused but had its address taken
  1380     0000                     _SPI1_BufferExchange equ	0
  1381                           
  1382 ;; Function _SPI1_BufferWrite is unused but had its address taken
  1383     0000                     _SPI1_BufferWrite equ	0
  1384                           
  1385 ;; Function _SPI1_BufferRead is unused but had its address taken
  1386     0000                     _SPI1_BufferRead equ	0
  1387                           
  1388 ;; Function _SPI1_ByteExchange is unused but had its address taken
  1389     0000                     _SPI1_ByteExchange equ	0
  1390                           
  1391 ;; Function _SPI1_ByteRead is unused but had its address taken
  1392     0000                     _SPI1_ByteRead  equ	0
  1393                           
  1394 ;; Function _SPI1_IsRxReady is unused but had its address taken
  1395     0000                     _SPI1_IsRxReady equ	0
  1396                           
  1397 ;; Function _SPI1_IsTxReady is unused but had its address taken
  1398     0000                     _SPI1_IsTxReady equ	0
  1399                           
  1400 ;; Function _TMR0_Deinitialize is unused but had its address taken
  1401     0000                     _TMR0_Deinitialize equ	0
  1402                           
  1403 ;; Function _TMR0_Start is unused but had its address taken
  1404     0000                     _TMR0_Start     equ	0
  1405                           
  1406 ;; Function _TMR0_Stop is unused but had its address taken
  1407     0000                     _TMR0_Stop      equ	0
  1408                           
  1409 ;; Function _TMR0_CounterGet is unused but had its address taken
  1410     0000                     _TMR0_CounterGet equ	0
  1411                           
  1412 ;; Function _TMR0_CounterSet is unused but had its address taken
  1413     0000                     _TMR0_CounterSet equ	0
  1414                           
  1415 ;; Function _TMR0_PeriodSet is unused but had its address taken
  1416     0000                     _TMR0_PeriodSet equ	0
  1417                           
  1418 ;; Function _TMR0_PeriodGet is unused but had its address taken
  1419     0000                     _TMR0_PeriodGet equ	0
  1420                           
  1421 ;; Function _TMR0_MaxCountGet is unused but had its address taken
  1422     0000                     _TMR0_MaxCountGet equ	0
  1423                           
  1424 ;; Function _TMR0_OverflowCallbackRegister is unused but had its address taken
  1425     0000                     _TMR0_OverflowCallbackRegister equ	0
  1426                           
  1427                           	psect	idataBANK0
  1428     0212                     __pidataBANK0:
  1429                           
  1430                           ;initializer for _divider
  1431     0212  34FF               	retlw	255
  1432     0213  34FF               	retlw	255
  1433                           
  1434                           	psect	stringtext1
  1435     011F                     __pstringtext1:
  1436     011F                     _SPI1_Client:
  1437     011F  34EF               	retlw	low _SPI1_Initialize
  1438     0120  3401               	retlw	high _SPI1_Initialize
  1439     0121  3400               	retlw	0
  1440     0122  3400               	retlw	0
  1441     0123  3438               	retlw	low _SPI1_Open
  1442     0124  3400               	retlw	high _SPI1_Open
  1443     0125  3400               	retlw	0
  1444     0126  3400               	retlw	0
  1445     0127  3400               	retlw	0
  1446     0128  3400               	retlw	0
  1447     0129  3400               	retlw	0
  1448     012A  3400               	retlw	0
  1449     012B  3400               	retlw	0
  1450     012C  3400               	retlw	0
  1451     012D  3400               	retlw	0
  1452     012E  3400               	retlw	0
  1453     012F  3400               	retlw	0
  1454     0130  3400               	retlw	0
  1455     0131  340A               	retlw	low _SPI1_ByteWrite
  1456     0132  3402               	retlw	high _SPI1_ByteWrite
  1457     0133  3400               	retlw	0
  1458     0134  3400               	retlw	0
  1459     0135  3400               	retlw	0
  1460     0136  3400               	retlw	0
  1461     0137  3400               	retlw	0
  1462     0138  3400               	retlw	0
  1463     0139  3400               	retlw	0
  1464     013A  3400               	retlw	0
  1465     013B                     __end_of_SPI1_Client:
  1466                           
  1467                           	psect	stringtext2
  1468     013B                     __pstringtext2:
  1469     013B                     _spi1_configuration:
  1470     013B  3440               	retlw	64
  1471     013C  3404               	retlw	4
  1472     013D  3410               	retlw	16
  1473     013E  3401               	retlw	1
  1474     013F  3400               	retlw	0
  1475     0140  3400               	retlw	0
  1476     0141  3404               	retlw	4
  1477     0142  3410               	retlw	16
  1478     0143  3401               	retlw	1
  1479     0144  3400               	retlw	0
  1480     0145  3440               	retlw	64
  1481     0146  3414               	retlw	20
  1482     0147  3410               	retlw	16
  1483     0148  3401               	retlw	1
  1484     0149  3400               	retlw	0
  1485     014A  3400               	retlw	0
  1486     014B  3414               	retlw	20
  1487     014C  3410               	retlw	16
  1488     014D  3401               	retlw	1
  1489     014E  3400               	retlw	0
  1490     014F  3464               	retlw	100
  1491     0150  3404               	retlw	4
  1492     0151  3410               	retlw	16
  1493     0152  3400               	retlw	0
  1494     0153  3400               	retlw	0
  1495     0154                     __end_of_spi1_configuration:
  1496                           
  1497                           	psect	stringtext3
  1498     0154                     __pstringtext3:
  1499     0154                     _Timer0:
  1500     0154  346A               	retlw	low _TMR0_Initialize
  1501     0155  3401               	retlw	high _TMR0_Initialize
  1502     0156  3400               	retlw	0
  1503     0157  3400               	retlw	0
  1504     0158  3400               	retlw	0
  1505     0159  3400               	retlw	0
  1506     015A  3400               	retlw	0
  1507     015B  3400               	retlw	0
  1508     015C  3400               	retlw	0
  1509     015D  3400               	retlw	0
  1510     015E  3400               	retlw	0
  1511     015F  3400               	retlw	0
  1512     0160  3400               	retlw	0
  1513     0161  3400               	retlw	0
  1514     0162  3400               	retlw	0
  1515     0163  3400               	retlw	0
  1516     0164  3400               	retlw	0
  1517     0165  3400               	retlw	0
  1518     0166  3400               	retlw	0
  1519     0167  3400               	retlw	0
  1520     0168  3400               	retlw	0
  1521     0169  3400               	retlw	0
  1522     016A                     __end_of_Timer0:
  1523                           
  1524                           	psect	nvBANK0
  1525     0020                     __pnvBANK0:
  1526     0020                     _TMR0_OverflowCallback:
  1527     0020                     	ds	2
  1528     0022                     _INT_InterruptHandler:
  1529     0022                     	ds	2
  1530     0018                     _LATAbits       set	24
  1531     0014                     _TRISC          set	20
  1532     0013                     _TRISB          set	19
  1533     0012                     _TRISA          set	18
  1534     001A                     _LATC           set	26
  1535     0019                     _LATB           set	25
  1536     0018                     _LATA           set	24
  1537     000B                     _INTCONbits     set	11
  1538     018C                     _SSP1BUF        set	396
  1539     0190                     _SSP1CON1bits   set	400
  1540     018D                     _SSP1ADD        set	397
  1541     0192                     _SSP1CON3       set	402
  1542     0190                     _SSP1CON1       set	400
  1543     018F                     _SSP1STAT       set	399
  1544     059E                     _T0CON0bits     set	1438
  1545     059E                     _T0CON0         set	1438
  1546     059F                     _T0CON1         set	1439
  1547     059C                     _TMR0L          set	1436
  1548     059D                     _TMR0H          set	1437
  1549     0716                     _PIE0bits       set	1814
  1550     070C                     _PIR0bits       set	1804
  1551     070D                     _PIR1bits       set	1805
  1552     0717                     _PIE1bits       set	1815
  1553     0892                     _OSCTUNE        set	2194
  1554     0893                     _OSCFRQ         set	2195
  1555     0891                     _OSCEN          set	2193
  1556     1EC5                     _SSP1CLKPPS     set	7877
  1557     1E90                     _INTPPS         set	7824
  1558     1EC7                     _SSP1SSPPS      set	7879
  1559     1EC6                     _SSP1DATPPS     set	7878
  1560     1F55                     _IOCCF          set	8021
  1561     1F54                     _IOCCN          set	8020
  1562     1F53                     _IOCCP          set	8019
  1563     1F4A                     _IOCBF          set	8010
  1564     1F49                     _IOCBN          set	8009
  1565     1F48                     _IOCBP          set	8008
  1566     1F3F                     _IOCAF          set	7999
  1567     1F3E                     _IOCAN          set	7998
  1568     1F3D                     _IOCAP          set	7997
  1569     1F1C                     _RB4PPS         set	7964
  1570     1F1F                     _RB7PPS         set	7967
  1571     1F52                     _INLVLC         set	8018
  1572     1F47                     _INLVLB         set	8007
  1573     1F3C                     _INLVLA         set	7996
  1574     1F51                     _SLRCONC        set	8017
  1575     1F46                     _SLRCONB        set	8006
  1576     1F3B                     _SLRCONA        set	7995
  1577     1F50                     _ODCONC         set	8016
  1578     1F45                     _ODCONB         set	8005
  1579     1F3A                     _ODCONA         set	7994
  1580     1F4F                     _WPUCbits       set	8015
  1581     1F4F                     _WPUC           set	8015
  1582     1F44                     _WPUB           set	8004
  1583     1F39                     _WPUA           set	7993
  1584     1F4E                     _ANSELC         set	8014
  1585     1F43                     _ANSELB         set	8003
  1586     1F38                     _ANSELA         set	7992
  1587                           
  1588                           	psect	cinit
  1589     0027                     start_initialization:	
  1590                           ; #config settings
  1591                           
  1592     0027                     __initialization:
  1593                           
  1594                           ; Initialize objects allocated to BANK0
  1595     0027  3182  2212  3180   	fcall	__pidataBANK0	;fetch initializer
  1596     002A  00A6               	movwf	__pdataBANK0& (0+127)
  1597     002B  3182  2213  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1598     002E  00A7               	movwf	(__pdataBANK0+1)& (0+127)
  1599                           
  1600                           ; Clear objects allocated to COMMON
  1601     002F  01FB               	clrf	__pbssCOMMON& (0+127)
  1602     0030  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  1603     0031  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
  1604                           
  1605                           ; Clear objects allocated to BANK0
  1606     0032  01A4               	clrf	__pbssBANK0& (0+127)
  1607     0033  01A5               	clrf	(__pbssBANK0+1)& (0+127)
  1608     0034                     end_of_initialization:	
  1609                           ;End of C runtime variable initialization code
  1610                           
  1611     0034                     __end_of__initialization:
  1612     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1613     0035  0140               	movlb	0
  1614     0036  3181  2901         	ljmp	_main	;jump to C main() function
  1615                           
  1616                           	psect	bssCOMMON
  1617     007B                     __pbssCOMMON:
  1618     007B                     _tmr0PeriodCount:
  1619     007B                     	ds	2
  1620     007D                     _led_state:
  1621     007D                     	ds	1
  1622                           
  1623                           	psect	bssBANK0
  1624     0024                     __pbssBANK0:
  1625     0024                     _timerOverflow:
  1626     0024                     	ds	1
  1627     0025                     _pushed:
  1628     0025                     	ds	1
  1629                           
  1630                           	psect	dataBANK0
  1631     0026                     __pdataBANK0:
  1632     0026                     _divider:
  1633     0026                     	ds	2
  1634                           
  1635                           	psect	cstackCOMMON
  1636     0070                     __pcstackCOMMON:
  1637     0070                     ?_SPI1_Initialize:
  1638     0070                     ?_SPI1_ByteWrite:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641     0070                     ?_INT_SetInterruptHandler:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644     0070                     ?_INT_DefaultInterruptHandler:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647     0070                     ?_INT_ISR:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650     0070                     ?_TMR0_ISR:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653     0070                     ?_INT_CallBack:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656     0070                     ?_TMR0_Initialize:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659     0070                     ?_TMR0_DefaultOverflowCallback:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662     0070                     ?_toggle_led:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665     0070                     ?_spi_send_data:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668     0070                     ?_INTERRUPT_Initialize:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671     0070                     ?_INTERRUPT_InterruptManager:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674     0070                     ?_CLOCK_Initialize:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677     0070                     ?_PIN_MANAGER_Initialize:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680     0070                     ?_SYSTEM_Initialize:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683     0070                     ?_main:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686     0070                     ?___wmul:	
  1687                           ; 2 bytes @ 0x0
  1688                           
  1689     0070                     SPI1_ByteWrite@byteData:	
  1690                           ; 2 bytes @ 0x0
  1691                           
  1692     0070                     INT_SetInterruptHandler@InterruptHandler:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695     0070                     ___wmul@multiplier:	
  1696                           ; 2 bytes @ 0x0
  1697                           
  1698     0070                     ??_SPI1_Initialize:	
  1699                           ; 2 bytes @ 0x0
  1700                           
  1701     0070                     ??_INT_DefaultInterruptHandler:	
  1702                           ; 1 bytes @ 0x0
  1703                           
  1704     0070                     ??_INT_ISR:	
  1705                           ; 1 bytes @ 0x0
  1706                           
  1707     0070                     ??_TMR0_ISR:	
  1708                           ; 1 bytes @ 0x0
  1709                           
  1710     0070                     ??_INT_CallBack:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713     0070                     ??_TMR0_Initialize:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716     0070                     ??_TMR0_DefaultOverflowCallback:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719     0070                     ??_toggle_led:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722     0070                     ??_INTERRUPT_InterruptManager:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725     0070                     ??_CLOCK_Initialize:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728     0070                     ??_PIN_MANAGER_Initialize:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731                           
  1732                           ; 1 bytes @ 0x0
  1733     0070                     	ds	1
  1734     0071                     ??_SPI1_ByteWrite:
  1735                           
  1736                           ; 1 bytes @ 0x1
  1737     0071                     	ds	1
  1738     0072                     ___wmul@multiplicand:
  1739     0072                     ??_INT_SetInterruptHandler:	
  1740                           ; 2 bytes @ 0x2
  1741                           
  1742     0072                     ??_INTERRUPT_Initialize:	
  1743                           ; 1 bytes @ 0x2
  1744                           
  1745     0072                     ??_SYSTEM_Initialize:	
  1746                           ; 1 bytes @ 0x2
  1747                           
  1748                           
  1749                           ; 1 bytes @ 0x2
  1750     0072                     	ds	2
  1751     0074                     ___wmul@product:
  1752     0074                     ??___wmul:	
  1753                           ; 2 bytes @ 0x4
  1754                           
  1755                           
  1756                           ; 1 bytes @ 0x4
  1757     0074                     	ds	2
  1758     0076                     ?_SPI1_Open:
  1759     0076                     SPI1_Open@spiConfigIndex:	
  1760                           ; 1 bytes @ 0x6
  1761                           
  1762                           
  1763                           ; 1 bytes @ 0x6
  1764     0076                     	ds	1
  1765     0077                     ??_SPI1_Open:
  1766                           
  1767                           ; 1 bytes @ 0x7
  1768     0077                     	ds	2
  1769     0079                     SPI1_Open@returnValue:
  1770                           
  1771                           ; 1 bytes @ 0x9
  1772     0079                     	ds	1
  1773     007A                     spi_send_data@data:
  1774     007A                     ??_spi_send_data:	
  1775                           ; 1 bytes @ 0xA
  1776                           
  1777                           
  1778                           ; 1 bytes @ 0xA
  1779     007A                     	ds	1
  1780     007B                     ??_main:
  1781                           
  1782                           	psect	maintext
  1783     0101                     __pmaintext:	
  1784                           ; 1 bytes @ 0xB
  1785 ;;
  1786 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1787 ;;
  1788 ;; *************** function _main *****************
  1789 ;; Defined at:
  1790 ;;		line 44 in file "main.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2  377[None  ] int 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : B3F/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1804 ;;      Params:         0       0       0       0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0       0
  1807 ;;      Totals:         0       0       0       0       0       0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels required when called: 7
  1810 ;; This function calls:
  1811 ;;		_SYSTEM_Initialize
  1812 ;;		_spi_send_data
  1813 ;;		_toggle_led
  1814 ;; This function is called by:
  1815 ;;		Startup code after reset
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819     0101                     _main:	
  1820                           ;psect for function _main
  1821                           
  1822     0101                     l1354:	
  1823                           ;incstack = 0
  1824                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1825                           
  1826                           
  1827                           ;main.c: 45:     SYSTEM_Initialize();
  1828     0101  3181  21B6  3181   	fcall	_SYSTEM_Initialize
  1829     0104                     l1356:
  1830                           
  1831                           ;main.c: 51:     (INTCONbits.GIE = 1);
  1832     0104  178B               	bsf	11,7	;volatile
  1833     0105                     l1358:
  1834                           
  1835                           ;main.c: 57:     (INTCONbits.PEIE = 1);
  1836     0105  170B               	bsf	11,6	;volatile
  1837     0106                     l1360:
  1838                           
  1839                           ;main.c: 64:         if (timerOverflow) {
  1840     0106  0140               	movlb	0	; select bank0
  1841     0107  0824               	movf	_timerOverflow,w
  1842     0108  1903               	btfsc	3,2
  1843     0109  290B               	goto	u461
  1844     010A  290C               	goto	u460
  1845     010B                     u461:
  1846     010B  2911               	goto	l1366
  1847     010C                     u460:
  1848     010C                     l1362:
  1849                           
  1850                           ;main.c: 65:             toggle_led();
  1851     010C  3181  21C6  3181   	fcall	_toggle_led
  1852     010F                     l1364:
  1853                           
  1854                           ;main.c: 66:             timerOverflow = 0;
  1855     010F  0140               	movlb	0	; select bank0
  1856     0110  01A4               	clrf	_timerOverflow
  1857     0111                     l1366:
  1858                           
  1859                           ;main.c: 68:         if (pushed) {
  1860     0111  0825               	movf	_pushed,w
  1861     0112  1903               	btfsc	3,2
  1862     0113  2915               	goto	u471
  1863     0114  2916               	goto	u470
  1864     0115                     u471:
  1865     0115  2906               	goto	l1360
  1866     0116                     u470:
  1867     0116                     l1368:
  1868                           
  1869                           ;main.c: 69:             spi_send_data(0x33);
  1870     0116  3033               	movlw	51
  1871     0117  3181  21A6  3181   	fcall	_spi_send_data
  1872     011A                     l1370:
  1873                           
  1874                           ;main.c: 70:             pushed = 0;
  1875     011A  0140               	movlb	0	; select bank0
  1876     011B  01A5               	clrf	_pushed
  1877     011C  2906               	goto	l1360
  1878     011D  3180  2825         	ljmp	start
  1879     011F                     __end_of_main:
  1880                           
  1881                           	psect	text1
  1882     01C6                     __ptext1:	
  1883 ;; *************** function _toggle_led *****************
  1884 ;; Defined at:
  1885 ;;		line 75 in file "main.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1899 ;;      Params:         0       0       0       0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0
  1902 ;;      Totals:         0       0       0       0       0       0       0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 4
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913     01C6                     _toggle_led:	
  1914                           ;psect for function _toggle_led
  1915                           
  1916     01C6                     l1332:	
  1917                           ;incstack = 0
  1918                           ; Regs used in _toggle_led: [wreg+status,2+status,0]
  1919                           
  1920                           
  1921                           ;main.c: 76:     led_state = ~led_state;
  1922     01C6  037D               	decf	_led_state,w
  1923     01C7  1D03               	btfss	3,2
  1924     01C8  29CA               	goto	u381
  1925     01C9  29CC               	goto	u380
  1926     01CA                     u381:
  1927     01CA  3001               	movlw	1
  1928     01CB  29CD               	goto	u390
  1929     01CC                     u380:
  1930     01CC  3000               	movlw	0
  1931     01CD                     u390:
  1932     01CD  00FD               	movwf	_led_state
  1933     01CE                     l1334:
  1934                           
  1935                           ;main.c: 77:     LATAbits.LATA2 = led_state;
  1936     01CE  0C7D               	rrf	_led_state,w
  1937     01CF  0140               	movlb	0	; select bank0
  1938     01D0  1C03               	skipc
  1939     01D1  1118               	bcf	24,2	;volatile
  1940     01D2  1803               	skipnc
  1941     01D3  1518               	bsf	24,2	;volatile
  1942     01D4                     l386:
  1943     01D4  0008               	return
  1944     01D5                     __end_of_toggle_led:
  1945                           
  1946                           	psect	text2
  1947     01A6                     __ptext2:	
  1948 ;; *************** function _spi_send_data *****************
  1949 ;; Defined at:
  1950 ;;		line 80 in file "main.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  data            1    wreg     unsigned char 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  data            1   10[COMMON] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1964 ;;      Params:         0       0       0       0       0       0       0       0
  1965 ;;      Locals:         1       0       0       0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0
  1967 ;;      Totals:         1       0       0       0       0       0       0       0
  1968 ;;Total ram usage:        1 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 6
  1971 ;; This function calls:
  1972 ;;		_SPI1_ByteWrite
  1973 ;;		_SPI1_Open
  1974 ;; This function is called by:
  1975 ;;		_main
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979     01A6                     _spi_send_data:	
  1980                           ;psect for function _spi_send_data
  1981                           
  1982                           
  1983                           ;incstack = 0
  1984                           ; Regs used in _spi_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1985                           ;spi_send_data@data stored from wreg
  1986     01A6  00FA               	movwf	spi_send_data@data
  1987     01A7                     l1336:
  1988                           
  1989                           ;main.c: 81:     if (SPI1_Open(0)) {
  1990     01A7  01F6               	clrf	SPI1_Open@spiConfigIndex
  1991     01A8  3180  2038  3181   	fcall	_SPI1_Open
  1992     01AB  3A00               	xorlw	0
  1993     01AC  1903               	skipnz
  1994     01AD  29AF               	goto	u401
  1995     01AE  29B0               	goto	u400
  1996     01AF                     u401:
  1997     01AF  29B5               	goto	l390
  1998     01B0                     u400:
  1999     01B0                     l1338:
  2000                           
  2001                           ;main.c: 82:         SPI1_ByteWrite(data);
  2002     01B0  087A               	movf	spi_send_data@data,w
  2003     01B1  00F0               	movwf	SPI1_ByteWrite@byteData
  2004     01B2  3182  220A  3181   	fcall	_SPI1_ByteWrite
  2005     01B5                     l390:
  2006     01B5  0008               	return
  2007     01B6                     __end_of_spi_send_data:
  2008                           
  2009                           	psect	text3
  2010     0038                     __ptext3:	
  2011 ;; *************** function _SPI1_Open *****************
  2012 ;; Defined at:
  2013 ;;		line 84 in file "mcc_generated_files/spi/src/mssp1.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  spiConfigInd    1    6[COMMON] unsigned char 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  returnValue     1    9[COMMON] _Bool 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      _Bool 
  2020 ;; Registers used:
  2021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2027 ;;      Params:         1       0       0       0       0       0       0       0
  2028 ;;      Locals:         1       0       0       0       0       0       0       0
  2029 ;;      Temps:          2       0       0       0       0       0       0       0
  2030 ;;      Totals:         4       0       0       0       0       0       0       0
  2031 ;;Total ram usage:        4 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; Hardware stack levels required when called: 5
  2034 ;; This function calls:
  2035 ;;		___wmul
  2036 ;; This function is called by:
  2037 ;;		_spi_send_data
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041     0038                     _SPI1_Open:	
  2042                           ;psect for function _SPI1_Open
  2043                           
  2044     0038                     l1216:	
  2045                           ;incstack = 0
  2046                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2047                           
  2048     0038                     l1218:
  2049                           
  2050                           ;mcc_generated_files/spi/src/mssp1.c: 87:     if (SSP1CON1bits.SSPEN == 0)
  2051     0038  0143               	movlb	3	; select bank3
  2052     0039  1A90               	btfsc	16,5	;volatile
  2053     003A  283C               	goto	u341
  2054     003B  283D               	goto	u340
  2055     003C                     u341:
  2056     003C  28A1               	goto	l1226
  2057     003D                     u340:
  2058     003D                     l1220:
  2059                           
  2060                           ;mcc_generated_files/spi/src/mssp1.c: 88:     {;mcc_generated_files/spi/src/mssp1.c: 89:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
  2061     003D  0876               	movf	SPI1_Open@spiConfigIndex,w
  2062     003E  00F7               	movwf	??_SPI1_Open
  2063     003F  01F8               	clrf	??_SPI1_Open+1
  2064     0040  0877               	movf	??_SPI1_Open,w
  2065     0041  00F0               	movwf	___wmul@multiplier
  2066     0042  0878               	movf	??_SPI1_Open+1,w
  2067     0043  00F1               	movwf	___wmul@multiplier+1
  2068     0044  3005               	movlw	5
  2069     0045  00F2               	movwf	___wmul@multiplicand
  2070     0046  3000               	movlw	0
  2071     0047  00F3               	movwf	___wmul@multiplicand+1
  2072     0048  3180  20E2  3180   	fcall	___wmul
  2073     004B  303B               	movlw	low _spi1_configuration
  2074     004C  0770               	addwf	?___wmul,w
  2075     004D  0084               	movwf	4
  2076     004E  3001               	movlw	high _spi1_configuration
  2077     004F  3D71               	addwfc	?___wmul+1,w
  2078     0050  3880               	iorlw	128
  2079     0051  0085               	movwf	5
  2080     0052  0800               	movf	0,w	;code access
  2081     0053  0143               	movlb	3	; select bank3
  2082     0054  008F               	movwf	15	;volatile
  2083                           
  2084                           ;mcc_generated_files/spi/src/mssp1.c: 90:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
  2085     0055  0876               	movf	SPI1_Open@spiConfigIndex,w
  2086     0056  00F7               	movwf	??_SPI1_Open
  2087     0057  01F8               	clrf	??_SPI1_Open+1
  2088     0058  0877               	movf	??_SPI1_Open,w
  2089     0059  00F0               	movwf	___wmul@multiplier
  2090     005A  0878               	movf	??_SPI1_Open+1,w
  2091     005B  00F1               	movwf	___wmul@multiplier+1
  2092     005C  3005               	movlw	5
  2093     005D  00F2               	movwf	___wmul@multiplicand
  2094     005E  3000               	movlw	0
  2095     005F  00F3               	movwf	___wmul@multiplicand+1
  2096     0060  3180  20E2  3180   	fcall	___wmul
  2097     0063  303C               	movlw	low (_spi1_configuration+1)
  2098     0064  0770               	addwf	?___wmul,w
  2099     0065  0084               	movwf	4
  2100     0066  3001               	movlw	high (_spi1_configuration+1)
  2101     0067  3D71               	addwfc	?___wmul+1,w
  2102     0068  3880               	iorlw	128
  2103     0069  0085               	movwf	5
  2104     006A  0800               	movf	0,w	;code access
  2105     006B  0143               	movlb	3	; select bank3
  2106     006C  0090               	movwf	16	;volatile
  2107                           
  2108                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
  2109     006D  0876               	movf	SPI1_Open@spiConfigIndex,w
  2110     006E  00F7               	movwf	??_SPI1_Open
  2111     006F  01F8               	clrf	??_SPI1_Open+1
  2112     0070  0877               	movf	??_SPI1_Open,w
  2113     0071  00F0               	movwf	___wmul@multiplier
  2114     0072  0878               	movf	??_SPI1_Open+1,w
  2115     0073  00F1               	movwf	___wmul@multiplier+1
  2116     0074  3005               	movlw	5
  2117     0075  00F2               	movwf	___wmul@multiplicand
  2118     0076  3000               	movlw	0
  2119     0077  00F3               	movwf	___wmul@multiplicand+1
  2120     0078  3180  20E2  3180   	fcall	___wmul
  2121     007B  303D               	movlw	low (_spi1_configuration+2)
  2122     007C  0770               	addwf	?___wmul,w
  2123     007D  0084               	movwf	4
  2124     007E  3001               	movlw	high (_spi1_configuration+2)
  2125     007F  3D71               	addwfc	?___wmul+1,w
  2126     0080  3880               	iorlw	128
  2127     0081  0085               	movwf	5
  2128     0082  0800               	movf	0,w	;code access
  2129     0083  0143               	movlb	3	; select bank3
  2130     0084  0092               	movwf	18	;volatile
  2131                           
  2132                           ;mcc_generated_files/spi/src/mssp1.c: 92:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
  2133     0085  0876               	movf	SPI1_Open@spiConfigIndex,w
  2134     0086  00F7               	movwf	??_SPI1_Open
  2135     0087  01F8               	clrf	??_SPI1_Open+1
  2136     0088  0877               	movf	??_SPI1_Open,w
  2137     0089  00F0               	movwf	___wmul@multiplier
  2138     008A  0878               	movf	??_SPI1_Open+1,w
  2139     008B  00F1               	movwf	___wmul@multiplier+1
  2140     008C  3005               	movlw	5
  2141     008D  00F2               	movwf	___wmul@multiplicand
  2142     008E  3000               	movlw	0
  2143     008F  00F3               	movwf	___wmul@multiplicand+1
  2144     0090  3180  20E2  3180   	fcall	___wmul
  2145     0093  303E               	movlw	low (_spi1_configuration+3)
  2146     0094  0770               	addwf	?___wmul,w
  2147     0095  0084               	movwf	4
  2148     0096  3001               	movlw	high (_spi1_configuration+3)
  2149     0097  3D71               	addwfc	?___wmul+1,w
  2150     0098  3880               	iorlw	128
  2151     0099  0085               	movwf	5
  2152     009A  0800               	movf	0,w	;code access
  2153     009B  0143               	movlb	3	; select bank3
  2154     009C  008D               	movwf	13	;volatile
  2155     009D                     l1222:
  2156                           
  2157                           ;mcc_generated_files/spi/src/mssp1.c: 94:         SSP1CON1bits.SSPEN = 1;
  2158     009D  1690               	bsf	16,5	;volatile
  2159     009E                     l1224:
  2160                           
  2161                           ;mcc_generated_files/spi/src/mssp1.c: 96:         returnValue = 1;
  2162     009E  3001               	movlw	1
  2163     009F  00F9               	movwf	SPI1_Open@returnValue
  2164                           
  2165                           ;mcc_generated_files/spi/src/mssp1.c: 97:     }
  2166     00A0  28A2               	goto	l1228
  2167     00A1                     l1226:
  2168                           
  2169                           ;mcc_generated_files/spi/src/mssp1.c: 99:     {;mcc_generated_files/spi/src/mssp1.c: 100
      +                          :         returnValue = 0;
  2170     00A1  01F9               	clrf	SPI1_Open@returnValue
  2171     00A2                     l1228:
  2172                           
  2173                           ;mcc_generated_files/spi/src/mssp1.c: 102:     return returnValue;
  2174     00A2  0879               	movf	SPI1_Open@returnValue,w
  2175     00A3                     l55:
  2176     00A3  0008               	return
  2177     00A4                     __end_of_SPI1_Open:
  2178                           
  2179                           	psect	text4
  2180     00E2                     __ptext4:	
  2181 ;; *************** function ___wmul *****************
  2182 ;; Defined at:
  2183 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  multiplier      2    0[COMMON] unsigned int 
  2186 ;;  multiplicand    2    2[COMMON] unsigned int 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  product         2    4[COMMON] unsigned int 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  2    0[COMMON] unsigned int 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2198 ;;      Params:         4       0       0       0       0       0       0       0
  2199 ;;      Locals:         2       0       0       0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0
  2201 ;;      Totals:         6       0       0       0       0       0       0       0
  2202 ;;Total ram usage:        6 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 4
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_SPI1_Open
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212     00E2                     ___wmul:	
  2213                           ;psect for function ___wmul
  2214                           
  2215     00E2                     l1198:	
  2216                           ;incstack = 0
  2217                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2218                           
  2219     00E2  01F4               	clrf	___wmul@product
  2220     00E3  01F5               	clrf	___wmul@product+1
  2221     00E4                     l1200:
  2222     00E4  1C70               	btfss	___wmul@multiplier,0
  2223     00E5  28E7               	goto	u301
  2224     00E6  28E8               	goto	u300
  2225     00E7                     u301:
  2226     00E7  28EC               	goto	l458
  2227     00E8                     u300:
  2228     00E8                     l1202:
  2229     00E8  0872               	movf	___wmul@multiplicand,w
  2230     00E9  07F4               	addwf	___wmul@product,f
  2231     00EA  0873               	movf	___wmul@multiplicand+1,w
  2232     00EB  3DF5               	addwfc	___wmul@product+1,f
  2233     00EC                     l458:
  2234     00EC  3001               	movlw	1
  2235     00ED                     u315:
  2236     00ED  35F2               	lslf	___wmul@multiplicand,f
  2237     00EE  0DF3               	rlf	___wmul@multiplicand+1,f
  2238     00EF  0B89               	decfsz	9,f
  2239     00F0  28ED               	goto	u315
  2240     00F1                     l1204:
  2241     00F1  3001               	movlw	1
  2242     00F2                     u325:
  2243     00F2  36F1               	lsrf	___wmul@multiplier+1,f
  2244     00F3  0CF0               	rrf	___wmul@multiplier,f
  2245     00F4  0B89               	decfsz	9,f
  2246     00F5  28F2               	goto	u325
  2247     00F6                     l1206:
  2248     00F6  0870               	movf	___wmul@multiplier,w
  2249     00F7  0471               	iorwf	___wmul@multiplier+1,w
  2250     00F8  1D03               	btfss	3,2
  2251     00F9  28FB               	goto	u331
  2252     00FA  28FC               	goto	u330
  2253     00FB                     u331:
  2254     00FB  28E4               	goto	l1200
  2255     00FC                     u330:
  2256     00FC                     l1208:
  2257     00FC  0875               	movf	___wmul@product+1,w
  2258     00FD  00F1               	movwf	?___wmul+1
  2259     00FE  0874               	movf	___wmul@product,w
  2260     00FF  00F0               	movwf	?___wmul
  2261     0100                     l460:
  2262     0100  0008               	return
  2263     0101                     __end_of___wmul:
  2264                           
  2265                           	psect	text5
  2266     020A                     __ptext5:	
  2267 ;; *************** function _SPI1_ByteWrite *****************
  2268 ;; Defined at:
  2269 ;;		line 174 in file "mcc_generated_files/spi/src/mssp1.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  byteData        1    0[COMMON] unsigned char 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2283 ;;      Params:         1       0       0       0       0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0
  2286 ;;      Totals:         1       0       0       0       0       0       0       0
  2287 ;;Total ram usage:        1 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 4
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_spi_send_data
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297     020A                     _SPI1_ByteWrite:	
  2298                           ;psect for function _SPI1_ByteWrite
  2299                           
  2300     020A                     l1232:	
  2301                           ;incstack = 0
  2302                           ; Regs used in _SPI1_ByteWrite: [wreg]
  2303                           
  2304                           
  2305                           ;mcc_generated_files/spi/src/mssp1.c: 174: void SPI1_ByteWrite(uint8_t byteData);mcc_gen
      +                          erated_files/spi/src/mssp1.c: 175: {;mcc_generated_files/spi/src/mssp1.c: 176:     SSP1B
      +                          UF = byteData;
  2306     020A  0870               	movf	SPI1_ByteWrite@byteData,w
  2307     020B  0143               	movlb	3	; select bank3
  2308     020C  008C               	movwf	12	;volatile
  2309     020D                     l94:
  2310     020D  0008               	return
  2311     020E                     __end_of_SPI1_ByteWrite:
  2312                           
  2313                           	psect	text6
  2314     01B6                     __ptext6:	
  2315 ;; *************** function _SYSTEM_Initialize *****************
  2316 ;; Defined at:
  2317 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0, pclath, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2331 ;;      Params:         0       0       0       0       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0       0       0       0
  2334 ;;      Totals:         0       0       0       0       0       0       0       0
  2335 ;;Total ram usage:        0 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 6
  2338 ;; This function calls:
  2339 ;;		_CLOCK_Initialize
  2340 ;;		_INTERRUPT_Initialize
  2341 ;;		_PIN_MANAGER_Initialize
  2342 ;;		_SPI1_Initialize
  2343 ;;		_TMR0_Initialize
  2344 ;; This function is called by:
  2345 ;;		_main
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349     01B6                     _SYSTEM_Initialize:	
  2350                           ;psect for function _SYSTEM_Initialize
  2351                           
  2352     01B6                     l1326:	
  2353                           ;incstack = 0
  2354                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2355                           
  2356                           
  2357                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  2358     01B6  3181  21FE  3181   	fcall	_CLOCK_Initialize
  2359                           
  2360                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  2361     01B9  3180  20A4  3181   	fcall	_PIN_MANAGER_Initialize
  2362     01BC                     l1328:
  2363                           
  2364                           ;mcc_generated_files/system/src/system.c: 44:     TMR0_Initialize();
  2365     01BC  3181  216A  3181   	fcall	_TMR0_Initialize
  2366     01BF                     l1330:
  2367                           
  2368                           ;mcc_generated_files/system/src/system.c: 45:     SPI1_Initialize();
  2369     01BF  3181  21EF  3181   	fcall	_SPI1_Initialize
  2370                           
  2371                           ;mcc_generated_files/system/src/system.c: 46:     INTERRUPT_Initialize();
  2372     01C2  3181  21D5  3181   	fcall	_INTERRUPT_Initialize
  2373     01C5                     l267:
  2374     01C5  0008               	return
  2375     01C6                     __end_of_SYSTEM_Initialize:
  2376                           
  2377                           	psect	text7
  2378     016A                     __ptext7:	
  2379 ;; *************** function _TMR0_Initialize *****************
  2380 ;; Defined at:
  2381 ;;		line 60 in file "mcc_generated_files/timer/src/tmr0.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;		None
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2395 ;;      Params:         0       0       0       0       0       0       0       0
  2396 ;;      Locals:         0       0       0       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0
  2398 ;;      Totals:         0       0       0       0       0       0       0       0
  2399 ;;Total ram usage:        0 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 4
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_SYSTEM_Initialize
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409     016A                     _TMR0_Initialize:	
  2410                           ;psect for function _TMR0_Initialize
  2411                           
  2412     016A                     l1288:	
  2413                           ;incstack = 0
  2414                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  2415                           
  2416                           
  2417                           ;mcc_generated_files/timer/src/tmr0.c: 61:     TMR0H = 0xFF;
  2418     016A  30FF               	movlw	255
  2419     016B  014B               	movlb	11	; select bank11
  2420     016C  009D               	movwf	29	;volatile
  2421     016D                     l1290:
  2422                           
  2423                           ;mcc_generated_files/timer/src/tmr0.c: 62:     TMR0L = 0x0;
  2424     016D  019C               	clrf	28	;volatile
  2425     016E                     l1292:
  2426                           
  2427                           ;mcc_generated_files/timer/src/tmr0.c: 64:     T0CON1 = (3 << 0x5)
  2428     016E  3070               	movlw	112
  2429     016F  009F               	movwf	31	;volatile
  2430     0170                     l1294:
  2431                           
  2432                           ;mcc_generated_files/timer/src/tmr0.c: 68:     tmr0PeriodCount = ((uint16_t) TMR0H << 8)
      +                           | TMR0L;
  2433     0170  081D               	movf	29,w	;volatile
  2434     0171  00FC               	movwf	_tmr0PeriodCount+1	;volatile
  2435     0172  081C               	movf	28,w	;volatile
  2436     0173  00FB               	movwf	_tmr0PeriodCount	;volatile
  2437     0174                     l1296:
  2438                           
  2439                           ;mcc_generated_files/timer/src/tmr0.c: 70:     TMR0_OverflowCallback = TMR0_DefaultOverf
      +                          lowCallback;
  2440     0174  3094               	movlw	low _TMR0_DefaultOverflowCallback
  2441     0175  0140               	movlb	0	; select bank0
  2442     0176  00A0               	movwf	_TMR0_OverflowCallback
  2443     0177  3001               	movlw	high _TMR0_DefaultOverflowCallback
  2444     0178  00A1               	movwf	_TMR0_OverflowCallback+1
  2445     0179                     l1298:
  2446                           
  2447                           ;mcc_generated_files/timer/src/tmr0.c: 72:     PIR0bits.TMR0IF = 0;
  2448     0179  014E               	movlb	14	; select bank14
  2449     017A  128C               	bcf	12,5	;volatile
  2450     017B                     l1300:
  2451                           
  2452                           ;mcc_generated_files/timer/src/tmr0.c: 73:     PIE0bits.TMR0IE = 1;
  2453     017B  1696               	bsf	22,5	;volatile
  2454     017C                     l1302:
  2455                           
  2456                           ;mcc_generated_files/timer/src/tmr0.c: 75:     T0CON0 = (0 << 0x0)
  2457     017C  3090               	movlw	144
  2458     017D  014B               	movlb	11	; select bank11
  2459     017E  009E               	movwf	30	;volatile
  2460     017F                     l316:
  2461     017F  0008               	return
  2462     0180                     __end_of_TMR0_Initialize:
  2463                           
  2464                           	psect	text8
  2465     01EF                     __ptext8:	
  2466 ;; *************** function _SPI1_Initialize *****************
  2467 ;; Defined at:
  2468 ;;		line 63 in file "mcc_generated_files/spi/src/mssp1.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		status,2
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2482 ;;      Params:         0       0       0       0       0       0       0       0
  2483 ;;      Locals:         0       0       0       0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0
  2485 ;;      Totals:         0       0       0       0       0       0       0       0
  2486 ;;Total ram usage:        0 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 4
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_SYSTEM_Initialize
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496     01EF                     _SPI1_Initialize:	
  2497                           ;psect for function _SPI1_Initialize
  2498                           
  2499     01EF                     l1212:	
  2500                           ;incstack = 0
  2501                           ; Regs used in _SPI1_Initialize: [status,2]
  2502                           
  2503                           
  2504                           ;mcc_generated_files/spi/src/mssp1.c: 66:     PIE1bits.SSP1IE = 0;
  2505     01EF  014E               	movlb	14	; select bank14
  2506     01F0  1097               	bcf	23,1	;volatile
  2507                           
  2508                           ;mcc_generated_files/spi/src/mssp1.c: 67:     PIR1bits.SSP1IF = 0;
  2509     01F1  108D               	bcf	13,1	;volatile
  2510     01F2                     l1214:
  2511                           
  2512                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1STAT = 0x00;
  2513     01F2  0143               	movlb	3	; select bank3
  2514     01F3  018F               	clrf	15	;volatile
  2515                           
  2516                           ;mcc_generated_files/spi/src/mssp1.c: 70:     SSP1CON1 = 0x00;
  2517     01F4  0190               	clrf	16	;volatile
  2518                           
  2519                           ;mcc_generated_files/spi/src/mssp1.c: 71:     SSP1CON3 = 0x00;
  2520     01F5  0192               	clrf	18	;volatile
  2521                           
  2522                           ;mcc_generated_files/spi/src/mssp1.c: 72:     SSP1ADD = 0x00;
  2523     01F6  018D               	clrf	13	;volatile
  2524     01F7                     l47:
  2525     01F7  0008               	return
  2526     01F8                     __end_of_SPI1_Initialize:
  2527                           
  2528                           	psect	text9
  2529     00A4                     __ptext9:	
  2530 ;; *************** function _PIN_MANAGER_Initialize *****************
  2531 ;; Defined at:
  2532 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		status,2
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2546 ;;      Params:         0       0       0       0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0       0       0       0
  2549 ;;      Totals:         0       0       0       0       0       0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; Hardware stack levels required when called: 4
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_SYSTEM_Initialize
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560     00A4                     _PIN_MANAGER_Initialize:	
  2561                           ;psect for function _PIN_MANAGER_Initialize
  2562                           
  2563     00A4                     l1248:	
  2564                           ;incstack = 0
  2565                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2566                           
  2567                           
  2568                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  2569     00A4  0140               	movlb	0	; select bank0
  2570     00A5  0198               	clrf	24	;volatile
  2571                           
  2572                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  2573     00A6  0199               	clrf	25	;volatile
  2574                           
  2575                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  2576     00A7  019A               	clrf	26	;volatile
  2577     00A8                     l1250:
  2578                           
  2579                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3B;
  2580     00A8  303B               	movlw	59
  2581     00A9  0092               	movwf	18	;volatile
  2582     00AA                     l1252:
  2583                           
  2584                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x70;
  2585     00AA  3070               	movlw	112
  2586     00AB  0093               	movwf	19	;volatile
  2587     00AC                     l1254:
  2588                           
  2589                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xFF;
  2590     00AC  30FF               	movlw	255
  2591     00AD  0094               	movwf	20	;volatile
  2592     00AE                     l1256:
  2593                           
  2594                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x33;
  2595     00AE  3033               	movlw	51
  2596     00AF  017E               	movlb	62	; select bank62
  2597     00B0  00B8               	movwf	56	;volatile
  2598     00B1                     l1258:
  2599                           
  2600                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x20;
  2601     00B1  3020               	movlw	32
  2602     00B2  00C3               	movwf	67	;volatile
  2603     00B3                     l1260:
  2604                           
  2605                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xBB;
  2606     00B3  30BB               	movlw	187
  2607     00B4  00CE               	movwf	78	;volatile
  2608                           
  2609                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
  2610     00B5  01B9               	clrf	57	;volatile
  2611                           
  2612                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
  2613     00B6  01C4               	clrf	68	;volatile
  2614                           
  2615                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
  2616     00B7  01CF               	clrf	79	;volatile
  2617     00B8                     l1262:
  2618                           
  2619                           ;mcc_generated_files/system/src/pins.c: 67:     WPUCbits.WPUC2=1;
  2620     00B8  154F               	bsf	79,2	;volatile
  2621                           
  2622                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  2623     00B9  01BA               	clrf	58	;volatile
  2624                           
  2625                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  2626     00BA  01C5               	clrf	69	;volatile
  2627                           
  2628                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  2629     00BB  01D0               	clrf	80	;volatile
  2630     00BC                     l1264:
  2631                           
  2632                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x37;
  2633     00BC  3037               	movlw	55
  2634     00BD  00BB               	movwf	59	;volatile
  2635     00BE                     l1266:
  2636                           
  2637                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  2638     00BE  30F0               	movlw	240
  2639     00BF  00C6               	movwf	70	;volatile
  2640     00C0                     l1268:
  2641                           
  2642                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  2643     00C0  30FF               	movlw	255
  2644     00C1  00D1               	movwf	81	;volatile
  2645     00C2                     l1270:
  2646                           
  2647                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  2648     00C2  303F               	movlw	63
  2649     00C3  00BC               	movwf	60	;volatile
  2650     00C4                     l1272:
  2651                           
  2652                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  2653     00C4  30F0               	movlw	240
  2654     00C5  00C7               	movwf	71	;volatile
  2655     00C6                     l1274:
  2656                           
  2657                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  2658     00C6  30FF               	movlw	255
  2659     00C7  00D2               	movwf	82	;volatile
  2660     00C8                     l1276:
  2661                           
  2662                           ;mcc_generated_files/system/src/pins.c: 92:     SSP1DATPPS = 0xE;
  2663     00C8  300E               	movlw	14
  2664     00C9  017D               	movlb	61	; select bank61
  2665     00CA  00C6               	movwf	70	;volatile
  2666     00CB                     l1278:
  2667                           
  2668                           ;mcc_generated_files/system/src/pins.c: 93:     SSP1SSPPS = 0x16;
  2669     00CB  3016               	movlw	22
  2670     00CC  00C7               	movwf	71	;volatile
  2671     00CD                     l1280:
  2672                           
  2673                           ;mcc_generated_files/system/src/pins.c: 94:     INTPPS = 0x12;
  2674     00CD  3012               	movlw	18
  2675     00CE  0090               	movwf	16	;volatile
  2676     00CF                     l1282:
  2677                           
  2678                           ;mcc_generated_files/system/src/pins.c: 95:     RB7PPS = 0x08;
  2679     00CF  3008               	movlw	8
  2680     00D0  017E               	movlb	62	; select bank62
  2681     00D1  009F               	movwf	31	;volatile
  2682     00D2                     l1284:
  2683                           
  2684                           ;mcc_generated_files/system/src/pins.c: 96:     SSP1CLKPPS = 0xC;
  2685     00D2  300C               	movlw	12
  2686     00D3  017D               	movlb	61	; select bank61
  2687     00D4  00C5               	movwf	69	;volatile
  2688     00D5                     l1286:
  2689                           
  2690                           ;mcc_generated_files/system/src/pins.c: 97:     RB4PPS = 0x07;
  2691     00D5  3007               	movlw	7
  2692     00D6  017E               	movlb	62	; select bank62
  2693     00D7  009C               	movwf	28	;volatile
  2694                           
  2695                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
  2696     00D8  01BD               	clrf	61	;volatile
  2697                           
  2698                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
  2699     00D9  01BE               	clrf	62	;volatile
  2700                           
  2701                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
  2702     00DA  01BF               	clrf	63	;volatile
  2703                           
  2704                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
  2705     00DB  01C8               	clrf	72	;volatile
  2706                           
  2707                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
  2708     00DC  01C9               	clrf	73	;volatile
  2709                           
  2710                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
  2711     00DD  01CA               	clrf	74	;volatile
  2712                           
  2713                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
  2714     00DE  01D3               	clrf	83	;volatile
  2715                           
  2716                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
  2717     00DF  01D4               	clrf	84	;volatile
  2718                           
  2719                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
  2720     00E0  01D5               	clrf	85	;volatile
  2721     00E1                     l245:
  2722     00E1  0008               	return
  2723     00E2                     __end_of_PIN_MANAGER_Initialize:
  2724                           
  2725                           	psect	text10
  2726     01D5                     __ptext10:	
  2727 ;; *************** function _INTERRUPT_Initialize *****************
  2728 ;; Defined at:
  2729 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, pclath, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2743 ;;      Params:         0       0       0       0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0
  2746 ;;      Totals:         0       0       0       0       0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 5
  2750 ;; This function calls:
  2751 ;;		_INT_SetInterruptHandler
  2752 ;; This function is called by:
  2753 ;;		_SYSTEM_Initialize
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757     01D5                     _INTERRUPT_Initialize:	
  2758                           ;psect for function _INTERRUPT_Initialize
  2759                           
  2760     01D5                     l1234:	
  2761                           ;incstack = 0
  2762                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2763                           
  2764                           
  2765                           ;mcc_generated_files/system/src/interrupt.c: 43:     (PIR0bits.INTF = 0);
  2766     01D5  014E               	movlb	14	; select bank14
  2767     01D6  100C               	bcf	12,0	;volatile
  2768                           
  2769                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTEDG = 0);
  2770     01D7  100B               	bcf	11,0	;volatile
  2771     01D8                     l1236:
  2772                           
  2773                           ;mcc_generated_files/system/src/interrupt.c: 46:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  2774     01D8  300E               	movlw	low _INT_DefaultInterruptHandler
  2775     01D9  00F0               	movwf	INT_SetInterruptHandler@InterruptHandler
  2776     01DA  3002               	movlw	high _INT_DefaultInterruptHandler
  2777     01DB  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2778     01DC  3181  21F8  3181   	fcall	_INT_SetInterruptHandler
  2779     01DF                     l1238:
  2780                           
  2781                           ;mcc_generated_files/system/src/interrupt.c: 47:     (PIE0bits.INTE = 1);
  2782     01DF  014E               	movlb	14	; select bank14
  2783     01E0  1416               	bsf	22,0	;volatile
  2784     01E1                     l135:
  2785     01E1  0008               	return
  2786     01E2                     __end_of_INTERRUPT_Initialize:
  2787                           
  2788                           	psect	text11
  2789     01F8                     __ptext11:	
  2790 ;; *************** function _INT_SetInterruptHandler *****************
  2791 ;; Defined at:
  2792 ;;		line 89 in file "mcc_generated_files/system/src/interrupt.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2795 ;;		 -> INT_DefaultInterruptHandler(1), 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2807 ;;      Params:         2       0       0       0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0
  2810 ;;      Totals:         2       0       0       0       0       0       0       0
  2811 ;;Total ram usage:        2 bytes
  2812 ;; Hardware stack levels used: 1
  2813 ;; Hardware stack levels required when called: 4
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_INTERRUPT_Initialize
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821     01F8                     _INT_SetInterruptHandler:	
  2822                           ;psect for function _INT_SetInterruptHandler
  2823                           
  2824     01F8                     l1194:	
  2825                           ;incstack = 0
  2826                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  2827                           
  2828                           
  2829                           ;mcc_generated_files/system/src/interrupt.c: 90:     INT_InterruptHandler = InterruptHan
      +                          dler;
  2830     01F8  0871               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  2831     01F9  0140               	movlb	0	; select bank0
  2832     01FA  00A3               	movwf	_INT_InterruptHandler+1
  2833     01FB  0870               	movf	INT_SetInterruptHandler@InterruptHandler,w
  2834     01FC  00A2               	movwf	_INT_InterruptHandler
  2835     01FD                     l156:
  2836     01FD  0008               	return
  2837     01FE                     __end_of_INT_SetInterruptHandler:
  2838                           
  2839                           	psect	text12
  2840     01FE                     __ptext12:	
  2841 ;; *************** function _CLOCK_Initialize *****************
  2842 ;; Defined at:
  2843 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		status,2
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2857 ;;      Params:         0       0       0       0       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0
  2860 ;;      Totals:         0       0       0       0       0       0       0       0
  2861 ;;Total ram usage:        0 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 4
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_SYSTEM_Initialize
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871     01FE                     _CLOCK_Initialize:	
  2872                           ;psect for function _CLOCK_Initialize
  2873                           
  2874     01FE                     l1244:	
  2875                           ;incstack = 0
  2876                           ; Regs used in _CLOCK_Initialize: [status,2]
  2877                           
  2878                           
  2879                           ;mcc_generated_files/system/src/clock.c: 41:     OSCEN = (0 << 0x6)
  2880     01FE  0151               	movlb	17	; select bank17
  2881     01FF  0191               	clrf	17	;volatile
  2882     0200                     l1246:
  2883                           
  2884                           ;mcc_generated_files/system/src/clock.c: 45:     OSCFRQ = (5 << 0x0);
  2885     0200  3005               	movlw	5
  2886     0201  0093               	movwf	19	;volatile
  2887                           
  2888                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  2889     0202  0192               	clrf	18	;volatile
  2890     0203                     l168:
  2891     0203  0008               	return
  2892     0204                     __end_of_CLOCK_Initialize:
  2893                           
  2894                           	psect	intentry
  2895     0004                     __pintentry:	
  2896 ;; *************** function _INTERRUPT_InterruptManager *****************
  2897 ;; Defined at:
  2898 ;;		line 58 in file "mcc_generated_files/system/src/interrupt.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, pclath, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2912 ;;      Params:         0       0       0       0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0
  2915 ;;      Totals:         0       0       0       0       0       0       0       0
  2916 ;;Total ram usage:        0 bytes
  2917 ;; Hardware stack levels used: 1
  2918 ;; Hardware stack levels required when called: 3
  2919 ;; This function calls:
  2920 ;;		_INT_ISR
  2921 ;;		_TMR0_ISR
  2922 ;; This function is called by:
  2923 ;;		Interrupt level 1
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927     0004                     _INTERRUPT_InterruptManager:
  2928                           
  2929                           ;incstack = 0
  2930     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2931                           
  2932                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2933     0005  3180               	pagesel	$
  2934     0006                     i1l1340:
  2935                           
  2936                           ;mcc_generated_files/system/src/interrupt.c: 60:     if (PIE0bits.INTE == 1 && PIR0bits.
      +                          INTF == 1) {
  2937     0006  014E               	movlb	14	; select bank14
  2938     0007  1C16               	btfss	22,0	;volatile
  2939     0008  280A               	goto	u41_21
  2940     0009  280B               	goto	u41_20
  2941     000A                     u41_21:
  2942     000A  2813               	goto	i1l140
  2943     000B                     u41_20:
  2944     000B                     i1l1342:
  2945     000B  1C0C               	btfss	12,0	;volatile
  2946     000C  280E               	goto	u42_21
  2947     000D  280F               	goto	u42_20
  2948     000E                     u42_21:
  2949     000E  2813               	goto	i1l140
  2950     000F                     u42_20:
  2951     000F                     i1l1344:
  2952                           
  2953                           ;mcc_generated_files/system/src/interrupt.c: 61:         INT_ISR();
  2954     000F  3182  2204  3180   	fcall	_INT_ISR
  2955                           
  2956                           ;mcc_generated_files/system/src/interrupt.c: 62:     } else if (INTCONbits.PEIE == 1) {
  2957     0012  2823               	goto	i1l146
  2958     0013                     i1l140:
  2959     0013  1F0B               	btfss	11,6	;volatile
  2960     0014  2816               	goto	u43_21
  2961     0015  2817               	goto	u43_20
  2962     0016                     u43_21:
  2963     0016  2823               	goto	i1l146
  2964     0017                     u43_20:
  2965     0017                     i1l1346:
  2966                           
  2967                           ;mcc_generated_files/system/src/interrupt.c: 63:         if (PIE0bits.TMR0IE == 1 && PIR
      +                          0bits.TMR0IF == 1) {
  2968     0017  1E96               	btfss	22,5	;volatile
  2969     0018  281A               	goto	u44_21
  2970     0019  281B               	goto	u44_20
  2971     001A                     u44_21:
  2972     001A  2823               	goto	i1l145
  2973     001B                     u44_20:
  2974     001B                     i1l1348:
  2975     001B  1E8C               	btfss	12,5	;volatile
  2976     001C  281E               	goto	u45_21
  2977     001D  281F               	goto	u45_20
  2978     001E                     u45_21:
  2979     001E  2823               	goto	i1l145
  2980     001F                     u45_20:
  2981     001F                     i1l1350:
  2982                           
  2983                           ;mcc_generated_files/system/src/interrupt.c: 64:             TMR0_ISR();
  2984     001F  3181  2180  3180   	fcall	_TMR0_ISR
  2985                           
  2986                           ;mcc_generated_files/system/src/interrupt.c: 65:         }
  2987     0022  2823               	goto	i1l146
  2988     0023                     i1l145:	
  2989                           ;mcc_generated_files/system/src/interrupt.c: 72:     }
  2990                           
  2991     0023                     i1l146:
  2992     0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2993     0024  0009               	retfie
  2994     0025                     __end_of_INTERRUPT_InterruptManager:
  2995                           
  2996                           	psect	text14
  2997     0180                     __ptext14:	
  2998 ;; *************** function _TMR0_ISR *****************
  2999 ;; Defined at:
  3000 ;;		line 132 in file "mcc_generated_files/timer/src/tmr0.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0, pclath, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3014 ;;      Params:         0       0       0       0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0
  3017 ;;      Totals:         0       0       0       0       0       0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 1
  3021 ;; This function calls:
  3022 ;;		NULL
  3023 ;;		_TMR0_DefaultOverflowCallback
  3024 ;; This function is called by:
  3025 ;;		_INTERRUPT_InterruptManager
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029     0180                     _TMR0_ISR:	
  3030                           ;psect for function _TMR0_ISR
  3031                           
  3032     0180                     i1l1316:	
  3033                           ;incstack = 0
  3034                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3035                           
  3036                           
  3037                           ;mcc_generated_files/timer/src/tmr0.c: 133:     TMR0H = (uint8_t) (tmr0PeriodCount >> 8)
      +                          ;
  3038     0180  087C               	movf	_tmr0PeriodCount+1,w	;volatile
  3039     0181  014B               	movlb	11	; select bank11
  3040     0182  009D               	movwf	29	;volatile
  3041     0183                     i1l1318:
  3042                           
  3043                           ;mcc_generated_files/timer/src/tmr0.c: 134:     TMR0L = (uint8_t) (tmr0PeriodCount);
  3044     0183  087B               	movf	_tmr0PeriodCount,w	;volatile
  3045     0184  009C               	movwf	28	;volatile
  3046     0185                     i1l1320:
  3047                           
  3048                           ;mcc_generated_files/timer/src/tmr0.c: 136:     if (((void*)0) != TMR0_OverflowCallback)
      +                           {
  3049     0185  0140               	movlb	0	; select bank0
  3050     0186  0820               	movf	_TMR0_OverflowCallback,w
  3051     0187  0421               	iorwf	_TMR0_OverflowCallback+1,w
  3052     0188  1903               	btfsc	3,2
  3053     0189  298B               	goto	u37_21
  3054     018A  298C               	goto	u37_20
  3055     018B                     u37_21:
  3056     018B  2991               	goto	i1l1324
  3057     018C                     u37_20:
  3058     018C                     i1l1322:
  3059                           
  3060                           ;mcc_generated_files/timer/src/tmr0.c: 137:         TMR0_OverflowCallback();
  3061     018C  0821               	movf	_TMR0_OverflowCallback+1,w
  3062     018D  008A               	movwf	10
  3063     018E  0820               	movf	_TMR0_OverflowCallback,w
  3064     018F  000A               	callw
  3065     0190  3181               	pagesel	$
  3066     0191                     i1l1324:
  3067                           
  3068                           ;mcc_generated_files/timer/src/tmr0.c: 139:     PIR0bits.TMR0IF = 0;
  3069     0191  014E               	movlb	14	; select bank14
  3070     0192  128C               	bcf	12,5	;volatile
  3071     0193                     i1l344:
  3072     0193  0008               	return
  3073     0194                     __end_of_TMR0_ISR:
  3074                           
  3075                           	psect	text15
  3076     0194                     __ptext15:	
  3077 ;; *************** function _TMR0_DefaultOverflowCallback *****************
  3078 ;; Defined at:
  3079 ;;		line 146 in file "mcc_generated_files/timer/src/tmr0.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3093 ;;      Params:         0       0       0       0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_TMR0_Initialize
  3103 ;;		_TMR0_ISR
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107     0194                     _TMR0_DefaultOverflowCallback:	
  3108                           ;psect for function _TMR0_DefaultOverflowCallback
  3109                           
  3110     0194                     i1l1304:	
  3111                           ;incstack = 0
  3112                           ; Regs used in _TMR0_DefaultOverflowCallback: [wreg+status,2+status,0]
  3113                           
  3114                           
  3115                           ;mcc_generated_files/timer/src/tmr0.c: 148:     divider--;
  3116     0194  3001               	movlw	1
  3117     0195  0140               	movlb	0	; select bank0
  3118     0196  02A6               	subwf	_divider,f
  3119     0197  3000               	movlw	0
  3120     0198  3BA7               	subwfb	_divider+1,f
  3121     0199                     i1l1306:
  3122                           
  3123                           ;mcc_generated_files/timer/src/tmr0.c: 149:     if (divider == 0)
  3124     0199  0826               	movf	_divider,w
  3125     019A  0427               	iorwf	_divider+1,w
  3126     019B  1D03               	btfss	3,2
  3127     019C  299E               	goto	u36_21
  3128     019D  299F               	goto	u36_20
  3129     019E                     u36_21:
  3130     019E  29A5               	goto	i1l351
  3131     019F                     u36_20:
  3132     019F                     i1l1308:
  3133                           
  3134                           ;mcc_generated_files/timer/src/tmr0.c: 150:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          151:         timerOverflow = 1;
  3135     019F  3001               	movlw	1
  3136     01A0  00A4               	movwf	_timerOverflow
  3137     01A1                     i1l1310:
  3138                           
  3139                           ;mcc_generated_files/timer/src/tmr0.c: 152:         divider = 0xFFFF;
  3140     01A1  30FF               	movlw	255
  3141     01A2  00A6               	movwf	_divider
  3142     01A3  30FF               	movlw	255
  3143     01A4  00A7               	movwf	_divider+1
  3144     01A5                     i1l351:
  3145     01A5  0008               	return
  3146     01A6                     __end_of_TMR0_DefaultOverflowCallback:
  3147                           
  3148                           	psect	text16
  3149     0204                     __ptext16:	
  3150 ;; *************** function _INT_ISR *****************
  3151 ;; Defined at:
  3152 ;;		line 75 in file "mcc_generated_files/system/src/interrupt.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0, pclath, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3166 ;;      Params:         0       0       0       0       0       0       0       0
  3167 ;;      Locals:         0       0       0       0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0
  3169 ;;      Totals:         0       0       0       0       0       0       0       0
  3170 ;;Total ram usage:        0 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; Hardware stack levels required when called: 2
  3173 ;; This function calls:
  3174 ;;		_INT_CallBack
  3175 ;; This function is called by:
  3176 ;;		_INTERRUPT_InterruptManager
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180     0204                     _INT_ISR:	
  3181                           ;psect for function _INT_ISR
  3182                           
  3183     0204                     i1l1312:	
  3184                           ;incstack = 0
  3185                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  3186                           
  3187                           
  3188                           ;mcc_generated_files/system/src/interrupt.c: 76:     (PIR0bits.INTF = 0);
  3189     0204  014E               	movlb	14	; select bank14
  3190     0205  100C               	bcf	12,0	;volatile
  3191     0206                     i1l1314:
  3192                           
  3193                           ;mcc_generated_files/system/src/interrupt.c: 79:     INT_CallBack();
  3194     0206  3181  21E2  3182   	fcall	_INT_CallBack
  3195     0209                     i1l149:
  3196     0209  0008               	return
  3197     020A                     __end_of_INT_ISR:
  3198                           
  3199                           	psect	text17
  3200     01E2                     __ptext17:	
  3201 ;; *************** function _INT_CallBack *****************
  3202 ;; Defined at:
  3203 ;;		line 82 in file "mcc_generated_files/system/src/interrupt.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0, pclath, cstack
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3217 ;;      Params:         0       0       0       0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0
  3220 ;;      Totals:         0       0       0       0       0       0       0       0
  3221 ;;Total ram usage:        0 bytes
  3222 ;; Hardware stack levels used: 1
  3223 ;; Hardware stack levels required when called: 1
  3224 ;; This function calls:
  3225 ;;		NULL
  3226 ;;		_INT_DefaultInterruptHandler
  3227 ;; This function is called by:
  3228 ;;		_INT_ISR
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232     01E2                     _INT_CallBack:	
  3233                           ;psect for function _INT_CallBack
  3234                           
  3235     01E2                     i1l1240:	
  3236                           ;incstack = 0
  3237                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3238                           
  3239                           
  3240                           ;mcc_generated_files/system/src/interrupt.c: 84:     if (INT_InterruptHandler) {
  3241     01E2  0140               	movlb	0	; select bank0
  3242     01E3  0822               	movf	_INT_InterruptHandler,w
  3243     01E4  0423               	iorwf	_INT_InterruptHandler+1,w
  3244     01E5  1903               	btfsc	3,2
  3245     01E6  29E8               	goto	u35_21
  3246     01E7  29E9               	goto	u35_20
  3247     01E8                     u35_21:
  3248     01E8  29EE               	goto	i1l153
  3249     01E9                     u35_20:
  3250     01E9                     i1l1242:
  3251                           
  3252                           ;mcc_generated_files/system/src/interrupt.c: 85:         INT_InterruptHandler();
  3253     01E9  0823               	movf	_INT_InterruptHandler+1,w
  3254     01EA  008A               	movwf	10
  3255     01EB  0822               	movf	_INT_InterruptHandler,w
  3256     01EC  000A               	callw
  3257     01ED  3181               	pagesel	$
  3258     01EE                     i1l153:
  3259     01EE  0008               	return
  3260     01EF                     __end_of_INT_CallBack:
  3261                           
  3262                           	psect	text18
  3263     020E                     __ptext18:	
  3264 ;; *************** function _INT_DefaultInterruptHandler *****************
  3265 ;; Defined at:
  3266 ;;		line 93 in file "mcc_generated_files/system/src/interrupt.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		None
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3280 ;;      Params:         0       0       0       0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_INTERRUPT_Initialize
  3290 ;;		_INT_CallBack
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294     020E                     _INT_DefaultInterruptHandler:	
  3295                           ;psect for function _INT_DefaultInterruptHandler
  3296                           
  3297     020E                     i1l1196:	
  3298                           ;incstack = 0
  3299                           ; Regs used in _INT_DefaultInterruptHandler: []
  3300                           
  3301                           
  3302                           ;mcc_generated_files/system/src/interrupt.c: 96:     pushed = 1;
  3303     020E  3001               	movlw	1
  3304     020F  0140               	movlb	0	; select bank0
  3305     0210  00A5               	movwf	_pushed
  3306     0211                     i1l159:
  3307     0211  0008               	return
  3308     0212                     __end_of_INT_DefaultInterruptHandler:
  3309     0001                     ___latbits      equ	1
  3310     007E                     btemp           set	126	;btemp
  3311     007E                     int$flags       set	126
  3312     007E                     wtemp0          set	126
  3313                           
  3314                           	psect	config
  3315                           
  3316                           ;Config register CONFIG1 @ 0x8007
  3317                           ;	External Oscillator Mode Selection bits
  3318                           ;	FEXTOSC = ECH, EC (external clock) 16 MHz and above
  3319                           ;	Power-up Default Value for COSC bits
  3320                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  3321                           ;	Clock Out Enable bit
  3322                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  3323                           ;	VDD Range Analog Calibration Selection bit
  3324                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  3325     8007                     	org	32775
  3326     8007  3FCF               	dw	16335
  3327                           
  3328                           ;Config register CONFIG2 @ 0x8008
  3329                           ;	Master Clear Enable bit
  3330                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  3331                           ;	Power-up Timer Selection bits
  3332                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3333                           ;	WDT Operating Mode bits
  3334                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  3335                           ;	Brown-out Reset Enable bits
  3336                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  3337                           ;	Brown-out Reset Voltage Selection bit
  3338                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  3339                           ;	PPSLOCKED One-Way Set Enable bit
  3340                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  3341                           ;	Stack Overflow/Underflow Reset Enable bit
  3342                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  3343     8008                     	org	32776
  3344     8008  3FE7               	dw	16359
  3345                           
  3346                           ;Config register CONFIG4 @ 0x800A
  3347                           ;	Boot Block Size Selection bits
  3348                           ;	BBSIZE = BB512, 512 words boot block size
  3349                           ;	Boot Block Enable bit
  3350                           ;	BBEN = OFF, Boot Block is disabled
  3351                           ;	SAF Enable bit
  3352                           ;	SAFEN = OFF, SAF is disabled
  3353                           ;	Application Block Write Protection bit
  3354                           ;	WRTAPP = OFF, Application Block is not write-protected
  3355                           ;	Boot Block Write Protection bit
  3356                           ;	WRTB = OFF, Boot Block is not write-protected
  3357                           ;	Configuration Registers Write Protection bit
  3358                           ;	WRTC = OFF, Configuration Registers are not write-protected
  3359                           ;	Storage Area Flash (SAF) Write Protection bit
  3360                           ;	WRTSAF = OFF, SAF is not write-protected
  3361                           ;	Low Voltage Programming Enable bit
  3362                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  3363     800A                     	org	32778
  3364     800A  3FFF               	dw	16383
  3365                           
  3366                           ;Config register CONFIG5 @ 0x800B
  3367                           ;	User Program Flash Memory Code Protection bit
  3368                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  3369     800B                     	org	32779
  3370     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    75
    Data        2
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      0       8
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    NULL$0	PTR FTN()void  size(2) Largest target is 0

    S38$4$0	PTR void  size(2) Largest target is 0

    S38$5$0	PTR void  size(2) Largest target is 0

    S38$6$0	PTR void  size(2) Largest target is 0

    S38SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S38SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S38SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S38SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S38SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S38SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S38SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S38SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S38SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S38SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S38SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S38SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S38SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S38SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S516$9$0	PTR FTN()void  size(2) Largest target is 0

    S516TIMER_INTERFACE$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    S516TIMER_INTERFACE$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    S516TIMER_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    S516TIMER_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    S516TIMER_INTERFACE$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    S516TIMER_INTERFACE$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    S516TIMER_INTERFACE$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    S516TIMER_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    S516TIMER_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    S516TIMER_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S516TIMER_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    SPI1_Client$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_Client$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_Client$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_Client$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_Client$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_Client$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_Client$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_Client$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_Client$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_Client$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_Client$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_Client$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_Client$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SPI1_Client$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    Timer0$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    Timer0$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    Timer0$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    Timer0$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    Timer0$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    Timer0$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    Timer0$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    Timer0$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), NULL(), 


Critical Paths under _main in COMMON

    _main->_spi_send_data
    _spi_send_data->_SPI1_Open
    _SPI1_Open->___wmul
    _INTERRUPT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     289
                  _SYSTEM_Initialize
                      _spi_send_data
                         _toggle_led
 ---------------------------------------------------------------------------------
 (1) _toggle_led                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_send_data                                        1     1      0     266
                                             10 COMMON     1     1      0
                     _SPI1_ByteWrite
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     214
                                              6 COMMON     4     3      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     100
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI1_ByteWrite                                       1     0      1      23
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                            _INT_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                                NULL *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
   _spi_send_data
     _SPI1_ByteWrite
     _SPI1_Open
       ___wmul
   _toggle_led

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       NULL(Fake) *
       _INT_DefaultInterruptHandler *
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     11      14    100.0%
BANK0               80      0       8     10.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      22      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Jan 13 12:21:51 2025

                      _SPI1_ByteExchange 0000                           ?_spi_send_data 0070  
                                     l47 01F7                                       l55 00A3  
                                     l94 020D                      ___wmul@multiplicand 0072  
                                    l135 01E1                                      l156 01FD  
                                    l316 017F                                      l245 00E1  
                                    l168 0203                                      l267 01C5  
                                    l460 0100                                      l390 01B5  
                                    l458 00EC                                      l386 01D4  
                                    u300 00E8                                      u301 00E7  
                                    u400 01B0                                      u401 01AF  
                                    u330 00FC                                      u331 00FB  
                                    u315 00ED                                      u340 003D  
                                    u325 00F2                                      u341 003C  
                                    u380 01CC                                      u460 010C  
                                    u381 01CA                                      u461 010B  
                                    u390 01CD                                      u470 0116  
                                    u471 0115                                      wreg 0009  
                                   l1200 00E4                                     l1202 00E8  
                                   l1212 01EF                                     l1300 017B  
                                   l1204 00F1                                     l1220 003D  
                                   l1214 01F2                                     l1302 017C  
                                   l1206 00F6                                     l1222 009D  
                                   l1232 020A                                     l1208 00FC  
                                   l1224 009E                                     l1216 0038  
                                   l1234 01D5                                     l1250 00A8  
                                   l1330 01BF                                     l1226 00A1  
                                   l1218 0038                                     l1244 01FE  
                                   l1236 01D8                                     l1260 00B3  
                                   l1252 00AA                                     l1228 00A2  
                                   l1332 01C6                                     l1246 0200  
                                   l1238 01DF                                     l1270 00C2  
                                   l1262 00B8                                     l1254 00AC  
                                   l1326 01B6                                     l1334 01CE  
                                   l1280 00CD                                     l1272 00C4  
                                   l1264 00BC                                     l1256 00AE  
                                   l1248 00A4                                     l1328 01BC  
                                   l1336 01A7                                     l1360 0106  
                                   l1194 01F8                                     l1282 00CF  
                                   l1274 00C6                                     l1266 00BE  
                                   l1258 00B1                                     l1290 016D  
                                   l1338 01B0                                     l1370 011A  
                                   l1362 010C                                     l1354 0101  
                                   l1284 00D2                                     l1276 00C8  
                                   l1268 00C0                                     l1292 016E  
                                   l1364 010F                                     l1356 0104  
                                   l1286 00D5                                     l1278 00CB  
                                   l1294 0170                                     l1198 00E2  
                                   l1366 0111                                     l1358 0105  
                                   l1296 0174                                     l1288 016A  
                                   l1368 0116                                     l1298 0179  
                                   _LATA 0018                                     _LATB 0019  
                        __end_of_INT_ISR 020A                                     _LATC 001A  
                                   _WPUA 1F39                                     _WPUB 1F44  
                                   _WPUC 1F4F                                     _main 0101  
                                   fsr0h 0005                                     indf0 0000  
                                   fsr0l 0004                                     btemp 007E  
    __end_of_INT_DefaultInterruptHandler 0212              _INT_DefaultInterruptHandler 020E  
                                   start 0025          __end_of_INT_SetInterruptHandler 01FE  
                __end_of_TMR0_Initialize 0180                                    ?_main 0070  
                                  _IOCAF 1F3F                                    _IOCBF 1F4A  
                                  _IOCCF 1F55                                    _IOCAN 1F3E  
                                  _IOCAP 1F3D                                    _IOCBN 1F49  
                                  _IOCBP 1F48                                    _IOCCN 1F54  
                                  _IOCCP 1F53                                    i1l140 0013  
                                  i1l153 01EE                                    i1l145 0023  
                                  i1l146 0023                                    i1l149 0209  
                                  i1l159 0211                                    i1l351 01A5  
                                  i1l344 0193                                    _OSCEN 0891  
                                  u41_20 000B                                    _TMR0H 059D  
                                  u41_21 000A                                    _TMR0L 059C  
                                  u42_20 000F                                    u42_21 000E  
                                  u35_20 01E9                                    u43_20 0017  
                                  u35_21 01E8                                    u43_21 0016  
                                  u36_20 019F                                    u44_20 001B  
                                  u36_21 019E                                    u44_21 001A  
                                  u37_20 018C                                    u45_20 001F  
                                  u37_21 018B                                    u45_21 001E  
                                  _TRISA 0012                                    _TRISB 0013  
                                  _TRISC 0014                         __end_of_TMR0_ISR 0194  
                                  pclath 000A                          _tmr0PeriodCount 007B  
                                  status 0003                                    wtemp0 007E  
                        __initialization 0027                          ??_spi_send_data 007A  
                           __end_of_main 011F              ?_INTERRUPT_InterruptManager 0070  
                                 ??_main 007B                                ??_INT_ISR 0070  
                                 _ANSELA 1F38                                   _ANSELB 1F43  
                                 _ANSELC 1F4E                                   _T0CON0 059E  
                                 _T0CON1 059F                                   _RB4PPS 1F1C  
                                 i1l1310 01A1                                   i1l1240 01E2  
                                 i1l1312 0204                                   i1l1304 0194  
                                 i1l1320 0185                                   i1l1242 01E9  
                                 i1l1314 0206                                   i1l1306 0199  
                                 i1l1322 018C                                   _RB7PPS 1F1F  
                                 i1l1308 019F                                   i1l1324 0191  
                                 i1l1316 0180                                   i1l1340 0006  
                                 i1l1318 0183                                   i1l1350 001F  
                                 i1l1342 000B                                   i1l1344 000F  
                                 _ODCONA 1F3A                                   i1l1346 0017  
                                 _ODCONB 1F45                                   _ODCONC 1F50  
                                 i1l1196 020E                                   i1l1348 001B  
                                 _INLVLA 1F3C                                   _INLVLB 1F47  
                                 _INLVLC 1F52                                   _INTPPS 1E90  
                                 _OSCFRQ 0893                        __end_of_SPI1_Open 00A4  
                                 _Timer0 0154                                   ___wmul 00E2  
                       ?_TMR0_Initialize 0070                                   _pushed 0025  
                      ?_CLOCK_Initialize 0070                            ?_INT_CallBack 0070  
                     ??_CLOCK_Initialize 0070  INT_SetInterruptHandler@InterruptHandler 0070  
                         _SPI1_IsRxReady 0000                           _SPI1_IsTxReady 0000  
                      _SYSTEM_Initialize 01B6                  __end_of__initialization 0034  
                         _SPI1_ByteWrite 020A                       ?_SYSTEM_Initialize 0070  
                         __pcstackCOMMON 0070                             __pidataBANK0 0212  
                    ??_SYSTEM_Initialize 0072                                ?_TMR0_ISR 0070  
                      ??_SPI1_Initialize 0070                           ??_INT_CallBack 0070  
                     _spi1_configuration 013B                __end_of_SYSTEM_Initialize 01C6  
                             __pbssBANK0 0024                   __end_of_SPI1_ByteWrite 020E  
                  _TMR0_OverflowCallback 0020                               __pmaintext 0101  
                                ?___wmul 0070                               ??_TMR0_ISR 0070  
                             __pintentry 0004                                  _INT_ISR 0204  
                                _OSCTUNE 0892                                  _SSP1ADD 018D  
                                _SLRCONA 1F3B                                  _SLRCONB 1F46  
                                _SLRCONC 1F51                                  _SSP1BUF 018C  
                        ?_SPI1_ByteWrite 0070                                  __ptext1 01C6  
                                __ptext2 01A6                                  __ptext3 0038  
                                __ptext4 00E2                                  __ptext5 020A  
                                __ptext6 01B6                                  __ptext7 016A  
                                __ptext8 01EF                                  __ptext9 00A4  
                                _divider 0026                 ??_PIN_MANAGER_Initialize 0070  
                _INT_SetInterruptHandler 01F8                     end_of_initialization 0034  
                   __end_of_INT_CallBack 01EF                          _SPI1_BufferRead 0000  
                  __end_of_spi_send_data 01B6                                _SPI1_Open 0038  
                              _SSP1SSPPS 1EC7                                _TMR0_Stop 0000  
                    _SPI1_BufferExchange 0000            _TMR0_OverflowCallbackRegister 0000  
                         _TMR0_PeriodGet 0000                           _TMR0_PeriodSet 0000  
                             _toggle_led 01C6                        _TMR0_Deinitialize 0000  
                        _SPI1_Initialize 01EF     __end_of_TMR0_DefaultOverflowCallback 01A6  
           _TMR0_DefaultOverflowCallback 0194                           __end_of_Timer0 016A  
           __end_of_INTERRUPT_Initialize 01E2                               ?_SPI1_Open 0076  
                         __end_of___wmul 0101                ??_INT_SetInterruptHandler 0072  
                    start_initialization 0027             ?_INT_DefaultInterruptHandler 0070  
          ?_TMR0_DefaultOverflowCallback 0070                        spi_send_data@data 007A  
                               ??___wmul 0074                              __pdataBANK0 0026  
                          _SPI1_ByteRead 0000                              __pbssCOMMON 007B  
                            ?_toggle_led 0070                                ___latbits 0001  
                               ?_INT_ISR 0070                         ??_SPI1_ByteWrite 0071  
                __end_of_SPI1_Initialize 01F8                                __pnvBANK0 0020  
                 _PIN_MANAGER_Initialize 00A4                     SPI1_Open@returnValue 0079  
          ??_INT_DefaultInterruptHandler 0070                              ??_SPI1_Open 0077  
           ??_INTERRUPT_InterruptManager 0070                             _INT_CallBack 01E2  
                              _led_state 007D                     _INTERRUPT_Initialize 01D5  
                       _CLOCK_Initialize 01FE                        ??_TMR0_Initialize 0070  
                         ___wmul@product 0074                                 _LATAbits 0018  
                               _PIE0bits 0716                                 _PIE1bits 0717  
                               _PIR0bits 070C                                 _PIR1bits 070D  
                               _SSP1CON1 0190                                 _SSP1CON3 0192  
                               _TMR0_ISR 0180                                 _SSP1STAT 018F  
         ??_TMR0_DefaultOverflowCallback 0070                        _SPI1_Deinitialize 0000  
                      ___wmul@multiplier 0070                                 _WPUCbits 1F4F  
                       ?_SPI1_Initialize 0070                    ?_INTERRUPT_Initialize 0070  
                    __end_of_SPI1_Client 013B                               _T0CON0bits 059E  
                               __ptext10 01D5                                 __ptext11 01F8  
                               __ptext12 01FE                                 __ptext14 0180  
                               __ptext15 0194                                 __ptext16 0204  
                               __ptext17 01E2                                 __ptext18 020E  
                           _SSP1CON1bits 0190                   SPI1_ByteWrite@byteData 0070  
                       _TMR0_MaxCountGet 0000                            _timerOverflow 0024  
                               int$flags 007E       __end_of_INTERRUPT_InterruptManager 0025  
             _INTERRUPT_InterruptManager 0004                               _INTCONbits 000B  
                           ??_toggle_led 0070                     _INT_InterruptHandler 0022  
                            _SPI1_Client 011F                   ??_INTERRUPT_Initialize 0072  
                               intlevel1 0000                  ?_PIN_MANAGER_Initialize 0070  
                     __end_of_toggle_led 01D5                          _TMR0_CounterGet 0000  
                        _TMR0_CounterSet 0000                         _SPI1_BufferWrite 0000  
               ?_INT_SetInterruptHandler 0070                            _spi_send_data 01A6  
               __end_of_CLOCK_Initialize 0204                            __pstringtext1 011F  
                          __pstringtext2 013B                            __pstringtext3 0154  
                             _SPI1_Close 0000                               _SSP1DATPPS 1EC6  
                             _SSP1CLKPPS 1EC5                          _TMR0_Initialize 016A  
                             _TMR0_Start 0000           __end_of_PIN_MANAGER_Initialize 00E2  
                SPI1_Open@spiConfigIndex 0076               __end_of_spi1_configuration 0154  
