

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Jan 18 14:09:17 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,space=0,delta=2
    26                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Generated 25/01/2024 GMT
    35                           ; 
    36                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F15244 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0008                     bsr             equ	8
    69     0005                     fsr0h           equ	5
    70     0004                     fsr0l           equ	4
    71     0007                     fsr1h           equ	7
    72     0006                     fsr1l           equ	6
    73     0000                     indf            equ	0
    74     0000                     indf0           equ	0
    75     0001                     indf1           equ	1
    76     000B                     intcon          equ	11
    77     0002                     pc              equ	2
    78     0002                     pcl             equ	2
    79     000A                     pclath          equ	10
    80     0003                     status          equ	3
    81     0009                     wreg            equ	9
    82     0000                     INDF0           equ	0	;# 
    83     0001                     INDF1           equ	1	;# 
    84     0002                     PCL             equ	2	;# 
    85     0003                     STATUS          equ	3	;# 
    86     0004                     FSR0L           equ	4	;# 
    87     0005                     FSR0H           equ	5	;# 
    88     0006                     FSR1L           equ	6	;# 
    89     0007                     FSR1H           equ	7	;# 
    90     0008                     BSR             equ	8	;# 
    91     0009                     WREG            equ	9	;# 
    92     000A                     PCLATH          equ	10	;# 
    93     000B                     INTCON          equ	11	;# 
    94     000C                     PORTA           equ	12	;# 
    95     000D                     PORTB           equ	13	;# 
    96     000E                     PORTC           equ	14	;# 
    97     0012                     TRISA           equ	18	;# 
    98     0013                     TRISB           equ	19	;# 
    99     0014                     TRISC           equ	20	;# 
   100     0018                     LATA            equ	24	;# 
   101     0019                     LATB            equ	25	;# 
   102     001A                     LATC            equ	26	;# 
   103     009A                     CPCON           equ	154	;# 
   104     009B                     ADRES           equ	155	;# 
   105     009B                     ADRESL          equ	155	;# 
   106     009C                     ADRESH          equ	156	;# 
   107     009D                     ADCON0          equ	157	;# 
   108     009E                     ADCON1          equ	158	;# 
   109     009F                     ADACT           equ	159	;# 
   110     010C                     RB4I2C          equ	268	;# 
   111     010D                     RB6I2C          equ	269	;# 
   112     0119                     RC1REG          equ	281	;# 
   113     011A                     TX1REG          equ	282	;# 
   114     011B                     SP1BRG          equ	283	;# 
   115     011B                     SP1BRGL         equ	283	;# 
   116     011C                     SP1BRGH         equ	284	;# 
   117     011D                     RC1STA          equ	285	;# 
   118     011E                     TX1STA          equ	286	;# 
   119     011F                     BAUD1CON        equ	287	;# 
   120     018C                     SSP1BUF         equ	396	;# 
   121     018D                     SSP1ADD         equ	397	;# 
   122     018E                     SSP1MSK         equ	398	;# 
   123     018F                     SSP1STAT        equ	399	;# 
   124     0190                     SSP1CON1        equ	400	;# 
   125     0191                     SSP1CON2        equ	401	;# 
   126     0192                     SSP1CON3        equ	402	;# 
   127     020C                     TMR1            equ	524	;# 
   128     020C                     TMR1L           equ	524	;# 
   129     020D                     TMR1H           equ	525	;# 
   130     020E                     T1CON           equ	526	;# 
   131     020E                     TMR1CON         equ	526	;# 
   132     020F                     T1GCON          equ	527	;# 
   133     020F                     TMR1GCON        equ	527	;# 
   134     0210                     T1GATE          equ	528	;# 
   135     0210                     TMR1GATE        equ	528	;# 
   136     0211                     T1CLK           equ	529	;# 
   137     0211                     TMR1CLK         equ	529	;# 
   138     0211                     PR1             equ	529	;# 
   139     028C                     T2TMR           equ	652	;# 
   140     028C                     TMR2            equ	652	;# 
   141     028D                     T2PR            equ	653	;# 
   142     028D                     PR2             equ	653	;# 
   143     028E                     T2CON           equ	654	;# 
   144     028F                     T2HLT           equ	655	;# 
   145     0290                     T2CLKCON        equ	656	;# 
   146     0291                     T2RST           equ	657	;# 
   147     030C                     CCPR1           equ	780	;# 
   148     030C                     CCPR1L          equ	780	;# 
   149     030D                     CCPR1H          equ	781	;# 
   150     030E                     CCP1CON         equ	782	;# 
   151     030F                     CCP1CAP         equ	783	;# 
   152     0310                     CCPR2           equ	784	;# 
   153     0310                     CCPR2L          equ	784	;# 
   154     0311                     CCPR2H          equ	785	;# 
   155     0312                     CCP2CON         equ	786	;# 
   156     0313                     CCP2CAP         equ	787	;# 
   157     0314                     PWM3DC          equ	788	;# 
   158     0314                     PWM3DCL         equ	788	;# 
   159     0315                     PWM3DCH         equ	789	;# 
   160     0316                     PWM3CON         equ	790	;# 
   161     0318                     PWM4DC          equ	792	;# 
   162     0318                     PWM4DCL         equ	792	;# 
   163     0319                     PWM4DCH         equ	793	;# 
   164     031A                     PWM4CON         equ	794	;# 
   165     059C                     TMR0L           equ	1436	;# 
   166     059C                     TMR0            equ	1436	;# 
   167     059D                     TMR0H           equ	1437	;# 
   168     059D                     PR0             equ	1437	;# 
   169     059E                     T0CON0          equ	1438	;# 
   170     059F                     T0CON1          equ	1439	;# 
   171     070C                     PIR0            equ	1804	;# 
   172     070D                     PIR1            equ	1805	;# 
   173     070E                     PIR2            equ	1806	;# 
   174     0716                     PIE0            equ	1814	;# 
   175     0717                     PIE1            equ	1815	;# 
   176     0718                     PIE2            equ	1816	;# 
   177     080C                     WDTCON          equ	2060	;# 
   178     0811                     BORCON          equ	2065	;# 
   179     0813                     PCON0           equ	2067	;# 
   180     0814                     PCON1           equ	2068	;# 
   181     081A                     NVMADR          equ	2074	;# 
   182     081A                     NVMADRL         equ	2074	;# 
   183     081B                     NVMADRH         equ	2075	;# 
   184     081C                     NVMDAT          equ	2076	;# 
   185     081C                     NVMDATL         equ	2076	;# 
   186     081D                     NVMDATH         equ	2077	;# 
   187     081E                     NVMCON1         equ	2078	;# 
   188     081F                     NVMCON2         equ	2079	;# 
   189     088E                     OSCCON          equ	2190	;# 
   190     0890                     OSCSTAT         equ	2192	;# 
   191     0891                     OSCEN           equ	2193	;# 
   192     0892                     OSCTUNE         equ	2194	;# 
   193     0893                     OSCFRQ          equ	2195	;# 
   194     090C                     FVRCON          equ	2316	;# 
   195     1E8F                     PPSLOCK         equ	7823	;# 
   196     1E90                     INTPPS          equ	7824	;# 
   197     1E91                     T0CKIPPS        equ	7825	;# 
   198     1E92                     T1CKIPPS        equ	7826	;# 
   199     1E93                     T1GPPS          equ	7827	;# 
   200     1E9C                     T2INPPS         equ	7836	;# 
   201     1EA1                     CCP1PPS         equ	7841	;# 
   202     1EA2                     CCP2PPS         equ	7842	;# 
   203     1EC3                     ADACTPPS        equ	7875	;# 
   204     1EC5                     SSP1CLKPPS      equ	7877	;# 
   205     1EC6                     SSP1DATPPS      equ	7878	;# 
   206     1EC7                     SSP1SSPPS       equ	7879	;# 
   207     1ECB                     RX1PPS          equ	7883	;# 
   208     1ECB                     RX1DTPPS        equ	7883	;# 
   209     1ECB                     RXPPS           equ	7883	;# 
   210     1ECC                     CK1PPS          equ	7884	;# 
   211     1ECC                     TX1CKPPS        equ	7884	;# 
   212     1ECC                     CKPPS           equ	7884	;# 
   213     1F10                     RA0PPS          equ	7952	;# 
   214     1F11                     RA1PPS          equ	7953	;# 
   215     1F12                     RA2PPS          equ	7954	;# 
   216     1F14                     RA4PPS          equ	7956	;# 
   217     1F15                     RA5PPS          equ	7957	;# 
   218     1F1C                     RB4PPS          equ	7964	;# 
   219     1F1D                     RB5PPS          equ	7965	;# 
   220     1F1E                     RB6PPS          equ	7966	;# 
   221     1F1F                     RB7PPS          equ	7967	;# 
   222     1F20                     RC0PPS          equ	7968	;# 
   223     1F21                     RC1PPS          equ	7969	;# 
   224     1F22                     RC2PPS          equ	7970	;# 
   225     1F23                     RC3PPS          equ	7971	;# 
   226     1F24                     RC4PPS          equ	7972	;# 
   227     1F25                     RC5PPS          equ	7973	;# 
   228     1F26                     RC6PPS          equ	7974	;# 
   229     1F27                     RC7PPS          equ	7975	;# 
   230     1F38                     ANSELA          equ	7992	;# 
   231     1F39                     WPUA            equ	7993	;# 
   232     1F3A                     ODCONA          equ	7994	;# 
   233     1F3B                     SLRCONA         equ	7995	;# 
   234     1F3C                     INLVLA          equ	7996	;# 
   235     1F3D                     IOCAP           equ	7997	;# 
   236     1F3E                     IOCAN           equ	7998	;# 
   237     1F3F                     IOCAF           equ	7999	;# 
   238     1F43                     ANSELB          equ	8003	;# 
   239     1F44                     WPUB            equ	8004	;# 
   240     1F45                     ODCONB          equ	8005	;# 
   241     1F46                     SLRCONB         equ	8006	;# 
   242     1F47                     INLVLB          equ	8007	;# 
   243     1F48                     IOCBP           equ	8008	;# 
   244     1F49                     IOCBN           equ	8009	;# 
   245     1F4A                     IOCBF           equ	8010	;# 
   246     1F4E                     ANSELC          equ	8014	;# 
   247     1F4F                     WPUC            equ	8015	;# 
   248     1F50                     ODCONC          equ	8016	;# 
   249     1F51                     SLRCONC         equ	8017	;# 
   250     1F52                     INLVLC          equ	8018	;# 
   251     1F53                     IOCCP           equ	8019	;# 
   252     1F54                     IOCCN           equ	8020	;# 
   253     1F55                     IOCCF           equ	8021	;# 
   254     1FE4                     STATUS_SHAD     equ	8164	;# 
   255     1FE5                     WREG_SHAD       equ	8165	;# 
   256     1FE6                     BSR_SHAD        equ	8166	;# 
   257     1FE7                     PCLATH_SHAD     equ	8167	;# 
   258     1FE8                     FSR0_SHAD       equ	8168	;# 
   259     1FE8                     FSR0L_SHAD      equ	8168	;# 
   260     1FE9                     FSR0H_SHAD      equ	8169	;# 
   261     1FEA                     FSR1L_SHAD      equ	8170	;# 
   262     1FEB                     FSR1H_SHAD      equ	8171	;# 
   263     1FED                     STKPTR          equ	8173	;# 
   264     1FEE                     TOSL            equ	8174	;# 
   265     1FEF                     TOSH            equ	8175	;# 
   266     0000                     INDF0           equ	0	;# 
   267     0001                     INDF1           equ	1	;# 
   268     0002                     PCL             equ	2	;# 
   269     0003                     STATUS          equ	3	;# 
   270     0004                     FSR0L           equ	4	;# 
   271     0005                     FSR0H           equ	5	;# 
   272     0006                     FSR1L           equ	6	;# 
   273     0007                     FSR1H           equ	7	;# 
   274     0008                     BSR             equ	8	;# 
   275     0009                     WREG            equ	9	;# 
   276     000A                     PCLATH          equ	10	;# 
   277     000B                     INTCON          equ	11	;# 
   278     000C                     PORTA           equ	12	;# 
   279     000D                     PORTB           equ	13	;# 
   280     000E                     PORTC           equ	14	;# 
   281     0012                     TRISA           equ	18	;# 
   282     0013                     TRISB           equ	19	;# 
   283     0014                     TRISC           equ	20	;# 
   284     0018                     LATA            equ	24	;# 
   285     0019                     LATB            equ	25	;# 
   286     001A                     LATC            equ	26	;# 
   287     009A                     CPCON           equ	154	;# 
   288     009B                     ADRES           equ	155	;# 
   289     009B                     ADRESL          equ	155	;# 
   290     009C                     ADRESH          equ	156	;# 
   291     009D                     ADCON0          equ	157	;# 
   292     009E                     ADCON1          equ	158	;# 
   293     009F                     ADACT           equ	159	;# 
   294     010C                     RB4I2C          equ	268	;# 
   295     010D                     RB6I2C          equ	269	;# 
   296     0119                     RC1REG          equ	281	;# 
   297     011A                     TX1REG          equ	282	;# 
   298     011B                     SP1BRG          equ	283	;# 
   299     011B                     SP1BRGL         equ	283	;# 
   300     011C                     SP1BRGH         equ	284	;# 
   301     011D                     RC1STA          equ	285	;# 
   302     011E                     TX1STA          equ	286	;# 
   303     011F                     BAUD1CON        equ	287	;# 
   304     018C                     SSP1BUF         equ	396	;# 
   305     018D                     SSP1ADD         equ	397	;# 
   306     018E                     SSP1MSK         equ	398	;# 
   307     018F                     SSP1STAT        equ	399	;# 
   308     0190                     SSP1CON1        equ	400	;# 
   309     0191                     SSP1CON2        equ	401	;# 
   310     0192                     SSP1CON3        equ	402	;# 
   311     020C                     TMR1            equ	524	;# 
   312     020C                     TMR1L           equ	524	;# 
   313     020D                     TMR1H           equ	525	;# 
   314     020E                     T1CON           equ	526	;# 
   315     020E                     TMR1CON         equ	526	;# 
   316     020F                     T1GCON          equ	527	;# 
   317     020F                     TMR1GCON        equ	527	;# 
   318     0210                     T1GATE          equ	528	;# 
   319     0210                     TMR1GATE        equ	528	;# 
   320     0211                     T1CLK           equ	529	;# 
   321     0211                     TMR1CLK         equ	529	;# 
   322     0211                     PR1             equ	529	;# 
   323     028C                     T2TMR           equ	652	;# 
   324     028C                     TMR2            equ	652	;# 
   325     028D                     T2PR            equ	653	;# 
   326     028D                     PR2             equ	653	;# 
   327     028E                     T2CON           equ	654	;# 
   328     028F                     T2HLT           equ	655	;# 
   329     0290                     T2CLKCON        equ	656	;# 
   330     0291                     T2RST           equ	657	;# 
   331     030C                     CCPR1           equ	780	;# 
   332     030C                     CCPR1L          equ	780	;# 
   333     030D                     CCPR1H          equ	781	;# 
   334     030E                     CCP1CON         equ	782	;# 
   335     030F                     CCP1CAP         equ	783	;# 
   336     0310                     CCPR2           equ	784	;# 
   337     0310                     CCPR2L          equ	784	;# 
   338     0311                     CCPR2H          equ	785	;# 
   339     0312                     CCP2CON         equ	786	;# 
   340     0313                     CCP2CAP         equ	787	;# 
   341     0314                     PWM3DC          equ	788	;# 
   342     0314                     PWM3DCL         equ	788	;# 
   343     0315                     PWM3DCH         equ	789	;# 
   344     0316                     PWM3CON         equ	790	;# 
   345     0318                     PWM4DC          equ	792	;# 
   346     0318                     PWM4DCL         equ	792	;# 
   347     0319                     PWM4DCH         equ	793	;# 
   348     031A                     PWM4CON         equ	794	;# 
   349     059C                     TMR0L           equ	1436	;# 
   350     059C                     TMR0            equ	1436	;# 
   351     059D                     TMR0H           equ	1437	;# 
   352     059D                     PR0             equ	1437	;# 
   353     059E                     T0CON0          equ	1438	;# 
   354     059F                     T0CON1          equ	1439	;# 
   355     070C                     PIR0            equ	1804	;# 
   356     070D                     PIR1            equ	1805	;# 
   357     070E                     PIR2            equ	1806	;# 
   358     0716                     PIE0            equ	1814	;# 
   359     0717                     PIE1            equ	1815	;# 
   360     0718                     PIE2            equ	1816	;# 
   361     080C                     WDTCON          equ	2060	;# 
   362     0811                     BORCON          equ	2065	;# 
   363     0813                     PCON0           equ	2067	;# 
   364     0814                     PCON1           equ	2068	;# 
   365     081A                     NVMADR          equ	2074	;# 
   366     081A                     NVMADRL         equ	2074	;# 
   367     081B                     NVMADRH         equ	2075	;# 
   368     081C                     NVMDAT          equ	2076	;# 
   369     081C                     NVMDATL         equ	2076	;# 
   370     081D                     NVMDATH         equ	2077	;# 
   371     081E                     NVMCON1         equ	2078	;# 
   372     081F                     NVMCON2         equ	2079	;# 
   373     088E                     OSCCON          equ	2190	;# 
   374     0890                     OSCSTAT         equ	2192	;# 
   375     0891                     OSCEN           equ	2193	;# 
   376     0892                     OSCTUNE         equ	2194	;# 
   377     0893                     OSCFRQ          equ	2195	;# 
   378     090C                     FVRCON          equ	2316	;# 
   379     1E8F                     PPSLOCK         equ	7823	;# 
   380     1E90                     INTPPS          equ	7824	;# 
   381     1E91                     T0CKIPPS        equ	7825	;# 
   382     1E92                     T1CKIPPS        equ	7826	;# 
   383     1E93                     T1GPPS          equ	7827	;# 
   384     1E9C                     T2INPPS         equ	7836	;# 
   385     1EA1                     CCP1PPS         equ	7841	;# 
   386     1EA2                     CCP2PPS         equ	7842	;# 
   387     1EC3                     ADACTPPS        equ	7875	;# 
   388     1EC5                     SSP1CLKPPS      equ	7877	;# 
   389     1EC6                     SSP1DATPPS      equ	7878	;# 
   390     1EC7                     SSP1SSPPS       equ	7879	;# 
   391     1ECB                     RX1PPS          equ	7883	;# 
   392     1ECB                     RX1DTPPS        equ	7883	;# 
   393     1ECB                     RXPPS           equ	7883	;# 
   394     1ECC                     CK1PPS          equ	7884	;# 
   395     1ECC                     TX1CKPPS        equ	7884	;# 
   396     1ECC                     CKPPS           equ	7884	;# 
   397     1F10                     RA0PPS          equ	7952	;# 
   398     1F11                     RA1PPS          equ	7953	;# 
   399     1F12                     RA2PPS          equ	7954	;# 
   400     1F14                     RA4PPS          equ	7956	;# 
   401     1F15                     RA5PPS          equ	7957	;# 
   402     1F1C                     RB4PPS          equ	7964	;# 
   403     1F1D                     RB5PPS          equ	7965	;# 
   404     1F1E                     RB6PPS          equ	7966	;# 
   405     1F1F                     RB7PPS          equ	7967	;# 
   406     1F20                     RC0PPS          equ	7968	;# 
   407     1F21                     RC1PPS          equ	7969	;# 
   408     1F22                     RC2PPS          equ	7970	;# 
   409     1F23                     RC3PPS          equ	7971	;# 
   410     1F24                     RC4PPS          equ	7972	;# 
   411     1F25                     RC5PPS          equ	7973	;# 
   412     1F26                     RC6PPS          equ	7974	;# 
   413     1F27                     RC7PPS          equ	7975	;# 
   414     1F38                     ANSELA          equ	7992	;# 
   415     1F39                     WPUA            equ	7993	;# 
   416     1F3A                     ODCONA          equ	7994	;# 
   417     1F3B                     SLRCONA         equ	7995	;# 
   418     1F3C                     INLVLA          equ	7996	;# 
   419     1F3D                     IOCAP           equ	7997	;# 
   420     1F3E                     IOCAN           equ	7998	;# 
   421     1F3F                     IOCAF           equ	7999	;# 
   422     1F43                     ANSELB          equ	8003	;# 
   423     1F44                     WPUB            equ	8004	;# 
   424     1F45                     ODCONB          equ	8005	;# 
   425     1F46                     SLRCONB         equ	8006	;# 
   426     1F47                     INLVLB          equ	8007	;# 
   427     1F48                     IOCBP           equ	8008	;# 
   428     1F49                     IOCBN           equ	8009	;# 
   429     1F4A                     IOCBF           equ	8010	;# 
   430     1F4E                     ANSELC          equ	8014	;# 
   431     1F4F                     WPUC            equ	8015	;# 
   432     1F50                     ODCONC          equ	8016	;# 
   433     1F51                     SLRCONC         equ	8017	;# 
   434     1F52                     INLVLC          equ	8018	;# 
   435     1F53                     IOCCP           equ	8019	;# 
   436     1F54                     IOCCN           equ	8020	;# 
   437     1F55                     IOCCF           equ	8021	;# 
   438     1FE4                     STATUS_SHAD     equ	8164	;# 
   439     1FE5                     WREG_SHAD       equ	8165	;# 
   440     1FE6                     BSR_SHAD        equ	8166	;# 
   441     1FE7                     PCLATH_SHAD     equ	8167	;# 
   442     1FE8                     FSR0_SHAD       equ	8168	;# 
   443     1FE8                     FSR0L_SHAD      equ	8168	;# 
   444     1FE9                     FSR0H_SHAD      equ	8169	;# 
   445     1FEA                     FSR1L_SHAD      equ	8170	;# 
   446     1FEB                     FSR1H_SHAD      equ	8171	;# 
   447     1FED                     STKPTR          equ	8173	;# 
   448     1FEE                     TOSL            equ	8174	;# 
   449     1FEF                     TOSH            equ	8175	;# 
   450     0000                     INDF0           equ	0	;# 
   451     0001                     INDF1           equ	1	;# 
   452     0002                     PCL             equ	2	;# 
   453     0003                     STATUS          equ	3	;# 
   454     0004                     FSR0L           equ	4	;# 
   455     0005                     FSR0H           equ	5	;# 
   456     0006                     FSR1L           equ	6	;# 
   457     0007                     FSR1H           equ	7	;# 
   458     0008                     BSR             equ	8	;# 
   459     0009                     WREG            equ	9	;# 
   460     000A                     PCLATH          equ	10	;# 
   461     000B                     INTCON          equ	11	;# 
   462     000C                     PORTA           equ	12	;# 
   463     000D                     PORTB           equ	13	;# 
   464     000E                     PORTC           equ	14	;# 
   465     0012                     TRISA           equ	18	;# 
   466     0013                     TRISB           equ	19	;# 
   467     0014                     TRISC           equ	20	;# 
   468     0018                     LATA            equ	24	;# 
   469     0019                     LATB            equ	25	;# 
   470     001A                     LATC            equ	26	;# 
   471     009A                     CPCON           equ	154	;# 
   472     009B                     ADRES           equ	155	;# 
   473     009B                     ADRESL          equ	155	;# 
   474     009C                     ADRESH          equ	156	;# 
   475     009D                     ADCON0          equ	157	;# 
   476     009E                     ADCON1          equ	158	;# 
   477     009F                     ADACT           equ	159	;# 
   478     010C                     RB4I2C          equ	268	;# 
   479     010D                     RB6I2C          equ	269	;# 
   480     0119                     RC1REG          equ	281	;# 
   481     011A                     TX1REG          equ	282	;# 
   482     011B                     SP1BRG          equ	283	;# 
   483     011B                     SP1BRGL         equ	283	;# 
   484     011C                     SP1BRGH         equ	284	;# 
   485     011D                     RC1STA          equ	285	;# 
   486     011E                     TX1STA          equ	286	;# 
   487     011F                     BAUD1CON        equ	287	;# 
   488     018C                     SSP1BUF         equ	396	;# 
   489     018D                     SSP1ADD         equ	397	;# 
   490     018E                     SSP1MSK         equ	398	;# 
   491     018F                     SSP1STAT        equ	399	;# 
   492     0190                     SSP1CON1        equ	400	;# 
   493     0191                     SSP1CON2        equ	401	;# 
   494     0192                     SSP1CON3        equ	402	;# 
   495     020C                     TMR1            equ	524	;# 
   496     020C                     TMR1L           equ	524	;# 
   497     020D                     TMR1H           equ	525	;# 
   498     020E                     T1CON           equ	526	;# 
   499     020E                     TMR1CON         equ	526	;# 
   500     020F                     T1GCON          equ	527	;# 
   501     020F                     TMR1GCON        equ	527	;# 
   502     0210                     T1GATE          equ	528	;# 
   503     0210                     TMR1GATE        equ	528	;# 
   504     0211                     T1CLK           equ	529	;# 
   505     0211                     TMR1CLK         equ	529	;# 
   506     0211                     PR1             equ	529	;# 
   507     028C                     T2TMR           equ	652	;# 
   508     028C                     TMR2            equ	652	;# 
   509     028D                     T2PR            equ	653	;# 
   510     028D                     PR2             equ	653	;# 
   511     028E                     T2CON           equ	654	;# 
   512     028F                     T2HLT           equ	655	;# 
   513     0290                     T2CLKCON        equ	656	;# 
   514     0291                     T2RST           equ	657	;# 
   515     030C                     CCPR1           equ	780	;# 
   516     030C                     CCPR1L          equ	780	;# 
   517     030D                     CCPR1H          equ	781	;# 
   518     030E                     CCP1CON         equ	782	;# 
   519     030F                     CCP1CAP         equ	783	;# 
   520     0310                     CCPR2           equ	784	;# 
   521     0310                     CCPR2L          equ	784	;# 
   522     0311                     CCPR2H          equ	785	;# 
   523     0312                     CCP2CON         equ	786	;# 
   524     0313                     CCP2CAP         equ	787	;# 
   525     0314                     PWM3DC          equ	788	;# 
   526     0314                     PWM3DCL         equ	788	;# 
   527     0315                     PWM3DCH         equ	789	;# 
   528     0316                     PWM3CON         equ	790	;# 
   529     0318                     PWM4DC          equ	792	;# 
   530     0318                     PWM4DCL         equ	792	;# 
   531     0319                     PWM4DCH         equ	793	;# 
   532     031A                     PWM4CON         equ	794	;# 
   533     059C                     TMR0L           equ	1436	;# 
   534     059C                     TMR0            equ	1436	;# 
   535     059D                     TMR0H           equ	1437	;# 
   536     059D                     PR0             equ	1437	;# 
   537     059E                     T0CON0          equ	1438	;# 
   538     059F                     T0CON1          equ	1439	;# 
   539     070C                     PIR0            equ	1804	;# 
   540     070D                     PIR1            equ	1805	;# 
   541     070E                     PIR2            equ	1806	;# 
   542     0716                     PIE0            equ	1814	;# 
   543     0717                     PIE1            equ	1815	;# 
   544     0718                     PIE2            equ	1816	;# 
   545     080C                     WDTCON          equ	2060	;# 
   546     0811                     BORCON          equ	2065	;# 
   547     0813                     PCON0           equ	2067	;# 
   548     0814                     PCON1           equ	2068	;# 
   549     081A                     NVMADR          equ	2074	;# 
   550     081A                     NVMADRL         equ	2074	;# 
   551     081B                     NVMADRH         equ	2075	;# 
   552     081C                     NVMDAT          equ	2076	;# 
   553     081C                     NVMDATL         equ	2076	;# 
   554     081D                     NVMDATH         equ	2077	;# 
   555     081E                     NVMCON1         equ	2078	;# 
   556     081F                     NVMCON2         equ	2079	;# 
   557     088E                     OSCCON          equ	2190	;# 
   558     0890                     OSCSTAT         equ	2192	;# 
   559     0891                     OSCEN           equ	2193	;# 
   560     0892                     OSCTUNE         equ	2194	;# 
   561     0893                     OSCFRQ          equ	2195	;# 
   562     090C                     FVRCON          equ	2316	;# 
   563     1E8F                     PPSLOCK         equ	7823	;# 
   564     1E90                     INTPPS          equ	7824	;# 
   565     1E91                     T0CKIPPS        equ	7825	;# 
   566     1E92                     T1CKIPPS        equ	7826	;# 
   567     1E93                     T1GPPS          equ	7827	;# 
   568     1E9C                     T2INPPS         equ	7836	;# 
   569     1EA1                     CCP1PPS         equ	7841	;# 
   570     1EA2                     CCP2PPS         equ	7842	;# 
   571     1EC3                     ADACTPPS        equ	7875	;# 
   572     1EC5                     SSP1CLKPPS      equ	7877	;# 
   573     1EC6                     SSP1DATPPS      equ	7878	;# 
   574     1EC7                     SSP1SSPPS       equ	7879	;# 
   575     1ECB                     RX1PPS          equ	7883	;# 
   576     1ECB                     RX1DTPPS        equ	7883	;# 
   577     1ECB                     RXPPS           equ	7883	;# 
   578     1ECC                     CK1PPS          equ	7884	;# 
   579     1ECC                     TX1CKPPS        equ	7884	;# 
   580     1ECC                     CKPPS           equ	7884	;# 
   581     1F10                     RA0PPS          equ	7952	;# 
   582     1F11                     RA1PPS          equ	7953	;# 
   583     1F12                     RA2PPS          equ	7954	;# 
   584     1F14                     RA4PPS          equ	7956	;# 
   585     1F15                     RA5PPS          equ	7957	;# 
   586     1F1C                     RB4PPS          equ	7964	;# 
   587     1F1D                     RB5PPS          equ	7965	;# 
   588     1F1E                     RB6PPS          equ	7966	;# 
   589     1F1F                     RB7PPS          equ	7967	;# 
   590     1F20                     RC0PPS          equ	7968	;# 
   591     1F21                     RC1PPS          equ	7969	;# 
   592     1F22                     RC2PPS          equ	7970	;# 
   593     1F23                     RC3PPS          equ	7971	;# 
   594     1F24                     RC4PPS          equ	7972	;# 
   595     1F25                     RC5PPS          equ	7973	;# 
   596     1F26                     RC6PPS          equ	7974	;# 
   597     1F27                     RC7PPS          equ	7975	;# 
   598     1F38                     ANSELA          equ	7992	;# 
   599     1F39                     WPUA            equ	7993	;# 
   600     1F3A                     ODCONA          equ	7994	;# 
   601     1F3B                     SLRCONA         equ	7995	;# 
   602     1F3C                     INLVLA          equ	7996	;# 
   603     1F3D                     IOCAP           equ	7997	;# 
   604     1F3E                     IOCAN           equ	7998	;# 
   605     1F3F                     IOCAF           equ	7999	;# 
   606     1F43                     ANSELB          equ	8003	;# 
   607     1F44                     WPUB            equ	8004	;# 
   608     1F45                     ODCONB          equ	8005	;# 
   609     1F46                     SLRCONB         equ	8006	;# 
   610     1F47                     INLVLB          equ	8007	;# 
   611     1F48                     IOCBP           equ	8008	;# 
   612     1F49                     IOCBN           equ	8009	;# 
   613     1F4A                     IOCBF           equ	8010	;# 
   614     1F4E                     ANSELC          equ	8014	;# 
   615     1F4F                     WPUC            equ	8015	;# 
   616     1F50                     ODCONC          equ	8016	;# 
   617     1F51                     SLRCONC         equ	8017	;# 
   618     1F52                     INLVLC          equ	8018	;# 
   619     1F53                     IOCCP           equ	8019	;# 
   620     1F54                     IOCCN           equ	8020	;# 
   621     1F55                     IOCCF           equ	8021	;# 
   622     1FE4                     STATUS_SHAD     equ	8164	;# 
   623     1FE5                     WREG_SHAD       equ	8165	;# 
   624     1FE6                     BSR_SHAD        equ	8166	;# 
   625     1FE7                     PCLATH_SHAD     equ	8167	;# 
   626     1FE8                     FSR0_SHAD       equ	8168	;# 
   627     1FE8                     FSR0L_SHAD      equ	8168	;# 
   628     1FE9                     FSR0H_SHAD      equ	8169	;# 
   629     1FEA                     FSR1L_SHAD      equ	8170	;# 
   630     1FEB                     FSR1H_SHAD      equ	8171	;# 
   631     1FED                     STKPTR          equ	8173	;# 
   632     1FEE                     TOSL            equ	8174	;# 
   633     1FEF                     TOSH            equ	8175	;# 
   634     0000                     INDF0           equ	0	;# 
   635     0001                     INDF1           equ	1	;# 
   636     0002                     PCL             equ	2	;# 
   637     0003                     STATUS          equ	3	;# 
   638     0004                     FSR0L           equ	4	;# 
   639     0005                     FSR0H           equ	5	;# 
   640     0006                     FSR1L           equ	6	;# 
   641     0007                     FSR1H           equ	7	;# 
   642     0008                     BSR             equ	8	;# 
   643     0009                     WREG            equ	9	;# 
   644     000A                     PCLATH          equ	10	;# 
   645     000B                     INTCON          equ	11	;# 
   646     000C                     PORTA           equ	12	;# 
   647     000D                     PORTB           equ	13	;# 
   648     000E                     PORTC           equ	14	;# 
   649     0012                     TRISA           equ	18	;# 
   650     0013                     TRISB           equ	19	;# 
   651     0014                     TRISC           equ	20	;# 
   652     0018                     LATA            equ	24	;# 
   653     0019                     LATB            equ	25	;# 
   654     001A                     LATC            equ	26	;# 
   655     009A                     CPCON           equ	154	;# 
   656     009B                     ADRES           equ	155	;# 
   657     009B                     ADRESL          equ	155	;# 
   658     009C                     ADRESH          equ	156	;# 
   659     009D                     ADCON0          equ	157	;# 
   660     009E                     ADCON1          equ	158	;# 
   661     009F                     ADACT           equ	159	;# 
   662     010C                     RB4I2C          equ	268	;# 
   663     010D                     RB6I2C          equ	269	;# 
   664     0119                     RC1REG          equ	281	;# 
   665     011A                     TX1REG          equ	282	;# 
   666     011B                     SP1BRG          equ	283	;# 
   667     011B                     SP1BRGL         equ	283	;# 
   668     011C                     SP1BRGH         equ	284	;# 
   669     011D                     RC1STA          equ	285	;# 
   670     011E                     TX1STA          equ	286	;# 
   671     011F                     BAUD1CON        equ	287	;# 
   672     018C                     SSP1BUF         equ	396	;# 
   673     018D                     SSP1ADD         equ	397	;# 
   674     018E                     SSP1MSK         equ	398	;# 
   675     018F                     SSP1STAT        equ	399	;# 
   676     0190                     SSP1CON1        equ	400	;# 
   677     0191                     SSP1CON2        equ	401	;# 
   678     0192                     SSP1CON3        equ	402	;# 
   679     020C                     TMR1            equ	524	;# 
   680     020C                     TMR1L           equ	524	;# 
   681     020D                     TMR1H           equ	525	;# 
   682     020E                     T1CON           equ	526	;# 
   683     020E                     TMR1CON         equ	526	;# 
   684     020F                     T1GCON          equ	527	;# 
   685     020F                     TMR1GCON        equ	527	;# 
   686     0210                     T1GATE          equ	528	;# 
   687     0210                     TMR1GATE        equ	528	;# 
   688     0211                     T1CLK           equ	529	;# 
   689     0211                     TMR1CLK         equ	529	;# 
   690     0211                     PR1             equ	529	;# 
   691     028C                     T2TMR           equ	652	;# 
   692     028C                     TMR2            equ	652	;# 
   693     028D                     T2PR            equ	653	;# 
   694     028D                     PR2             equ	653	;# 
   695     028E                     T2CON           equ	654	;# 
   696     028F                     T2HLT           equ	655	;# 
   697     0290                     T2CLKCON        equ	656	;# 
   698     0291                     T2RST           equ	657	;# 
   699     030C                     CCPR1           equ	780	;# 
   700     030C                     CCPR1L          equ	780	;# 
   701     030D                     CCPR1H          equ	781	;# 
   702     030E                     CCP1CON         equ	782	;# 
   703     030F                     CCP1CAP         equ	783	;# 
   704     0310                     CCPR2           equ	784	;# 
   705     0310                     CCPR2L          equ	784	;# 
   706     0311                     CCPR2H          equ	785	;# 
   707     0312                     CCP2CON         equ	786	;# 
   708     0313                     CCP2CAP         equ	787	;# 
   709     0314                     PWM3DC          equ	788	;# 
   710     0314                     PWM3DCL         equ	788	;# 
   711     0315                     PWM3DCH         equ	789	;# 
   712     0316                     PWM3CON         equ	790	;# 
   713     0318                     PWM4DC          equ	792	;# 
   714     0318                     PWM4DCL         equ	792	;# 
   715     0319                     PWM4DCH         equ	793	;# 
   716     031A                     PWM4CON         equ	794	;# 
   717     059C                     TMR0L           equ	1436	;# 
   718     059C                     TMR0            equ	1436	;# 
   719     059D                     TMR0H           equ	1437	;# 
   720     059D                     PR0             equ	1437	;# 
   721     059E                     T0CON0          equ	1438	;# 
   722     059F                     T0CON1          equ	1439	;# 
   723     070C                     PIR0            equ	1804	;# 
   724     070D                     PIR1            equ	1805	;# 
   725     070E                     PIR2            equ	1806	;# 
   726     0716                     PIE0            equ	1814	;# 
   727     0717                     PIE1            equ	1815	;# 
   728     0718                     PIE2            equ	1816	;# 
   729     080C                     WDTCON          equ	2060	;# 
   730     0811                     BORCON          equ	2065	;# 
   731     0813                     PCON0           equ	2067	;# 
   732     0814                     PCON1           equ	2068	;# 
   733     081A                     NVMADR          equ	2074	;# 
   734     081A                     NVMADRL         equ	2074	;# 
   735     081B                     NVMADRH         equ	2075	;# 
   736     081C                     NVMDAT          equ	2076	;# 
   737     081C                     NVMDATL         equ	2076	;# 
   738     081D                     NVMDATH         equ	2077	;# 
   739     081E                     NVMCON1         equ	2078	;# 
   740     081F                     NVMCON2         equ	2079	;# 
   741     088E                     OSCCON          equ	2190	;# 
   742     0890                     OSCSTAT         equ	2192	;# 
   743     0891                     OSCEN           equ	2193	;# 
   744     0892                     OSCTUNE         equ	2194	;# 
   745     0893                     OSCFRQ          equ	2195	;# 
   746     090C                     FVRCON          equ	2316	;# 
   747     1E8F                     PPSLOCK         equ	7823	;# 
   748     1E90                     INTPPS          equ	7824	;# 
   749     1E91                     T0CKIPPS        equ	7825	;# 
   750     1E92                     T1CKIPPS        equ	7826	;# 
   751     1E93                     T1GPPS          equ	7827	;# 
   752     1E9C                     T2INPPS         equ	7836	;# 
   753     1EA1                     CCP1PPS         equ	7841	;# 
   754     1EA2                     CCP2PPS         equ	7842	;# 
   755     1EC3                     ADACTPPS        equ	7875	;# 
   756     1EC5                     SSP1CLKPPS      equ	7877	;# 
   757     1EC6                     SSP1DATPPS      equ	7878	;# 
   758     1EC7                     SSP1SSPPS       equ	7879	;# 
   759     1ECB                     RX1PPS          equ	7883	;# 
   760     1ECB                     RX1DTPPS        equ	7883	;# 
   761     1ECB                     RXPPS           equ	7883	;# 
   762     1ECC                     CK1PPS          equ	7884	;# 
   763     1ECC                     TX1CKPPS        equ	7884	;# 
   764     1ECC                     CKPPS           equ	7884	;# 
   765     1F10                     RA0PPS          equ	7952	;# 
   766     1F11                     RA1PPS          equ	7953	;# 
   767     1F12                     RA2PPS          equ	7954	;# 
   768     1F14                     RA4PPS          equ	7956	;# 
   769     1F15                     RA5PPS          equ	7957	;# 
   770     1F1C                     RB4PPS          equ	7964	;# 
   771     1F1D                     RB5PPS          equ	7965	;# 
   772     1F1E                     RB6PPS          equ	7966	;# 
   773     1F1F                     RB7PPS          equ	7967	;# 
   774     1F20                     RC0PPS          equ	7968	;# 
   775     1F21                     RC1PPS          equ	7969	;# 
   776     1F22                     RC2PPS          equ	7970	;# 
   777     1F23                     RC3PPS          equ	7971	;# 
   778     1F24                     RC4PPS          equ	7972	;# 
   779     1F25                     RC5PPS          equ	7973	;# 
   780     1F26                     RC6PPS          equ	7974	;# 
   781     1F27                     RC7PPS          equ	7975	;# 
   782     1F38                     ANSELA          equ	7992	;# 
   783     1F39                     WPUA            equ	7993	;# 
   784     1F3A                     ODCONA          equ	7994	;# 
   785     1F3B                     SLRCONA         equ	7995	;# 
   786     1F3C                     INLVLA          equ	7996	;# 
   787     1F3D                     IOCAP           equ	7997	;# 
   788     1F3E                     IOCAN           equ	7998	;# 
   789     1F3F                     IOCAF           equ	7999	;# 
   790     1F43                     ANSELB          equ	8003	;# 
   791     1F44                     WPUB            equ	8004	;# 
   792     1F45                     ODCONB          equ	8005	;# 
   793     1F46                     SLRCONB         equ	8006	;# 
   794     1F47                     INLVLB          equ	8007	;# 
   795     1F48                     IOCBP           equ	8008	;# 
   796     1F49                     IOCBN           equ	8009	;# 
   797     1F4A                     IOCBF           equ	8010	;# 
   798     1F4E                     ANSELC          equ	8014	;# 
   799     1F4F                     WPUC            equ	8015	;# 
   800     1F50                     ODCONC          equ	8016	;# 
   801     1F51                     SLRCONC         equ	8017	;# 
   802     1F52                     INLVLC          equ	8018	;# 
   803     1F53                     IOCCP           equ	8019	;# 
   804     1F54                     IOCCN           equ	8020	;# 
   805     1F55                     IOCCF           equ	8021	;# 
   806     1FE4                     STATUS_SHAD     equ	8164	;# 
   807     1FE5                     WREG_SHAD       equ	8165	;# 
   808     1FE6                     BSR_SHAD        equ	8166	;# 
   809     1FE7                     PCLATH_SHAD     equ	8167	;# 
   810     1FE8                     FSR0_SHAD       equ	8168	;# 
   811     1FE8                     FSR0L_SHAD      equ	8168	;# 
   812     1FE9                     FSR0H_SHAD      equ	8169	;# 
   813     1FEA                     FSR1L_SHAD      equ	8170	;# 
   814     1FEB                     FSR1H_SHAD      equ	8171	;# 
   815     1FED                     STKPTR          equ	8173	;# 
   816     1FEE                     TOSL            equ	8174	;# 
   817     1FEF                     TOSH            equ	8175	;# 
   818     0000                     INDF0           equ	0	;# 
   819     0001                     INDF1           equ	1	;# 
   820     0002                     PCL             equ	2	;# 
   821     0003                     STATUS          equ	3	;# 
   822     0004                     FSR0L           equ	4	;# 
   823     0005                     FSR0H           equ	5	;# 
   824     0006                     FSR1L           equ	6	;# 
   825     0007                     FSR1H           equ	7	;# 
   826     0008                     BSR             equ	8	;# 
   827     0009                     WREG            equ	9	;# 
   828     000A                     PCLATH          equ	10	;# 
   829     000B                     INTCON          equ	11	;# 
   830     000C                     PORTA           equ	12	;# 
   831     000D                     PORTB           equ	13	;# 
   832     000E                     PORTC           equ	14	;# 
   833     0012                     TRISA           equ	18	;# 
   834     0013                     TRISB           equ	19	;# 
   835     0014                     TRISC           equ	20	;# 
   836     0018                     LATA            equ	24	;# 
   837     0019                     LATB            equ	25	;# 
   838     001A                     LATC            equ	26	;# 
   839     009A                     CPCON           equ	154	;# 
   840     009B                     ADRES           equ	155	;# 
   841     009B                     ADRESL          equ	155	;# 
   842     009C                     ADRESH          equ	156	;# 
   843     009D                     ADCON0          equ	157	;# 
   844     009E                     ADCON1          equ	158	;# 
   845     009F                     ADACT           equ	159	;# 
   846     010C                     RB4I2C          equ	268	;# 
   847     010D                     RB6I2C          equ	269	;# 
   848     0119                     RC1REG          equ	281	;# 
   849     011A                     TX1REG          equ	282	;# 
   850     011B                     SP1BRG          equ	283	;# 
   851     011B                     SP1BRGL         equ	283	;# 
   852     011C                     SP1BRGH         equ	284	;# 
   853     011D                     RC1STA          equ	285	;# 
   854     011E                     TX1STA          equ	286	;# 
   855     011F                     BAUD1CON        equ	287	;# 
   856     018C                     SSP1BUF         equ	396	;# 
   857     018D                     SSP1ADD         equ	397	;# 
   858     018E                     SSP1MSK         equ	398	;# 
   859     018F                     SSP1STAT        equ	399	;# 
   860     0190                     SSP1CON1        equ	400	;# 
   861     0191                     SSP1CON2        equ	401	;# 
   862     0192                     SSP1CON3        equ	402	;# 
   863     020C                     TMR1            equ	524	;# 
   864     020C                     TMR1L           equ	524	;# 
   865     020D                     TMR1H           equ	525	;# 
   866     020E                     T1CON           equ	526	;# 
   867     020E                     TMR1CON         equ	526	;# 
   868     020F                     T1GCON          equ	527	;# 
   869     020F                     TMR1GCON        equ	527	;# 
   870     0210                     T1GATE          equ	528	;# 
   871     0210                     TMR1GATE        equ	528	;# 
   872     0211                     T1CLK           equ	529	;# 
   873     0211                     TMR1CLK         equ	529	;# 
   874     0211                     PR1             equ	529	;# 
   875     028C                     T2TMR           equ	652	;# 
   876     028C                     TMR2            equ	652	;# 
   877     028D                     T2PR            equ	653	;# 
   878     028D                     PR2             equ	653	;# 
   879     028E                     T2CON           equ	654	;# 
   880     028F                     T2HLT           equ	655	;# 
   881     0290                     T2CLKCON        equ	656	;# 
   882     0291                     T2RST           equ	657	;# 
   883     030C                     CCPR1           equ	780	;# 
   884     030C                     CCPR1L          equ	780	;# 
   885     030D                     CCPR1H          equ	781	;# 
   886     030E                     CCP1CON         equ	782	;# 
   887     030F                     CCP1CAP         equ	783	;# 
   888     0310                     CCPR2           equ	784	;# 
   889     0310                     CCPR2L          equ	784	;# 
   890     0311                     CCPR2H          equ	785	;# 
   891     0312                     CCP2CON         equ	786	;# 
   892     0313                     CCP2CAP         equ	787	;# 
   893     0314                     PWM3DC          equ	788	;# 
   894     0314                     PWM3DCL         equ	788	;# 
   895     0315                     PWM3DCH         equ	789	;# 
   896     0316                     PWM3CON         equ	790	;# 
   897     0318                     PWM4DC          equ	792	;# 
   898     0318                     PWM4DCL         equ	792	;# 
   899     0319                     PWM4DCH         equ	793	;# 
   900     031A                     PWM4CON         equ	794	;# 
   901     059C                     TMR0L           equ	1436	;# 
   902     059C                     TMR0            equ	1436	;# 
   903     059D                     TMR0H           equ	1437	;# 
   904     059D                     PR0             equ	1437	;# 
   905     059E                     T0CON0          equ	1438	;# 
   906     059F                     T0CON1          equ	1439	;# 
   907     070C                     PIR0            equ	1804	;# 
   908     070D                     PIR1            equ	1805	;# 
   909     070E                     PIR2            equ	1806	;# 
   910     0716                     PIE0            equ	1814	;# 
   911     0717                     PIE1            equ	1815	;# 
   912     0718                     PIE2            equ	1816	;# 
   913     080C                     WDTCON          equ	2060	;# 
   914     0811                     BORCON          equ	2065	;# 
   915     0813                     PCON0           equ	2067	;# 
   916     0814                     PCON1           equ	2068	;# 
   917     081A                     NVMADR          equ	2074	;# 
   918     081A                     NVMADRL         equ	2074	;# 
   919     081B                     NVMADRH         equ	2075	;# 
   920     081C                     NVMDAT          equ	2076	;# 
   921     081C                     NVMDATL         equ	2076	;# 
   922     081D                     NVMDATH         equ	2077	;# 
   923     081E                     NVMCON1         equ	2078	;# 
   924     081F                     NVMCON2         equ	2079	;# 
   925     088E                     OSCCON          equ	2190	;# 
   926     0890                     OSCSTAT         equ	2192	;# 
   927     0891                     OSCEN           equ	2193	;# 
   928     0892                     OSCTUNE         equ	2194	;# 
   929     0893                     OSCFRQ          equ	2195	;# 
   930     090C                     FVRCON          equ	2316	;# 
   931     1E8F                     PPSLOCK         equ	7823	;# 
   932     1E90                     INTPPS          equ	7824	;# 
   933     1E91                     T0CKIPPS        equ	7825	;# 
   934     1E92                     T1CKIPPS        equ	7826	;# 
   935     1E93                     T1GPPS          equ	7827	;# 
   936     1E9C                     T2INPPS         equ	7836	;# 
   937     1EA1                     CCP1PPS         equ	7841	;# 
   938     1EA2                     CCP2PPS         equ	7842	;# 
   939     1EC3                     ADACTPPS        equ	7875	;# 
   940     1EC5                     SSP1CLKPPS      equ	7877	;# 
   941     1EC6                     SSP1DATPPS      equ	7878	;# 
   942     1EC7                     SSP1SSPPS       equ	7879	;# 
   943     1ECB                     RX1PPS          equ	7883	;# 
   944     1ECB                     RX1DTPPS        equ	7883	;# 
   945     1ECB                     RXPPS           equ	7883	;# 
   946     1ECC                     CK1PPS          equ	7884	;# 
   947     1ECC                     TX1CKPPS        equ	7884	;# 
   948     1ECC                     CKPPS           equ	7884	;# 
   949     1F10                     RA0PPS          equ	7952	;# 
   950     1F11                     RA1PPS          equ	7953	;# 
   951     1F12                     RA2PPS          equ	7954	;# 
   952     1F14                     RA4PPS          equ	7956	;# 
   953     1F15                     RA5PPS          equ	7957	;# 
   954     1F1C                     RB4PPS          equ	7964	;# 
   955     1F1D                     RB5PPS          equ	7965	;# 
   956     1F1E                     RB6PPS          equ	7966	;# 
   957     1F1F                     RB7PPS          equ	7967	;# 
   958     1F20                     RC0PPS          equ	7968	;# 
   959     1F21                     RC1PPS          equ	7969	;# 
   960     1F22                     RC2PPS          equ	7970	;# 
   961     1F23                     RC3PPS          equ	7971	;# 
   962     1F24                     RC4PPS          equ	7972	;# 
   963     1F25                     RC5PPS          equ	7973	;# 
   964     1F26                     RC6PPS          equ	7974	;# 
   965     1F27                     RC7PPS          equ	7975	;# 
   966     1F38                     ANSELA          equ	7992	;# 
   967     1F39                     WPUA            equ	7993	;# 
   968     1F3A                     ODCONA          equ	7994	;# 
   969     1F3B                     SLRCONA         equ	7995	;# 
   970     1F3C                     INLVLA          equ	7996	;# 
   971     1F3D                     IOCAP           equ	7997	;# 
   972     1F3E                     IOCAN           equ	7998	;# 
   973     1F3F                     IOCAF           equ	7999	;# 
   974     1F43                     ANSELB          equ	8003	;# 
   975     1F44                     WPUB            equ	8004	;# 
   976     1F45                     ODCONB          equ	8005	;# 
   977     1F46                     SLRCONB         equ	8006	;# 
   978     1F47                     INLVLB          equ	8007	;# 
   979     1F48                     IOCBP           equ	8008	;# 
   980     1F49                     IOCBN           equ	8009	;# 
   981     1F4A                     IOCBF           equ	8010	;# 
   982     1F4E                     ANSELC          equ	8014	;# 
   983     1F4F                     WPUC            equ	8015	;# 
   984     1F50                     ODCONC          equ	8016	;# 
   985     1F51                     SLRCONC         equ	8017	;# 
   986     1F52                     INLVLC          equ	8018	;# 
   987     1F53                     IOCCP           equ	8019	;# 
   988     1F54                     IOCCN           equ	8020	;# 
   989     1F55                     IOCCF           equ	8021	;# 
   990     1FE4                     STATUS_SHAD     equ	8164	;# 
   991     1FE5                     WREG_SHAD       equ	8165	;# 
   992     1FE6                     BSR_SHAD        equ	8166	;# 
   993     1FE7                     PCLATH_SHAD     equ	8167	;# 
   994     1FE8                     FSR0_SHAD       equ	8168	;# 
   995     1FE8                     FSR0L_SHAD      equ	8168	;# 
   996     1FE9                     FSR0H_SHAD      equ	8169	;# 
   997     1FEA                     FSR1L_SHAD      equ	8170	;# 
   998     1FEB                     FSR1H_SHAD      equ	8171	;# 
   999     1FED                     STKPTR          equ	8173	;# 
  1000     1FEE                     TOSL            equ	8174	;# 
  1001     1FEF                     TOSH            equ	8175	;# 
  1002     0000                     INDF0           equ	0	;# 
  1003     0001                     INDF1           equ	1	;# 
  1004     0002                     PCL             equ	2	;# 
  1005     0003                     STATUS          equ	3	;# 
  1006     0004                     FSR0L           equ	4	;# 
  1007     0005                     FSR0H           equ	5	;# 
  1008     0006                     FSR1L           equ	6	;# 
  1009     0007                     FSR1H           equ	7	;# 
  1010     0008                     BSR             equ	8	;# 
  1011     0009                     WREG            equ	9	;# 
  1012     000A                     PCLATH          equ	10	;# 
  1013     000B                     INTCON          equ	11	;# 
  1014     000C                     PORTA           equ	12	;# 
  1015     000D                     PORTB           equ	13	;# 
  1016     000E                     PORTC           equ	14	;# 
  1017     0012                     TRISA           equ	18	;# 
  1018     0013                     TRISB           equ	19	;# 
  1019     0014                     TRISC           equ	20	;# 
  1020     0018                     LATA            equ	24	;# 
  1021     0019                     LATB            equ	25	;# 
  1022     001A                     LATC            equ	26	;# 
  1023     009A                     CPCON           equ	154	;# 
  1024     009B                     ADRES           equ	155	;# 
  1025     009B                     ADRESL          equ	155	;# 
  1026     009C                     ADRESH          equ	156	;# 
  1027     009D                     ADCON0          equ	157	;# 
  1028     009E                     ADCON1          equ	158	;# 
  1029     009F                     ADACT           equ	159	;# 
  1030     010C                     RB4I2C          equ	268	;# 
  1031     010D                     RB6I2C          equ	269	;# 
  1032     0119                     RC1REG          equ	281	;# 
  1033     011A                     TX1REG          equ	282	;# 
  1034     011B                     SP1BRG          equ	283	;# 
  1035     011B                     SP1BRGL         equ	283	;# 
  1036     011C                     SP1BRGH         equ	284	;# 
  1037     011D                     RC1STA          equ	285	;# 
  1038     011E                     TX1STA          equ	286	;# 
  1039     011F                     BAUD1CON        equ	287	;# 
  1040     018C                     SSP1BUF         equ	396	;# 
  1041     018D                     SSP1ADD         equ	397	;# 
  1042     018E                     SSP1MSK         equ	398	;# 
  1043     018F                     SSP1STAT        equ	399	;# 
  1044     0190                     SSP1CON1        equ	400	;# 
  1045     0191                     SSP1CON2        equ	401	;# 
  1046     0192                     SSP1CON3        equ	402	;# 
  1047     020C                     TMR1            equ	524	;# 
  1048     020C                     TMR1L           equ	524	;# 
  1049     020D                     TMR1H           equ	525	;# 
  1050     020E                     T1CON           equ	526	;# 
  1051     020E                     TMR1CON         equ	526	;# 
  1052     020F                     T1GCON          equ	527	;# 
  1053     020F                     TMR1GCON        equ	527	;# 
  1054     0210                     T1GATE          equ	528	;# 
  1055     0210                     TMR1GATE        equ	528	;# 
  1056     0211                     T1CLK           equ	529	;# 
  1057     0211                     TMR1CLK         equ	529	;# 
  1058     0211                     PR1             equ	529	;# 
  1059     028C                     T2TMR           equ	652	;# 
  1060     028C                     TMR2            equ	652	;# 
  1061     028D                     T2PR            equ	653	;# 
  1062     028D                     PR2             equ	653	;# 
  1063     028E                     T2CON           equ	654	;# 
  1064     028F                     T2HLT           equ	655	;# 
  1065     0290                     T2CLKCON        equ	656	;# 
  1066     0291                     T2RST           equ	657	;# 
  1067     030C                     CCPR1           equ	780	;# 
  1068     030C                     CCPR1L          equ	780	;# 
  1069     030D                     CCPR1H          equ	781	;# 
  1070     030E                     CCP1CON         equ	782	;# 
  1071     030F                     CCP1CAP         equ	783	;# 
  1072     0310                     CCPR2           equ	784	;# 
  1073     0310                     CCPR2L          equ	784	;# 
  1074     0311                     CCPR2H          equ	785	;# 
  1075     0312                     CCP2CON         equ	786	;# 
  1076     0313                     CCP2CAP         equ	787	;# 
  1077     0314                     PWM3DC          equ	788	;# 
  1078     0314                     PWM3DCL         equ	788	;# 
  1079     0315                     PWM3DCH         equ	789	;# 
  1080     0316                     PWM3CON         equ	790	;# 
  1081     0318                     PWM4DC          equ	792	;# 
  1082     0318                     PWM4DCL         equ	792	;# 
  1083     0319                     PWM4DCH         equ	793	;# 
  1084     031A                     PWM4CON         equ	794	;# 
  1085     059C                     TMR0L           equ	1436	;# 
  1086     059C                     TMR0            equ	1436	;# 
  1087     059D                     TMR0H           equ	1437	;# 
  1088     059D                     PR0             equ	1437	;# 
  1089     059E                     T0CON0          equ	1438	;# 
  1090     059F                     T0CON1          equ	1439	;# 
  1091     070C                     PIR0            equ	1804	;# 
  1092     070D                     PIR1            equ	1805	;# 
  1093     070E                     PIR2            equ	1806	;# 
  1094     0716                     PIE0            equ	1814	;# 
  1095     0717                     PIE1            equ	1815	;# 
  1096     0718                     PIE2            equ	1816	;# 
  1097     080C                     WDTCON          equ	2060	;# 
  1098     0811                     BORCON          equ	2065	;# 
  1099     0813                     PCON0           equ	2067	;# 
  1100     0814                     PCON1           equ	2068	;# 
  1101     081A                     NVMADR          equ	2074	;# 
  1102     081A                     NVMADRL         equ	2074	;# 
  1103     081B                     NVMADRH         equ	2075	;# 
  1104     081C                     NVMDAT          equ	2076	;# 
  1105     081C                     NVMDATL         equ	2076	;# 
  1106     081D                     NVMDATH         equ	2077	;# 
  1107     081E                     NVMCON1         equ	2078	;# 
  1108     081F                     NVMCON2         equ	2079	;# 
  1109     088E                     OSCCON          equ	2190	;# 
  1110     0890                     OSCSTAT         equ	2192	;# 
  1111     0891                     OSCEN           equ	2193	;# 
  1112     0892                     OSCTUNE         equ	2194	;# 
  1113     0893                     OSCFRQ          equ	2195	;# 
  1114     090C                     FVRCON          equ	2316	;# 
  1115     1E8F                     PPSLOCK         equ	7823	;# 
  1116     1E90                     INTPPS          equ	7824	;# 
  1117     1E91                     T0CKIPPS        equ	7825	;# 
  1118     1E92                     T1CKIPPS        equ	7826	;# 
  1119     1E93                     T1GPPS          equ	7827	;# 
  1120     1E9C                     T2INPPS         equ	7836	;# 
  1121     1EA1                     CCP1PPS         equ	7841	;# 
  1122     1EA2                     CCP2PPS         equ	7842	;# 
  1123     1EC3                     ADACTPPS        equ	7875	;# 
  1124     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1125     1EC6                     SSP1DATPPS      equ	7878	;# 
  1126     1EC7                     SSP1SSPPS       equ	7879	;# 
  1127     1ECB                     RX1PPS          equ	7883	;# 
  1128     1ECB                     RX1DTPPS        equ	7883	;# 
  1129     1ECB                     RXPPS           equ	7883	;# 
  1130     1ECC                     CK1PPS          equ	7884	;# 
  1131     1ECC                     TX1CKPPS        equ	7884	;# 
  1132     1ECC                     CKPPS           equ	7884	;# 
  1133     1F10                     RA0PPS          equ	7952	;# 
  1134     1F11                     RA1PPS          equ	7953	;# 
  1135     1F12                     RA2PPS          equ	7954	;# 
  1136     1F14                     RA4PPS          equ	7956	;# 
  1137     1F15                     RA5PPS          equ	7957	;# 
  1138     1F1C                     RB4PPS          equ	7964	;# 
  1139     1F1D                     RB5PPS          equ	7965	;# 
  1140     1F1E                     RB6PPS          equ	7966	;# 
  1141     1F1F                     RB7PPS          equ	7967	;# 
  1142     1F20                     RC0PPS          equ	7968	;# 
  1143     1F21                     RC1PPS          equ	7969	;# 
  1144     1F22                     RC2PPS          equ	7970	;# 
  1145     1F23                     RC3PPS          equ	7971	;# 
  1146     1F24                     RC4PPS          equ	7972	;# 
  1147     1F25                     RC5PPS          equ	7973	;# 
  1148     1F26                     RC6PPS          equ	7974	;# 
  1149     1F27                     RC7PPS          equ	7975	;# 
  1150     1F38                     ANSELA          equ	7992	;# 
  1151     1F39                     WPUA            equ	7993	;# 
  1152     1F3A                     ODCONA          equ	7994	;# 
  1153     1F3B                     SLRCONA         equ	7995	;# 
  1154     1F3C                     INLVLA          equ	7996	;# 
  1155     1F3D                     IOCAP           equ	7997	;# 
  1156     1F3E                     IOCAN           equ	7998	;# 
  1157     1F3F                     IOCAF           equ	7999	;# 
  1158     1F43                     ANSELB          equ	8003	;# 
  1159     1F44                     WPUB            equ	8004	;# 
  1160     1F45                     ODCONB          equ	8005	;# 
  1161     1F46                     SLRCONB         equ	8006	;# 
  1162     1F47                     INLVLB          equ	8007	;# 
  1163     1F48                     IOCBP           equ	8008	;# 
  1164     1F49                     IOCBN           equ	8009	;# 
  1165     1F4A                     IOCBF           equ	8010	;# 
  1166     1F4E                     ANSELC          equ	8014	;# 
  1167     1F4F                     WPUC            equ	8015	;# 
  1168     1F50                     ODCONC          equ	8016	;# 
  1169     1F51                     SLRCONC         equ	8017	;# 
  1170     1F52                     INLVLC          equ	8018	;# 
  1171     1F53                     IOCCP           equ	8019	;# 
  1172     1F54                     IOCCN           equ	8020	;# 
  1173     1F55                     IOCCF           equ	8021	;# 
  1174     1FE4                     STATUS_SHAD     equ	8164	;# 
  1175     1FE5                     WREG_SHAD       equ	8165	;# 
  1176     1FE6                     BSR_SHAD        equ	8166	;# 
  1177     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1178     1FE8                     FSR0_SHAD       equ	8168	;# 
  1179     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1180     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1181     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1182     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1183     1FED                     STKPTR          equ	8173	;# 
  1184     1FEE                     TOSL            equ	8174	;# 
  1185     1FEF                     TOSH            equ	8175	;# 
  1186     0000                     INDF0           equ	0	;# 
  1187     0001                     INDF1           equ	1	;# 
  1188     0002                     PCL             equ	2	;# 
  1189     0003                     STATUS          equ	3	;# 
  1190     0004                     FSR0L           equ	4	;# 
  1191     0005                     FSR0H           equ	5	;# 
  1192     0006                     FSR1L           equ	6	;# 
  1193     0007                     FSR1H           equ	7	;# 
  1194     0008                     BSR             equ	8	;# 
  1195     0009                     WREG            equ	9	;# 
  1196     000A                     PCLATH          equ	10	;# 
  1197     000B                     INTCON          equ	11	;# 
  1198     000C                     PORTA           equ	12	;# 
  1199     000D                     PORTB           equ	13	;# 
  1200     000E                     PORTC           equ	14	;# 
  1201     0012                     TRISA           equ	18	;# 
  1202     0013                     TRISB           equ	19	;# 
  1203     0014                     TRISC           equ	20	;# 
  1204     0018                     LATA            equ	24	;# 
  1205     0019                     LATB            equ	25	;# 
  1206     001A                     LATC            equ	26	;# 
  1207     009A                     CPCON           equ	154	;# 
  1208     009B                     ADRES           equ	155	;# 
  1209     009B                     ADRESL          equ	155	;# 
  1210     009C                     ADRESH          equ	156	;# 
  1211     009D                     ADCON0          equ	157	;# 
  1212     009E                     ADCON1          equ	158	;# 
  1213     009F                     ADACT           equ	159	;# 
  1214     010C                     RB4I2C          equ	268	;# 
  1215     010D                     RB6I2C          equ	269	;# 
  1216     0119                     RC1REG          equ	281	;# 
  1217     011A                     TX1REG          equ	282	;# 
  1218     011B                     SP1BRG          equ	283	;# 
  1219     011B                     SP1BRGL         equ	283	;# 
  1220     011C                     SP1BRGH         equ	284	;# 
  1221     011D                     RC1STA          equ	285	;# 
  1222     011E                     TX1STA          equ	286	;# 
  1223     011F                     BAUD1CON        equ	287	;# 
  1224     018C                     SSP1BUF         equ	396	;# 
  1225     018D                     SSP1ADD         equ	397	;# 
  1226     018E                     SSP1MSK         equ	398	;# 
  1227     018F                     SSP1STAT        equ	399	;# 
  1228     0190                     SSP1CON1        equ	400	;# 
  1229     0191                     SSP1CON2        equ	401	;# 
  1230     0192                     SSP1CON3        equ	402	;# 
  1231     020C                     TMR1            equ	524	;# 
  1232     020C                     TMR1L           equ	524	;# 
  1233     020D                     TMR1H           equ	525	;# 
  1234     020E                     T1CON           equ	526	;# 
  1235     020E                     TMR1CON         equ	526	;# 
  1236     020F                     T1GCON          equ	527	;# 
  1237     020F                     TMR1GCON        equ	527	;# 
  1238     0210                     T1GATE          equ	528	;# 
  1239     0210                     TMR1GATE        equ	528	;# 
  1240     0211                     T1CLK           equ	529	;# 
  1241     0211                     TMR1CLK         equ	529	;# 
  1242     0211                     PR1             equ	529	;# 
  1243     028C                     T2TMR           equ	652	;# 
  1244     028C                     TMR2            equ	652	;# 
  1245     028D                     T2PR            equ	653	;# 
  1246     028D                     PR2             equ	653	;# 
  1247     028E                     T2CON           equ	654	;# 
  1248     028F                     T2HLT           equ	655	;# 
  1249     0290                     T2CLKCON        equ	656	;# 
  1250     0291                     T2RST           equ	657	;# 
  1251     030C                     CCPR1           equ	780	;# 
  1252     030C                     CCPR1L          equ	780	;# 
  1253     030D                     CCPR1H          equ	781	;# 
  1254     030E                     CCP1CON         equ	782	;# 
  1255     030F                     CCP1CAP         equ	783	;# 
  1256     0310                     CCPR2           equ	784	;# 
  1257     0310                     CCPR2L          equ	784	;# 
  1258     0311                     CCPR2H          equ	785	;# 
  1259     0312                     CCP2CON         equ	786	;# 
  1260     0313                     CCP2CAP         equ	787	;# 
  1261     0314                     PWM3DC          equ	788	;# 
  1262     0314                     PWM3DCL         equ	788	;# 
  1263     0315                     PWM3DCH         equ	789	;# 
  1264     0316                     PWM3CON         equ	790	;# 
  1265     0318                     PWM4DC          equ	792	;# 
  1266     0318                     PWM4DCL         equ	792	;# 
  1267     0319                     PWM4DCH         equ	793	;# 
  1268     031A                     PWM4CON         equ	794	;# 
  1269     059C                     TMR0L           equ	1436	;# 
  1270     059C                     TMR0            equ	1436	;# 
  1271     059D                     TMR0H           equ	1437	;# 
  1272     059D                     PR0             equ	1437	;# 
  1273     059E                     T0CON0          equ	1438	;# 
  1274     059F                     T0CON1          equ	1439	;# 
  1275     070C                     PIR0            equ	1804	;# 
  1276     070D                     PIR1            equ	1805	;# 
  1277     070E                     PIR2            equ	1806	;# 
  1278     0716                     PIE0            equ	1814	;# 
  1279     0717                     PIE1            equ	1815	;# 
  1280     0718                     PIE2            equ	1816	;# 
  1281     080C                     WDTCON          equ	2060	;# 
  1282     0811                     BORCON          equ	2065	;# 
  1283     0813                     PCON0           equ	2067	;# 
  1284     0814                     PCON1           equ	2068	;# 
  1285     081A                     NVMADR          equ	2074	;# 
  1286     081A                     NVMADRL         equ	2074	;# 
  1287     081B                     NVMADRH         equ	2075	;# 
  1288     081C                     NVMDAT          equ	2076	;# 
  1289     081C                     NVMDATL         equ	2076	;# 
  1290     081D                     NVMDATH         equ	2077	;# 
  1291     081E                     NVMCON1         equ	2078	;# 
  1292     081F                     NVMCON2         equ	2079	;# 
  1293     088E                     OSCCON          equ	2190	;# 
  1294     0890                     OSCSTAT         equ	2192	;# 
  1295     0891                     OSCEN           equ	2193	;# 
  1296     0892                     OSCTUNE         equ	2194	;# 
  1297     0893                     OSCFRQ          equ	2195	;# 
  1298     090C                     FVRCON          equ	2316	;# 
  1299     1E8F                     PPSLOCK         equ	7823	;# 
  1300     1E90                     INTPPS          equ	7824	;# 
  1301     1E91                     T0CKIPPS        equ	7825	;# 
  1302     1E92                     T1CKIPPS        equ	7826	;# 
  1303     1E93                     T1GPPS          equ	7827	;# 
  1304     1E9C                     T2INPPS         equ	7836	;# 
  1305     1EA1                     CCP1PPS         equ	7841	;# 
  1306     1EA2                     CCP2PPS         equ	7842	;# 
  1307     1EC3                     ADACTPPS        equ	7875	;# 
  1308     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1309     1EC6                     SSP1DATPPS      equ	7878	;# 
  1310     1EC7                     SSP1SSPPS       equ	7879	;# 
  1311     1ECB                     RX1PPS          equ	7883	;# 
  1312     1ECB                     RX1DTPPS        equ	7883	;# 
  1313     1ECB                     RXPPS           equ	7883	;# 
  1314     1ECC                     CK1PPS          equ	7884	;# 
  1315     1ECC                     TX1CKPPS        equ	7884	;# 
  1316     1ECC                     CKPPS           equ	7884	;# 
  1317     1F10                     RA0PPS          equ	7952	;# 
  1318     1F11                     RA1PPS          equ	7953	;# 
  1319     1F12                     RA2PPS          equ	7954	;# 
  1320     1F14                     RA4PPS          equ	7956	;# 
  1321     1F15                     RA5PPS          equ	7957	;# 
  1322     1F1C                     RB4PPS          equ	7964	;# 
  1323     1F1D                     RB5PPS          equ	7965	;# 
  1324     1F1E                     RB6PPS          equ	7966	;# 
  1325     1F1F                     RB7PPS          equ	7967	;# 
  1326     1F20                     RC0PPS          equ	7968	;# 
  1327     1F21                     RC1PPS          equ	7969	;# 
  1328     1F22                     RC2PPS          equ	7970	;# 
  1329     1F23                     RC3PPS          equ	7971	;# 
  1330     1F24                     RC4PPS          equ	7972	;# 
  1331     1F25                     RC5PPS          equ	7973	;# 
  1332     1F26                     RC6PPS          equ	7974	;# 
  1333     1F27                     RC7PPS          equ	7975	;# 
  1334     1F38                     ANSELA          equ	7992	;# 
  1335     1F39                     WPUA            equ	7993	;# 
  1336     1F3A                     ODCONA          equ	7994	;# 
  1337     1F3B                     SLRCONA         equ	7995	;# 
  1338     1F3C                     INLVLA          equ	7996	;# 
  1339     1F3D                     IOCAP           equ	7997	;# 
  1340     1F3E                     IOCAN           equ	7998	;# 
  1341     1F3F                     IOCAF           equ	7999	;# 
  1342     1F43                     ANSELB          equ	8003	;# 
  1343     1F44                     WPUB            equ	8004	;# 
  1344     1F45                     ODCONB          equ	8005	;# 
  1345     1F46                     SLRCONB         equ	8006	;# 
  1346     1F47                     INLVLB          equ	8007	;# 
  1347     1F48                     IOCBP           equ	8008	;# 
  1348     1F49                     IOCBN           equ	8009	;# 
  1349     1F4A                     IOCBF           equ	8010	;# 
  1350     1F4E                     ANSELC          equ	8014	;# 
  1351     1F4F                     WPUC            equ	8015	;# 
  1352     1F50                     ODCONC          equ	8016	;# 
  1353     1F51                     SLRCONC         equ	8017	;# 
  1354     1F52                     INLVLC          equ	8018	;# 
  1355     1F53                     IOCCP           equ	8019	;# 
  1356     1F54                     IOCCN           equ	8020	;# 
  1357     1F55                     IOCCF           equ	8021	;# 
  1358     1FE4                     STATUS_SHAD     equ	8164	;# 
  1359     1FE5                     WREG_SHAD       equ	8165	;# 
  1360     1FE6                     BSR_SHAD        equ	8166	;# 
  1361     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1362     1FE8                     FSR0_SHAD       equ	8168	;# 
  1363     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1364     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1365     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1366     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1367     1FED                     STKPTR          equ	8173	;# 
  1368     1FEE                     TOSL            equ	8174	;# 
  1369     1FEF                     TOSH            equ	8175	;# 
  1370                           
  1371 ;; Function _SPI1_Deinitialize is unused but had its address taken
  1372     0000                     _SPI1_Deinitialize equ	0
  1373                           
  1374 ;; Function _SPI1_Close is unused but had its address taken
  1375     0000                     _SPI1_Close     equ	0
  1376                           
  1377 ;; Function _SPI1_BufferExchange is unused but had its address taken
  1378     0000                     _SPI1_BufferExchange equ	0
  1379                           
  1380 ;; Function _SPI1_BufferWrite is unused but had its address taken
  1381     0000                     _SPI1_BufferWrite equ	0
  1382                           
  1383 ;; Function _SPI1_BufferRead is unused but had its address taken
  1384     0000                     _SPI1_BufferRead equ	0
  1385                           
  1386 ;; Function _SPI1_ByteExchange is unused but had its address taken
  1387     0000                     _SPI1_ByteExchange equ	0
  1388                           
  1389 ;; Function _SPI1_ByteRead is unused but had its address taken
  1390     0000                     _SPI1_ByteRead  equ	0
  1391                           
  1392 ;; Function _SPI1_IsRxReady is unused but had its address taken
  1393     0000                     _SPI1_IsRxReady equ	0
  1394                           
  1395 ;; Function _SPI1_IsTxReady is unused but had its address taken
  1396     0000                     _SPI1_IsTxReady equ	0
  1397                           
  1398                           	psect	idataBANK0
  1399     01CC                     __pidataBANK0:
  1400                           
  1401                           ;initializer for _divider
  1402     01CC  34FF               	retlw	255
  1403     01CD  34FF               	retlw	255
  1404                           
  1405                           	psect	stringtext1
  1406     011D                     __pstringtext1:
  1407     011D                     _SPI1_Client:
  1408     011D  34AA               	retlw	low _SPI1_Initialize
  1409     011E  3401               	retlw	high _SPI1_Initialize
  1410     011F  3400               	retlw	0
  1411     0120  3400               	retlw	0
  1412     0121  3438               	retlw	low _SPI1_Open
  1413     0122  3400               	retlw	high _SPI1_Open
  1414     0123  3400               	retlw	0
  1415     0124  3400               	retlw	0
  1416     0125  3400               	retlw	0
  1417     0126  3400               	retlw	0
  1418     0127  3400               	retlw	0
  1419     0128  3400               	retlw	0
  1420     0129  3400               	retlw	0
  1421     012A  3400               	retlw	0
  1422     012B  3400               	retlw	0
  1423     012C  3400               	retlw	0
  1424     012D  3400               	retlw	0
  1425     012E  3400               	retlw	0
  1426     012F  34C5               	retlw	low _SPI1_ByteWrite
  1427     0130  3401               	retlw	high _SPI1_ByteWrite
  1428     0131  3400               	retlw	0
  1429     0132  3400               	retlw	0
  1430     0133  3400               	retlw	0
  1431     0134  3400               	retlw	0
  1432     0135  3400               	retlw	0
  1433     0136  3400               	retlw	0
  1434     0137  3400               	retlw	0
  1435     0138  3400               	retlw	0
  1436     0139                     __end_of_SPI1_Client:
  1437                           
  1438                           	psect	stringtext2
  1439     01A0                     __pstringtext2:
  1440     01A0                     _spi1_configuration:
  1441     01A0  3400               	retlw	0
  1442     01A1  3404               	retlw	4
  1443     01A2  3410               	retlw	16
  1444     01A3  3401               	retlw	1
  1445     01A4  3400               	retlw	0
  1446     01A5  3464               	retlw	100
  1447     01A6  3404               	retlw	4
  1448     01A7  3410               	retlw	16
  1449     01A8  3400               	retlw	0
  1450     01A9  3400               	retlw	0
  1451     01AA                     __end_of_spi1_configuration:
  1452                           
  1453                           	psect	nvBANK0
  1454     0020                     __pnvBANK0:
  1455     0020                     _INT_InterruptHandler:
  1456     0020                     	ds	2
  1457     0018                     _LATAbits       set	24
  1458     0014                     _TRISC          set	20
  1459     0013                     _TRISB          set	19
  1460     0012                     _TRISA          set	18
  1461     001A                     _LATC           set	26
  1462     0019                     _LATB           set	25
  1463     0018                     _LATA           set	24
  1464     000B                     _INTCONbits     set	11
  1465     018C                     _SSP1BUF        set	396
  1466     0190                     _SSP1CON1bits   set	400
  1467     018D                     _SSP1ADD        set	397
  1468     0192                     _SSP1CON3       set	402
  1469     0190                     _SSP1CON1       set	400
  1470     018F                     _SSP1STAT       set	399
  1471     059E                     _T0CON0bits     set	1438
  1472     059E                     _T0CON0         set	1438
  1473     059F                     _T0CON1         set	1439
  1474     059C                     _TMR0L          set	1436
  1475     059D                     _TMR0H          set	1437
  1476     070D                     _PIR1bits       set	1805
  1477     0717                     _PIE1bits       set	1815
  1478     0716                     _PIE0bits       set	1814
  1479     070C                     _PIR0bits       set	1804
  1480     0892                     _OSCTUNE        set	2194
  1481     0893                     _OSCFRQ         set	2195
  1482     0891                     _OSCEN          set	2193
  1483     1EC5                     _SSP1CLKPPS     set	7877
  1484     1EC7                     _SSP1SSPPS      set	7879
  1485     1EC6                     _SSP1DATPPS     set	7878
  1486     1E90                     _INTPPS         set	7824
  1487     1F55                     _IOCCF          set	8021
  1488     1F54                     _IOCCN          set	8020
  1489     1F53                     _IOCCP          set	8019
  1490     1F4A                     _IOCBF          set	8010
  1491     1F49                     _IOCBN          set	8009
  1492     1F48                     _IOCBP          set	8008
  1493     1F3F                     _IOCAF          set	7999
  1494     1F3E                     _IOCAN          set	7998
  1495     1F3D                     _IOCAP          set	7997
  1496     1F1C                     _RB4PPS         set	7964
  1497     1F1F                     _RB7PPS         set	7967
  1498     1F52                     _INLVLC         set	8018
  1499     1F47                     _INLVLB         set	8007
  1500     1F3C                     _INLVLA         set	7996
  1501     1F51                     _SLRCONC        set	8017
  1502     1F46                     _SLRCONB        set	8006
  1503     1F3B                     _SLRCONA        set	7995
  1504     1F50                     _ODCONC         set	8016
  1505     1F45                     _ODCONB         set	8005
  1506     1F3A                     _ODCONA         set	7994
  1507     1F4F                     _WPUC           set	8015
  1508     1F44                     _WPUB           set	8004
  1509     1F39                     _WPUA           set	7993
  1510     1F4E                     _ANSELC         set	8014
  1511     1F43                     _ANSELB         set	8003
  1512     1F38                     _ANSELA         set	7992
  1513                           
  1514                           	psect	cinit
  1515     0027                     start_initialization:	
  1516                           ; #config settings
  1517                           
  1518     0027                     __initialization:
  1519                           
  1520                           ; Initialize objects allocated to BANK0
  1521     0027  3181  21CC  3180   	fcall	__pidataBANK0	;fetch initializer
  1522     002A  00A4               	movwf	__pdataBANK0& (0+127)
  1523     002B  3181  21CD  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1524     002E  00A5               	movwf	(__pdataBANK0+1)& (0+127)
  1525                           
  1526                           ; Clear objects allocated to COMMON
  1527     002F  01FB               	clrf	__pbssCOMMON& (0+127)
  1528     0030  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  1529     0031  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
  1530                           
  1531                           ; Clear objects allocated to BANK0
  1532     0032  01A2               	clrf	__pbssBANK0& (0+127)
  1533     0033  01A3               	clrf	(__pbssBANK0+1)& (0+127)
  1534     0034                     end_of_initialization:	
  1535                           ;End of C runtime variable initialization code
  1536                           
  1537     0034                     __end_of__initialization:
  1538     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1539     0035  0140               	movlb	0
  1540     0036  3181  2900         	ljmp	_main	;jump to C main() function
  1541                           
  1542                           	psect	bssCOMMON
  1543     007B                     __pbssCOMMON:
  1544     007B                     _led_state:
  1545     007B                     	ds	1
  1546     007C                     _timerOverflow:
  1547     007C                     	ds	1
  1548     007D                     _pushed:
  1549     007D                     	ds	1
  1550                           
  1551                           	psect	bssBANK0
  1552     0022                     __pbssBANK0:
  1553     0022                     _TMR0_PeriodMatchCallback:
  1554     0022                     	ds	2
  1555                           
  1556                           	psect	dataBANK0
  1557     0024                     __pdataBANK0:
  1558     0024                     _divider:
  1559     0024                     	ds	2
  1560                           
  1561                           	psect	cstackCOMMON
  1562     0070                     __pcstackCOMMON:
  1563     0070                     ?_INT_SetInterruptHandler:
  1564     0070                     ?_INT_DefaultInterruptHandler:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567     0070                     ?_INT_ISR:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570     0070                     ?_TMR0_ISR:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573     0070                     ?_INT_CallBack:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576     0070                     ?_CLOCK_Initialize:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579     0070                     ?_SPI1_Initialize:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582     0070                     ?_SPI1_ByteWrite:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585     0070                     ?_toggle_led:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588     0070                     ?_spi_send_data:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591     0070                     ?_TMR0_DefaultCallback:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594     0070                     ?_INTERRUPT_Initialize:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597     0070                     ?_INTERRUPT_InterruptManager:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600     0070                     ?_PIN_MANAGER_Initialize:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603     0070                     ?_SYSTEM_Initialize:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606     0070                     ?_main:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609     0070                     ?___wmul:	
  1610                           ; 2 bytes @ 0x0
  1611                           
  1612     0070                     SPI1_ByteWrite@byteData:	
  1613                           ; 2 bytes @ 0x0
  1614                           
  1615     0070                     INT_SetInterruptHandler@InterruptHandler:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618     0070                     ___wmul@multiplier:	
  1619                           ; 2 bytes @ 0x0
  1620                           
  1621     0070                     ??_INT_DefaultInterruptHandler:	
  1622                           ; 2 bytes @ 0x0
  1623                           
  1624     0070                     ??_INT_ISR:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627     0070                     ??_TMR0_ISR:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630     0070                     ??_INT_CallBack:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633     0070                     ??_CLOCK_Initialize:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636     0070                     ??_SPI1_Initialize:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639     0070                     ??_toggle_led:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642     0070                     ??_TMR0_DefaultCallback:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645     0070                     ??_INTERRUPT_InterruptManager:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648     0070                     ??_PIN_MANAGER_Initialize:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651                           
  1652                           ; 1 bytes @ 0x0
  1653     0070                     	ds	1
  1654     0071                     ??_SPI1_ByteWrite:
  1655                           
  1656                           ; 1 bytes @ 0x1
  1657     0071                     	ds	1
  1658     0072                     ___wmul@multiplicand:
  1659     0072                     ??_INT_SetInterruptHandler:	
  1660                           ; 2 bytes @ 0x2
  1661                           
  1662     0072                     ??_INTERRUPT_Initialize:	
  1663                           ; 1 bytes @ 0x2
  1664                           
  1665     0072                     ??_SYSTEM_Initialize:	
  1666                           ; 1 bytes @ 0x2
  1667                           
  1668                           
  1669                           ; 1 bytes @ 0x2
  1670     0072                     	ds	2
  1671     0074                     ___wmul@product:
  1672     0074                     ??___wmul:	
  1673                           ; 2 bytes @ 0x4
  1674                           
  1675                           
  1676                           ; 1 bytes @ 0x4
  1677     0074                     	ds	2
  1678     0076                     ?_SPI1_Open:
  1679     0076                     SPI1_Open@spiConfigIndex:	
  1680                           ; 1 bytes @ 0x6
  1681                           
  1682                           
  1683                           ; 1 bytes @ 0x6
  1684     0076                     	ds	1
  1685     0077                     ??_SPI1_Open:
  1686                           
  1687                           ; 1 bytes @ 0x7
  1688     0077                     	ds	2
  1689     0079                     SPI1_Open@returnValue:
  1690                           
  1691                           ; 1 bytes @ 0x9
  1692     0079                     	ds	1
  1693     007A                     spi_send_data@data:
  1694     007A                     ??_spi_send_data:	
  1695                           ; 1 bytes @ 0xA
  1696                           
  1697                           
  1698                           ; 1 bytes @ 0xA
  1699     007A                     	ds	1
  1700     007B                     ??_main:
  1701                           
  1702                           	psect	maintext
  1703     0100                     __pmaintext:	
  1704                           ; 1 bytes @ 0xB
  1705 ;;
  1706 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1707 ;;
  1708 ;; *************** function _main *****************
  1709 ;; Defined at:
  1710 ;;		line 46 in file "main.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  2  285[None  ] int 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : B3F/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1724 ;;      Params:         0       0       0       0       0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0       0
  1727 ;;      Totals:         0       0       0       0       0       0       0       0
  1728 ;;Total ram usage:        0 bytes
  1729 ;; Hardware stack levels required when called: 7
  1730 ;; This function calls:
  1731 ;;		_SYSTEM_Initialize
  1732 ;;		_spi_send_data
  1733 ;;		_toggle_led
  1734 ;; This function is called by:
  1735 ;;		Startup code after reset
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739     0100                     _main:	
  1740                           ;psect for function _main
  1741                           
  1742     0100                     l1244:	
  1743                           ;incstack = 0
  1744                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1745                           
  1746                           
  1747                           ;main.c: 47:     SYSTEM_Initialize();
  1748     0100  3181  2179  3181   	fcall	_SYSTEM_Initialize
  1749     0103                     l1246:
  1750                           
  1751                           ;main.c: 53:     (INTCONbits.GIE = 1);
  1752     0103  178B               	bsf	11,7	;volatile
  1753     0104                     l1248:
  1754                           
  1755                           ;main.c: 59:     (INTCONbits.PEIE = 1);
  1756     0104  170B               	bsf	11,6	;volatile
  1757     0105                     l1250:
  1758                           
  1759                           ;main.c: 63:     pushed= 0;
  1760     0105  01FD               	clrf	_pushed
  1761     0106                     l1252:
  1762                           
  1763                           ;main.c: 64:     timerOverflow=0;
  1764     0106  01FC               	clrf	_timerOverflow
  1765     0107                     l1254:
  1766                           
  1767                           ;main.c: 68:         if (timerOverflow) {
  1768     0107  087C               	movf	_timerOverflow,w
  1769     0108  1903               	btfsc	3,2
  1770     0109  290B               	goto	u431
  1771     010A  290C               	goto	u430
  1772     010B                     u431:
  1773     010B  2910               	goto	l1260
  1774     010C                     u430:
  1775     010C                     l1256:
  1776                           
  1777                           ;main.c: 69:             toggle_led();
  1778     010C  3181  215B  3181   	fcall	_toggle_led
  1779     010F                     l1258:
  1780                           
  1781                           ;main.c: 70:             timerOverflow = 0;
  1782     010F  01FC               	clrf	_timerOverflow
  1783     0110                     l1260:
  1784                           
  1785                           ;main.c: 72:         if (pushed) {
  1786     0110  087D               	movf	_pushed,w
  1787     0111  1903               	btfsc	3,2
  1788     0112  2914               	goto	u441
  1789     0113  2915               	goto	u440
  1790     0114                     u441:
  1791     0114  2907               	goto	l1254
  1792     0115                     u440:
  1793     0115                     l1262:
  1794                           
  1795                           ;main.c: 73:             spi_send_data(0x33);
  1796     0115  3033               	movlw	51
  1797     0116  3181  214B  3181   	fcall	_spi_send_data
  1798     0119                     l1264:
  1799                           
  1800                           ;main.c: 74:             pushed = 0;
  1801     0119  01FD               	clrf	_pushed
  1802     011A  2907               	goto	l1254
  1803     011B  3180  2825         	ljmp	start
  1804     011D                     __end_of_main:
  1805                           
  1806                           	psect	text1
  1807     015B                     __ptext1:	
  1808 ;; *************** function _toggle_led *****************
  1809 ;; Defined at:
  1810 ;;		line 79 in file "main.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1824 ;;      Params:         0       0       0       0       0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0
  1827 ;;      Totals:         0       0       0       0       0       0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; Hardware stack levels required when called: 4
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838     015B                     _toggle_led:	
  1839                           ;psect for function _toggle_led
  1840                           
  1841     015B                     l1004:	
  1842                           ;incstack = 0
  1843                           ; Regs used in _toggle_led: [wreg+status,2+status,0]
  1844                           
  1845                           
  1846                           ;main.c: 80:     led_state = ~led_state;
  1847     015B  037B               	decf	_led_state,w
  1848     015C  1D03               	btfss	3,2
  1849     015D  295F               	goto	u91
  1850     015E  2961               	goto	u90
  1851     015F                     u91:
  1852     015F  3001               	movlw	1
  1853     0160  2962               	goto	u100
  1854     0161                     u90:
  1855     0161  3000               	movlw	0
  1856     0162                     u100:
  1857     0162  00FB               	movwf	_led_state
  1858     0163                     l1006:
  1859                           
  1860                           ;main.c: 81:     LATAbits.LATA2 = led_state;
  1861     0163  0C7B               	rrf	_led_state,w
  1862     0164  0140               	movlb	0	; select bank0
  1863     0165  1C03               	skipc
  1864     0166  1118               	bcf	24,2	;volatile
  1865     0167  1803               	skipnc
  1866     0168  1518               	bsf	24,2	;volatile
  1867     0169                     l294:
  1868     0169  0008               	return
  1869     016A                     __end_of_toggle_led:
  1870                           
  1871                           	psect	text2
  1872     014B                     __ptext2:	
  1873 ;; *************** function _spi_send_data *****************
  1874 ;; Defined at:
  1875 ;;		line 84 in file "main.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  data            1    wreg     unsigned char 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  data            1   10[COMMON] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1889 ;;      Params:         0       0       0       0       0       0       0       0
  1890 ;;      Locals:         1       0       0       0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0
  1892 ;;      Totals:         1       0       0       0       0       0       0       0
  1893 ;;Total ram usage:        1 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; Hardware stack levels required when called: 6
  1896 ;; This function calls:
  1897 ;;		_SPI1_ByteWrite
  1898 ;;		_SPI1_Open
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904     014B                     _spi_send_data:	
  1905                           ;psect for function _spi_send_data
  1906                           
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _spi_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1910                           ;spi_send_data@data stored from wreg
  1911     014B  00FA               	movwf	spi_send_data@data
  1912     014C                     l1228:
  1913                           
  1914                           ;main.c: 85:     if (SPI1_Open(0)) {
  1915     014C  01F6               	clrf	SPI1_Open@spiConfigIndex
  1916     014D  3180  2038  3181   	fcall	_SPI1_Open
  1917     0150  3A00               	xorlw	0
  1918     0151  1903               	skipnz
  1919     0152  2954               	goto	u371
  1920     0153  2955               	goto	u370
  1921     0154                     u371:
  1922     0154  295A               	goto	l298
  1923     0155                     u370:
  1924     0155                     l1230:
  1925                           
  1926                           ;main.c: 86:         SPI1_ByteWrite(data);
  1927     0155  087A               	movf	spi_send_data@data,w
  1928     0156  00F0               	movwf	SPI1_ByteWrite@byteData
  1929     0157  3181  21C5  3181   	fcall	_SPI1_ByteWrite
  1930     015A                     l298:
  1931     015A  0008               	return
  1932     015B                     __end_of_spi_send_data:
  1933                           
  1934                           	psect	text3
  1935     0038                     __ptext3:	
  1936 ;; *************** function _SPI1_Open *****************
  1937 ;; Defined at:
  1938 ;;		line 81 in file "mcc_generated_files/spi/src/mssp1.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  spiConfigInd    1    6[COMMON] unsigned char 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  returnValue     1    9[COMMON] _Bool 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      _Bool 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1952 ;;      Params:         1       0       0       0       0       0       0       0
  1953 ;;      Locals:         1       0       0       0       0       0       0       0
  1954 ;;      Temps:          2       0       0       0       0       0       0       0
  1955 ;;      Totals:         4       0       0       0       0       0       0       0
  1956 ;;Total ram usage:        4 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 5
  1959 ;; This function calls:
  1960 ;;		___wmul
  1961 ;; This function is called by:
  1962 ;;		_spi_send_data
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966     0038                     _SPI1_Open:	
  1967                           ;psect for function _SPI1_Open
  1968                           
  1969     0038                     l1188:	
  1970                           ;incstack = 0
  1971                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1972                           
  1973     0038                     l1190:
  1974                           
  1975                           ;mcc_generated_files/spi/src/mssp1.c: 84:     if (SSP1CON1bits.SSPEN == 0)
  1976     0038  0143               	movlb	3	; select bank3
  1977     0039  1A90               	btfsc	16,5	;volatile
  1978     003A  283C               	goto	u341
  1979     003B  283D               	goto	u340
  1980     003C                     u341:
  1981     003C  28A1               	goto	l1198
  1982     003D                     u340:
  1983     003D                     l1192:
  1984                           
  1985                           ;mcc_generated_files/spi/src/mssp1.c: 85:     {;mcc_generated_files/spi/src/mssp1.c: 86:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
  1986     003D  0876               	movf	SPI1_Open@spiConfigIndex,w
  1987     003E  00F7               	movwf	??_SPI1_Open
  1988     003F  01F8               	clrf	??_SPI1_Open+1
  1989     0040  0877               	movf	??_SPI1_Open,w
  1990     0041  00F0               	movwf	___wmul@multiplier
  1991     0042  0878               	movf	??_SPI1_Open+1,w
  1992     0043  00F1               	movwf	___wmul@multiplier+1
  1993     0044  3005               	movlw	5
  1994     0045  00F2               	movwf	___wmul@multiplicand
  1995     0046  3000               	movlw	0
  1996     0047  00F3               	movwf	___wmul@multiplicand+1
  1997     0048  3180  20E1  3180   	fcall	___wmul
  1998     004B  30A0               	movlw	low _spi1_configuration
  1999     004C  0770               	addwf	?___wmul,w
  2000     004D  0084               	movwf	4
  2001     004E  3001               	movlw	high _spi1_configuration
  2002     004F  3D71               	addwfc	?___wmul+1,w
  2003     0050  3880               	iorlw	128
  2004     0051  0085               	movwf	5
  2005     0052  0800               	movf	0,w	;code access
  2006     0053  0143               	movlb	3	; select bank3
  2007     0054  008F               	movwf	15	;volatile
  2008                           
  2009                           ;mcc_generated_files/spi/src/mssp1.c: 87:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
  2010     0055  0876               	movf	SPI1_Open@spiConfigIndex,w
  2011     0056  00F7               	movwf	??_SPI1_Open
  2012     0057  01F8               	clrf	??_SPI1_Open+1
  2013     0058  0877               	movf	??_SPI1_Open,w
  2014     0059  00F0               	movwf	___wmul@multiplier
  2015     005A  0878               	movf	??_SPI1_Open+1,w
  2016     005B  00F1               	movwf	___wmul@multiplier+1
  2017     005C  3005               	movlw	5
  2018     005D  00F2               	movwf	___wmul@multiplicand
  2019     005E  3000               	movlw	0
  2020     005F  00F3               	movwf	___wmul@multiplicand+1
  2021     0060  3180  20E1  3180   	fcall	___wmul
  2022     0063  30A1               	movlw	low (_spi1_configuration+1)
  2023     0064  0770               	addwf	?___wmul,w
  2024     0065  0084               	movwf	4
  2025     0066  3001               	movlw	high (_spi1_configuration+1)
  2026     0067  3D71               	addwfc	?___wmul+1,w
  2027     0068  3880               	iorlw	128
  2028     0069  0085               	movwf	5
  2029     006A  0800               	movf	0,w	;code access
  2030     006B  0143               	movlb	3	; select bank3
  2031     006C  0090               	movwf	16	;volatile
  2032                           
  2033                           ;mcc_generated_files/spi/src/mssp1.c: 88:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
  2034     006D  0876               	movf	SPI1_Open@spiConfigIndex,w
  2035     006E  00F7               	movwf	??_SPI1_Open
  2036     006F  01F8               	clrf	??_SPI1_Open+1
  2037     0070  0877               	movf	??_SPI1_Open,w
  2038     0071  00F0               	movwf	___wmul@multiplier
  2039     0072  0878               	movf	??_SPI1_Open+1,w
  2040     0073  00F1               	movwf	___wmul@multiplier+1
  2041     0074  3005               	movlw	5
  2042     0075  00F2               	movwf	___wmul@multiplicand
  2043     0076  3000               	movlw	0
  2044     0077  00F3               	movwf	___wmul@multiplicand+1
  2045     0078  3180  20E1  3180   	fcall	___wmul
  2046     007B  30A2               	movlw	low (_spi1_configuration+2)
  2047     007C  0770               	addwf	?___wmul,w
  2048     007D  0084               	movwf	4
  2049     007E  3001               	movlw	high (_spi1_configuration+2)
  2050     007F  3D71               	addwfc	?___wmul+1,w
  2051     0080  3880               	iorlw	128
  2052     0081  0085               	movwf	5
  2053     0082  0800               	movf	0,w	;code access
  2054     0083  0143               	movlb	3	; select bank3
  2055     0084  0092               	movwf	18	;volatile
  2056                           
  2057                           ;mcc_generated_files/spi/src/mssp1.c: 89:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
  2058     0085  0876               	movf	SPI1_Open@spiConfigIndex,w
  2059     0086  00F7               	movwf	??_SPI1_Open
  2060     0087  01F8               	clrf	??_SPI1_Open+1
  2061     0088  0877               	movf	??_SPI1_Open,w
  2062     0089  00F0               	movwf	___wmul@multiplier
  2063     008A  0878               	movf	??_SPI1_Open+1,w
  2064     008B  00F1               	movwf	___wmul@multiplier+1
  2065     008C  3005               	movlw	5
  2066     008D  00F2               	movwf	___wmul@multiplicand
  2067     008E  3000               	movlw	0
  2068     008F  00F3               	movwf	___wmul@multiplicand+1
  2069     0090  3180  20E1  3180   	fcall	___wmul
  2070     0093  30A3               	movlw	low (_spi1_configuration+3)
  2071     0094  0770               	addwf	?___wmul,w
  2072     0095  0084               	movwf	4
  2073     0096  3001               	movlw	high (_spi1_configuration+3)
  2074     0097  3D71               	addwfc	?___wmul+1,w
  2075     0098  3880               	iorlw	128
  2076     0099  0085               	movwf	5
  2077     009A  0800               	movf	0,w	;code access
  2078     009B  0143               	movlb	3	; select bank3
  2079     009C  008D               	movwf	13	;volatile
  2080     009D                     l1194:
  2081                           
  2082                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON1bits.SSPEN = 1;
  2083     009D  1690               	bsf	16,5	;volatile
  2084     009E                     l1196:
  2085                           
  2086                           ;mcc_generated_files/spi/src/mssp1.c: 93:         returnValue = 1;
  2087     009E  3001               	movlw	1
  2088     009F  00F9               	movwf	SPI1_Open@returnValue
  2089                           
  2090                           ;mcc_generated_files/spi/src/mssp1.c: 94:     }
  2091     00A0  28A2               	goto	l1200
  2092     00A1                     l1198:
  2093                           
  2094                           ;mcc_generated_files/spi/src/mssp1.c: 96:     {;mcc_generated_files/spi/src/mssp1.c: 97:
      +                                   returnValue = 0;
  2095     00A1  01F9               	clrf	SPI1_Open@returnValue
  2096     00A2                     l1200:
  2097                           
  2098                           ;mcc_generated_files/spi/src/mssp1.c: 99:     return returnValue;
  2099     00A2  0879               	movf	SPI1_Open@returnValue,w
  2100     00A3                     l197:
  2101     00A3  0008               	return
  2102     00A4                     __end_of_SPI1_Open:
  2103                           
  2104                           	psect	text4
  2105     00E1                     __ptext4:	
  2106 ;; *************** function ___wmul *****************
  2107 ;; Defined at:
  2108 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  multiplier      2    0[COMMON] unsigned int 
  2111 ;;  multiplicand    2    2[COMMON] unsigned int 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  product         2    4[COMMON] unsigned int 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  2    0[COMMON] unsigned int 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2123 ;;      Params:         4       0       0       0       0       0       0       0
  2124 ;;      Locals:         2       0       0       0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0
  2126 ;;      Totals:         6       0       0       0       0       0       0       0
  2127 ;;Total ram usage:        6 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 4
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_SPI1_Open
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137     00E1                     ___wmul:	
  2138                           ;psect for function ___wmul
  2139                           
  2140     00E1                     l1164:	
  2141                           ;incstack = 0
  2142                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2143                           
  2144     00E1  01F4               	clrf	___wmul@product
  2145     00E2  01F5               	clrf	___wmul@product+1
  2146     00E3                     l1166:
  2147     00E3  1C70               	btfss	___wmul@multiplier,0
  2148     00E4  28E6               	goto	u291
  2149     00E5  28E7               	goto	u290
  2150     00E6                     u291:
  2151     00E6  28EB               	goto	l432
  2152     00E7                     u290:
  2153     00E7                     l1168:
  2154     00E7  0872               	movf	___wmul@multiplicand,w
  2155     00E8  07F4               	addwf	___wmul@product,f
  2156     00E9  0873               	movf	___wmul@multiplicand+1,w
  2157     00EA  3DF5               	addwfc	___wmul@product+1,f
  2158     00EB                     l432:
  2159     00EB  3001               	movlw	1
  2160     00EC                     u305:
  2161     00EC  35F2               	lslf	___wmul@multiplicand,f
  2162     00ED  0DF3               	rlf	___wmul@multiplicand+1,f
  2163     00EE  0B89               	decfsz	9,f
  2164     00EF  28EC               	goto	u305
  2165     00F0                     l1170:
  2166     00F0  3001               	movlw	1
  2167     00F1                     u315:
  2168     00F1  36F1               	lsrf	___wmul@multiplier+1,f
  2169     00F2  0CF0               	rrf	___wmul@multiplier,f
  2170     00F3  0B89               	decfsz	9,f
  2171     00F4  28F1               	goto	u315
  2172     00F5                     l1172:
  2173     00F5  0870               	movf	___wmul@multiplier,w
  2174     00F6  0471               	iorwf	___wmul@multiplier+1,w
  2175     00F7  1D03               	btfss	3,2
  2176     00F8  28FA               	goto	u321
  2177     00F9  28FB               	goto	u320
  2178     00FA                     u321:
  2179     00FA  28E3               	goto	l1166
  2180     00FB                     u320:
  2181     00FB                     l1174:
  2182     00FB  0875               	movf	___wmul@product+1,w
  2183     00FC  00F1               	movwf	?___wmul+1
  2184     00FD  0874               	movf	___wmul@product,w
  2185     00FE  00F0               	movwf	?___wmul
  2186     00FF                     l434:
  2187     00FF  0008               	return
  2188     0100                     __end_of___wmul:
  2189                           
  2190                           	psect	text5
  2191     01C5                     __ptext5:	
  2192 ;; *************** function _SPI1_ByteWrite *****************
  2193 ;; Defined at:
  2194 ;;		line 171 in file "mcc_generated_files/spi/src/mssp1.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  byteData        1    0[COMMON] unsigned char 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;		None
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2208 ;;      Params:         1       0       0       0       0       0       0       0
  2209 ;;      Locals:         0       0       0       0       0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0
  2211 ;;      Totals:         1       0       0       0       0       0       0       0
  2212 ;;Total ram usage:        1 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 4
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_spi_send_data
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222     01C5                     _SPI1_ByteWrite:	
  2223                           ;psect for function _SPI1_ByteWrite
  2224                           
  2225     01C5                     l1204:	
  2226                           ;incstack = 0
  2227                           ; Regs used in _SPI1_ByteWrite: [wreg]
  2228                           
  2229                           
  2230                           ;mcc_generated_files/spi/src/mssp1.c: 171: void SPI1_ByteWrite(uint8_t byteData);mcc_gen
      +                          erated_files/spi/src/mssp1.c: 172: {;mcc_generated_files/spi/src/mssp1.c: 173:     SSP1B
      +                          UF = byteData;
  2231     01C5  0870               	movf	SPI1_ByteWrite@byteData,w
  2232     01C6  0143               	movlb	3	; select bank3
  2233     01C7  008C               	movwf	12	;volatile
  2234     01C8                     l236:
  2235     01C8  0008               	return
  2236     01C9                     __end_of_SPI1_ByteWrite:
  2237                           
  2238                           	psect	text6
  2239     0179                     __ptext6:	
  2240 ;; *************** function _SYSTEM_Initialize *****************
  2241 ;; Defined at:
  2242 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, pclath, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2256 ;;      Params:         0       0       0       0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0
  2259 ;;      Totals:         0       0       0       0       0       0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; Hardware stack levels required when called: 6
  2263 ;; This function calls:
  2264 ;;		_CLOCK_Initialize
  2265 ;;		_INTERRUPT_Initialize
  2266 ;;		_PIN_MANAGER_Initialize
  2267 ;;		_SPI1_Initialize
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273     0179                     _SYSTEM_Initialize:	
  2274                           ;psect for function _SYSTEM_Initialize
  2275                           
  2276     0179                     l1224:	
  2277                           ;incstack = 0
  2278                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2279                           
  2280                           
  2281                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  2282     0179  3181  21B9  3181   	fcall	_CLOCK_Initialize
  2283                           
  2284                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  2285     017C  3180  20A4  3181   	fcall	_PIN_MANAGER_Initialize
  2286                           
  2287                           ;mcc_generated_files/system/src/system.c: 44:     SPI1_Initialize();
  2288     017F  3181  21AA  3181   	fcall	_SPI1_Initialize
  2289     0182                     l1226:
  2290                           
  2291                           ;mcc_generated_files/system/src/system.c: 45:     INTERRUPT_Initialize();
  2292     0182  3181  2186  3181   	fcall	_INTERRUPT_Initialize
  2293     0185                     l142:
  2294     0185  0008               	return
  2295     0186                     __end_of_SYSTEM_Initialize:
  2296                           
  2297                           	psect	text7
  2298     01AA                     __ptext7:	
  2299 ;; *************** function _SPI1_Initialize *****************
  2300 ;; Defined at:
  2301 ;;		line 60 in file "mcc_generated_files/spi/src/mssp1.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		status,2
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2315 ;;      Params:         0       0       0       0       0       0       0       0
  2316 ;;      Locals:         0       0       0       0       0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0       0       0       0
  2318 ;;      Totals:         0       0       0       0       0       0       0       0
  2319 ;;Total ram usage:        0 bytes
  2320 ;; Hardware stack levels used: 1
  2321 ;; Hardware stack levels required when called: 4
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_SYSTEM_Initialize
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329     01AA                     _SPI1_Initialize:	
  2330                           ;psect for function _SPI1_Initialize
  2331                           
  2332     01AA                     l960:	
  2333                           ;incstack = 0
  2334                           ; Regs used in _SPI1_Initialize: [status,2]
  2335                           
  2336                           
  2337                           ;mcc_generated_files/spi/src/mssp1.c: 63:     PIE1bits.SSP1IE = 0;
  2338     01AA  014E               	movlb	14	; select bank14
  2339     01AB  1097               	bcf	23,1	;volatile
  2340                           
  2341                           ;mcc_generated_files/spi/src/mssp1.c: 64:     PIR1bits.SSP1IF = 0;
  2342     01AC  108D               	bcf	13,1	;volatile
  2343     01AD                     l962:
  2344                           
  2345                           ;mcc_generated_files/spi/src/mssp1.c: 66:     SSP1STAT = 0x00;
  2346     01AD  0143               	movlb	3	; select bank3
  2347     01AE  018F               	clrf	15	;volatile
  2348                           
  2349                           ;mcc_generated_files/spi/src/mssp1.c: 67:     SSP1CON1 = 0x00;
  2350     01AF  0190               	clrf	16	;volatile
  2351                           
  2352                           ;mcc_generated_files/spi/src/mssp1.c: 68:     SSP1CON3 = 0x00;
  2353     01B0  0192               	clrf	18	;volatile
  2354                           
  2355                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1ADD = 0x00;
  2356     01B1  018D               	clrf	13	;volatile
  2357     01B2                     l189:
  2358     01B2  0008               	return
  2359     01B3                     __end_of_SPI1_Initialize:
  2360                           
  2361                           	psect	text8
  2362     00A4                     __ptext8:	
  2363 ;; *************** function _PIN_MANAGER_Initialize *****************
  2364 ;; Defined at:
  2365 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		status,2
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2379 ;;      Params:         0       0       0       0       0       0       0       0
  2380 ;;      Locals:         0       0       0       0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0
  2382 ;;      Totals:         0       0       0       0       0       0       0       0
  2383 ;;Total ram usage:        0 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 4
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_SYSTEM_Initialize
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393     00A4                     _PIN_MANAGER_Initialize:	
  2394                           ;psect for function _PIN_MANAGER_Initialize
  2395                           
  2396     00A4                     l918:	
  2397                           ;incstack = 0
  2398                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2399                           
  2400                           
  2401                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  2402     00A4  0140               	movlb	0	; select bank0
  2403     00A5  0198               	clrf	24	;volatile
  2404                           
  2405                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  2406     00A6  0199               	clrf	25	;volatile
  2407                           
  2408                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  2409     00A7  019A               	clrf	26	;volatile
  2410     00A8                     l920:
  2411                           
  2412                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3B;
  2413     00A8  303B               	movlw	59
  2414     00A9  0092               	movwf	18	;volatile
  2415     00AA                     l922:
  2416                           
  2417                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x70;
  2418     00AA  3070               	movlw	112
  2419     00AB  0093               	movwf	19	;volatile
  2420     00AC                     l924:
  2421                           
  2422                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xFF;
  2423     00AC  30FF               	movlw	255
  2424     00AD  0094               	movwf	20	;volatile
  2425     00AE                     l926:
  2426                           
  2427                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x33;
  2428     00AE  3033               	movlw	51
  2429     00AF  017E               	movlb	62	; select bank62
  2430     00B0  00B8               	movwf	56	;volatile
  2431     00B1                     l928:
  2432                           
  2433                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x20;
  2434     00B1  3020               	movlw	32
  2435     00B2  00C3               	movwf	67	;volatile
  2436     00B3                     l930:
  2437                           
  2438                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xBB;
  2439     00B3  30BB               	movlw	187
  2440     00B4  00CE               	movwf	78	;volatile
  2441                           
  2442                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
  2443     00B5  01B9               	clrf	57	;volatile
  2444                           
  2445                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
  2446     00B6  01C4               	clrf	68	;volatile
  2447                           
  2448                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
  2449     00B7  01CF               	clrf	79	;volatile
  2450                           
  2451                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
  2452     00B8  01BA               	clrf	58	;volatile
  2453                           
  2454                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
  2455     00B9  01C5               	clrf	69	;volatile
  2456                           
  2457                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
  2458     00BA  01D0               	clrf	80	;volatile
  2459     00BB                     l932:
  2460                           
  2461                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
  2462     00BB  3037               	movlw	55
  2463     00BC  00BB               	movwf	59	;volatile
  2464     00BD                     l934:
  2465                           
  2466                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
  2467     00BD  30F0               	movlw	240
  2468     00BE  00C6               	movwf	70	;volatile
  2469     00BF                     l936:
  2470                           
  2471                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
  2472     00BF  30FF               	movlw	255
  2473     00C0  00D1               	movwf	81	;volatile
  2474     00C1                     l938:
  2475                           
  2476                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
  2477     00C1  303F               	movlw	63
  2478     00C2  00BC               	movwf	60	;volatile
  2479     00C3                     l940:
  2480                           
  2481                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
  2482     00C3  30F0               	movlw	240
  2483     00C4  00C7               	movwf	71	;volatile
  2484     00C5                     l942:
  2485                           
  2486                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
  2487     00C5  30FF               	movlw	255
  2488     00C6  00D2               	movwf	82	;volatile
  2489     00C7                     l944:
  2490                           
  2491                           ;mcc_generated_files/system/src/pins.c: 91:     INTPPS = 0x12;
  2492     00C7  3012               	movlw	18
  2493     00C8  017D               	movlb	61	; select bank61
  2494     00C9  0090               	movwf	16	;volatile
  2495     00CA                     l946:
  2496                           
  2497                           ;mcc_generated_files/system/src/pins.c: 92:     SSP1DATPPS = 0xE;
  2498     00CA  300E               	movlw	14
  2499     00CB  00C6               	movwf	70	;volatile
  2500     00CC                     l948:
  2501                           
  2502                           ;mcc_generated_files/system/src/pins.c: 93:     SSP1SSPPS = 0x16;
  2503     00CC  3016               	movlw	22
  2504     00CD  00C7               	movwf	71	;volatile
  2505     00CE                     l950:
  2506                           
  2507                           ;mcc_generated_files/system/src/pins.c: 94:     RB7PPS = 0x08;
  2508     00CE  3008               	movlw	8
  2509     00CF  017E               	movlb	62	; select bank62
  2510     00D0  009F               	movwf	31	;volatile
  2511     00D1                     l952:
  2512                           
  2513                           ;mcc_generated_files/system/src/pins.c: 95:     SSP1CLKPPS = 0xC;
  2514     00D1  300C               	movlw	12
  2515     00D2  017D               	movlb	61	; select bank61
  2516     00D3  00C5               	movwf	69	;volatile
  2517     00D4                     l954:
  2518                           
  2519                           ;mcc_generated_files/system/src/pins.c: 96:     RB4PPS = 0x07;
  2520     00D4  3007               	movlw	7
  2521     00D5  017E               	movlb	62	; select bank62
  2522     00D6  009C               	movwf	28	;volatile
  2523                           
  2524                           ;mcc_generated_files/system/src/pins.c: 105:     IOCAP = 0x0;
  2525     00D7  01BD               	clrf	61	;volatile
  2526                           
  2527                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAN = 0x0;
  2528     00D8  01BE               	clrf	62	;volatile
  2529                           
  2530                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAF = 0x0;
  2531     00D9  01BF               	clrf	63	;volatile
  2532                           
  2533                           ;mcc_generated_files/system/src/pins.c: 108:     IOCBP = 0x0;
  2534     00DA  01C8               	clrf	72	;volatile
  2535                           
  2536                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBN = 0x0;
  2537     00DB  01C9               	clrf	73	;volatile
  2538                           
  2539                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBF = 0x0;
  2540     00DC  01CA               	clrf	74	;volatile
  2541                           
  2542                           ;mcc_generated_files/system/src/pins.c: 111:     IOCCP = 0x0;
  2543     00DD  01D3               	clrf	83	;volatile
  2544                           
  2545                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCN = 0x0;
  2546     00DE  01D4               	clrf	84	;volatile
  2547                           
  2548                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCF = 0x0;
  2549     00DF  01D5               	clrf	85	;volatile
  2550     00E0                     l126:
  2551     00E0  0008               	return
  2552     00E1                     __end_of_PIN_MANAGER_Initialize:
  2553                           
  2554                           	psect	text9
  2555     0186                     __ptext9:	
  2556 ;; *************** function _INTERRUPT_Initialize *****************
  2557 ;; Defined at:
  2558 ;;		line 41 in file "mcc_generated_files/system/src/interrupt.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2572 ;;      Params:         0       0       0       0       0       0       0       0
  2573 ;;      Locals:         0       0       0       0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0
  2575 ;;      Totals:         0       0       0       0       0       0       0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 5
  2579 ;; This function calls:
  2580 ;;		_INT_SetInterruptHandler
  2581 ;; This function is called by:
  2582 ;;		_SYSTEM_Initialize
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586     0186                     _INTERRUPT_Initialize:	
  2587                           ;psect for function _INTERRUPT_Initialize
  2588                           
  2589     0186                     l1178:	
  2590                           ;incstack = 0
  2591                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2592                           
  2593                           
  2594                           ;mcc_generated_files/system/src/interrupt.c: 45:     (PIR0bits.INTF = 0);
  2595     0186  014E               	movlb	14	; select bank14
  2596     0187  100C               	bcf	12,0	;volatile
  2597                           
  2598                           ;mcc_generated_files/system/src/interrupt.c: 46:     (INTCONbits.INTEDG = 1);
  2599     0188  140B               	bsf	11,0	;volatile
  2600     0189                     l1180:
  2601                           
  2602                           ;mcc_generated_files/system/src/interrupt.c: 48:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  2603     0189  30C9               	movlw	low _INT_DefaultInterruptHandler
  2604     018A  00F0               	movwf	INT_SetInterruptHandler@InterruptHandler
  2605     018B  3001               	movlw	high _INT_DefaultInterruptHandler
  2606     018C  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2607     018D  3181  21B3  3181   	fcall	_INT_SetInterruptHandler
  2608     0190                     l1182:
  2609                           
  2610                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIE0bits.INTE = 1);
  2611     0190  014E               	movlb	14	; select bank14
  2612     0191  1416               	bsf	22,0	;volatile
  2613     0192                     l27:
  2614     0192  0008               	return
  2615     0193                     __end_of_INTERRUPT_Initialize:
  2616                           
  2617                           	psect	text10
  2618     01B3                     __ptext10:	
  2619 ;; *************** function _INT_SetInterruptHandler *****************
  2620 ;; Defined at:
  2621 ;;		line 95 in file "mcc_generated_files/system/src/interrupt.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2624 ;;		 -> INT_DefaultInterruptHandler(1), 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2636 ;;      Params:         2       0       0       0       0       0       0       0
  2637 ;;      Locals:         0       0       0       0       0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0       0       0
  2639 ;;      Totals:         2       0       0       0       0       0       0       0
  2640 ;;Total ram usage:        2 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 4
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_INTERRUPT_Initialize
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650     01B3                     _INT_SetInterruptHandler:	
  2651                           ;psect for function _INT_SetInterruptHandler
  2652                           
  2653     01B3                     l1160:	
  2654                           ;incstack = 0
  2655                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  2656                           
  2657                           
  2658                           ;mcc_generated_files/system/src/interrupt.c: 96:     INT_InterruptHandler = InterruptHan
      +                          dler;
  2659     01B3  0871               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  2660     01B4  0140               	movlb	0	; select bank0
  2661     01B5  00A1               	movwf	_INT_InterruptHandler+1
  2662     01B6  0870               	movf	INT_SetInterruptHandler@InterruptHandler,w
  2663     01B7  00A0               	movwf	_INT_InterruptHandler
  2664     01B8                     l48:
  2665     01B8  0008               	return
  2666     01B9                     __end_of_INT_SetInterruptHandler:
  2667                           
  2668                           	psect	text11
  2669     01B9                     __ptext11:	
  2670 ;; *************** function _CLOCK_Initialize *****************
  2671 ;; Defined at:
  2672 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;		None
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		status,2
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2686 ;;      Params:         0       0       0       0       0       0       0       0
  2687 ;;      Locals:         0       0       0       0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0       0
  2689 ;;      Totals:         0       0       0       0       0       0       0       0
  2690 ;;Total ram usage:        0 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 4
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_SYSTEM_Initialize
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700     01B9                     _CLOCK_Initialize:	
  2701                           ;psect for function _CLOCK_Initialize
  2702                           
  2703     01B9                     l956:	
  2704                           ;incstack = 0
  2705                           ; Regs used in _CLOCK_Initialize: [status,2]
  2706                           
  2707                           
  2708                           ;mcc_generated_files/system/src/clock.c: 41:     OSCEN = (0 << 0x6)
  2709     01B9  0151               	movlb	17	; select bank17
  2710     01BA  0191               	clrf	17	;volatile
  2711     01BB                     l958:
  2712                           
  2713                           ;mcc_generated_files/system/src/clock.c: 45:     OSCFRQ = (5 << 0x0);
  2714     01BB  3005               	movlw	5
  2715     01BC  0093               	movwf	19	;volatile
  2716                           
  2717                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  2718     01BD  0192               	clrf	18	;volatile
  2719     01BE                     l259:
  2720     01BE  0008               	return
  2721     01BF                     __end_of_CLOCK_Initialize:
  2722                           
  2723                           	psect	intentry
  2724     0004                     __pintentry:	
  2725 ;; *************** function _INTERRUPT_InterruptManager *****************
  2726 ;; Defined at:
  2727 ;;		line 60 in file "mcc_generated_files/system/src/interrupt.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2741 ;;      Params:         0       0       0       0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0
  2744 ;;      Totals:         0       0       0       0       0       0       0       0
  2745 ;;Total ram usage:        0 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; Hardware stack levels required when called: 3
  2748 ;; This function calls:
  2749 ;;		_INT_ISR
  2750 ;;		_TMR0_ISR
  2751 ;; This function is called by:
  2752 ;;		Interrupt level 1
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756     0004                     _INTERRUPT_InterruptManager:
  2757                           
  2758                           ;incstack = 0
  2759     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2760                           
  2761                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2762     0005  3180               	pagesel	$
  2763     0006                     i1l1232:
  2764                           
  2765                           ;mcc_generated_files/system/src/interrupt.c: 62:     if (PIE0bits.INTE == 1 && PIR0bits.
      +                          INTF == 1) {
  2766     0006  014E               	movlb	14	; select bank14
  2767     0007  1C16               	btfss	22,0	;volatile
  2768     0008  280A               	goto	u38_21
  2769     0009  280B               	goto	u38_20
  2770     000A                     u38_21:
  2771     000A  2813               	goto	i1l32
  2772     000B                     u38_20:
  2773     000B                     i1l1234:
  2774     000B  1C0C               	btfss	12,0	;volatile
  2775     000C  280E               	goto	u39_21
  2776     000D  280F               	goto	u39_20
  2777     000E                     u39_21:
  2778     000E  2813               	goto	i1l32
  2779     000F                     u39_20:
  2780     000F                     i1l1236:
  2781                           
  2782                           ;mcc_generated_files/system/src/interrupt.c: 63:         INT_ISR();
  2783     000F  3181  21BF  3180   	fcall	_INT_ISR
  2784                           
  2785                           ;mcc_generated_files/system/src/interrupt.c: 64:     } else if (INTCONbits.PEIE == 1) {
  2786     0012  2823               	goto	i1l38
  2787     0013                     i1l32:
  2788     0013  1F0B               	btfss	11,6	;volatile
  2789     0014  2816               	goto	u40_21
  2790     0015  2817               	goto	u40_20
  2791     0016                     u40_21:
  2792     0016  2823               	goto	i1l38
  2793     0017                     u40_20:
  2794     0017                     i1l1238:
  2795                           
  2796                           ;mcc_generated_files/system/src/interrupt.c: 65:         if (PIE0bits.TMR0IE == 1 && PIR
      +                          0bits.TMR0IF == 1) {
  2797     0017  1E96               	btfss	22,5	;volatile
  2798     0018  281A               	goto	u41_21
  2799     0019  281B               	goto	u41_20
  2800     001A                     u41_21:
  2801     001A  2823               	goto	i1l37
  2802     001B                     u41_20:
  2803     001B                     i1l1240:
  2804     001B  1E8C               	btfss	12,5	;volatile
  2805     001C  281E               	goto	u42_21
  2806     001D  281F               	goto	u42_20
  2807     001E                     u42_21:
  2808     001E  2823               	goto	i1l37
  2809     001F                     u42_20:
  2810     001F                     i1l1242:
  2811                           
  2812                           ;mcc_generated_files/system/src/interrupt.c: 66:             TMR0_ISR();
  2813     001F  3181  216A  3180   	fcall	_TMR0_ISR
  2814                           
  2815                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
  2816     0022  2823               	goto	i1l38
  2817     0023                     i1l37:	
  2818                           ;mcc_generated_files/system/src/interrupt.c: 74:     }
  2819                           
  2820     0023                     i1l38:
  2821     0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2822     0024  0009               	retfie
  2823     0025                     __end_of_INTERRUPT_InterruptManager:
  2824                           
  2825                           	psect	text13
  2826     016A                     __ptext13:	
  2827 ;; *************** function _TMR0_ISR *****************
  2828 ;; Defined at:
  2829 ;;		line 126 in file "mcc_generated_files/timer/src/tmr0.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2843 ;;      Params:         0       0       0       0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; Hardware stack levels required when called: 1
  2850 ;; This function calls:
  2851 ;;		NULL
  2852 ;;		_TMR0_DefaultCallback
  2853 ;; This function is called by:
  2854 ;;		_INTERRUPT_InterruptManager
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858     016A                     _TMR0_ISR:	
  2859                           ;psect for function _TMR0_ISR
  2860                           
  2861     016A                     i1l1218:	
  2862                           ;incstack = 0
  2863                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2864                           
  2865                           
  2866                           ;mcc_generated_files/timer/src/tmr0.c: 128:     if(((void*)0) != TMR0_PeriodMatchCallbac
      +                          k)
  2867     016A  0140               	movlb	0	; select bank0
  2868     016B  0822               	movf	_TMR0_PeriodMatchCallback,w
  2869     016C  0423               	iorwf	_TMR0_PeriodMatchCallback+1,w
  2870     016D  1903               	btfsc	3,2
  2871     016E  2970               	goto	u36_21
  2872     016F  2971               	goto	u36_20
  2873     0170                     u36_21:
  2874     0170  2976               	goto	i1l1222
  2875     0171                     u36_20:
  2876     0171                     i1l1220:
  2877                           
  2878                           ;mcc_generated_files/timer/src/tmr0.c: 129:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          130:         TMR0_PeriodMatchCallback();
  2879     0171  0823               	movf	_TMR0_PeriodMatchCallback+1,w
  2880     0172  008A               	movwf	10
  2881     0173  0822               	movf	_TMR0_PeriodMatchCallback,w
  2882     0174  000A               	callw
  2883     0175  3181               	pagesel	$
  2884     0176                     i1l1222:
  2885                           
  2886                           ;mcc_generated_files/timer/src/tmr0.c: 132:     PIR0bits.TMR0IF = 0;
  2887     0176  014E               	movlb	14	; select bank14
  2888     0177  128C               	bcf	12,5	;volatile
  2889     0178                     i1l357:
  2890     0178  0008               	return
  2891     0179                     __end_of_TMR0_ISR:
  2892                           
  2893                           	psect	text14
  2894     0139                     __ptext14:	
  2895 ;; *************** function _TMR0_DefaultCallback *****************
  2896 ;; Defined at:
  2897 ;;		line 140 in file "mcc_generated_files/timer/src/tmr0.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2911 ;;      Params:         0       0       0       0       0       0       0       0
  2912 ;;      Locals:         0       0       0       0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0
  2914 ;;      Totals:         0       0       0       0       0       0       0       0
  2915 ;;Total ram usage:        0 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_TMR0_Initialize
  2921 ;;		_TMR0_ISR
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925     0139                     _TMR0_DefaultCallback:	
  2926                           ;psect for function _TMR0_DefaultCallback
  2927                           
  2928     0139                     i1l1206:	
  2929                           ;incstack = 0
  2930                           ; Regs used in _TMR0_DefaultCallback: [wreg+status,2+status,0]
  2931                           
  2932                           
  2933                           ;mcc_generated_files/timer/src/tmr0.c: 143:         divider--;
  2934     0139  3001               	movlw	1
  2935     013A  0140               	movlb	0	; select bank0
  2936     013B  02A4               	subwf	_divider,f
  2937     013C  3000               	movlw	0
  2938     013D  3BA5               	subwfb	_divider+1,f
  2939     013E                     i1l1208:
  2940                           
  2941                           ;mcc_generated_files/timer/src/tmr0.c: 144:     if (divider == 0)
  2942     013E  0824               	movf	_divider,w
  2943     013F  0425               	iorwf	_divider+1,w
  2944     0140  1D03               	btfss	3,2
  2945     0141  2943               	goto	u35_21
  2946     0142  2944               	goto	u35_20
  2947     0143                     u35_21:
  2948     0143  294A               	goto	i1l364
  2949     0144                     u35_20:
  2950     0144                     i1l1210:
  2951                           
  2952                           ;mcc_generated_files/timer/src/tmr0.c: 145:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          146:         timerOverflow = 1;
  2953     0144  3001               	movlw	1
  2954     0145  00FC               	movwf	_timerOverflow
  2955     0146                     i1l1212:
  2956                           
  2957                           ;mcc_generated_files/timer/src/tmr0.c: 147:         divider = 0xFFFF;
  2958     0146  30FF               	movlw	255
  2959     0147  00A4               	movwf	_divider
  2960     0148  30FF               	movlw	255
  2961     0149  00A5               	movwf	_divider+1
  2962     014A                     i1l364:
  2963     014A  0008               	return
  2964     014B                     __end_of_TMR0_DefaultCallback:
  2965                           
  2966                           	psect	text15
  2967     01BF                     __ptext15:	
  2968 ;; *************** function _INT_ISR *****************
  2969 ;; Defined at:
  2970 ;;		line 77 in file "mcc_generated_files/system/src/interrupt.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0, pclath, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2984 ;;      Params:         0       0       0       0       0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0
  2987 ;;      Totals:         0       0       0       0       0       0       0       0
  2988 ;;Total ram usage:        0 bytes
  2989 ;; Hardware stack levels used: 1
  2990 ;; Hardware stack levels required when called: 2
  2991 ;; This function calls:
  2992 ;;		_INT_CallBack
  2993 ;; This function is called by:
  2994 ;;		_INTERRUPT_InterruptManager
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998     01BF                     _INT_ISR:	
  2999                           ;psect for function _INT_ISR
  3000                           
  3001     01BF                     i1l1214:	
  3002                           ;incstack = 0
  3003                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  3004                           
  3005                           
  3006                           ;mcc_generated_files/system/src/interrupt.c: 79:     (PIR0bits.INTF = 0);
  3007     01BF  014E               	movlb	14	; select bank14
  3008     01C0  100C               	bcf	12,0	;volatile
  3009     01C1                     i1l1216:
  3010                           
  3011                           ;mcc_generated_files/system/src/interrupt.c: 82:     INT_CallBack();
  3012     01C1  3181  2193  3181   	fcall	_INT_CallBack
  3013     01C4                     i1l41:
  3014     01C4  0008               	return
  3015     01C5                     __end_of_INT_ISR:
  3016                           
  3017                           	psect	text16
  3018     0193                     __ptext16:	
  3019 ;; *************** function _INT_CallBack *****************
  3020 ;; Defined at:
  3021 ;;		line 86 in file "mcc_generated_files/system/src/interrupt.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;		None
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3035 ;;      Params:         0       0       0       0       0       0       0       0
  3036 ;;      Locals:         0       0       0       0       0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0       0       0       0
  3038 ;;      Totals:         0       0       0       0       0       0       0       0
  3039 ;;Total ram usage:        0 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 1
  3042 ;; This function calls:
  3043 ;;		NULL
  3044 ;;		_INT_DefaultInterruptHandler
  3045 ;; This function is called by:
  3046 ;;		_INT_ISR
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050     0193                     _INT_CallBack:	
  3051                           ;psect for function _INT_CallBack
  3052                           
  3053     0193                     i1l1184:	
  3054                           ;incstack = 0
  3055                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3056                           
  3057                           
  3058                           ;mcc_generated_files/system/src/interrupt.c: 89:     if(INT_InterruptHandler)
  3059     0193  0140               	movlb	0	; select bank0
  3060     0194  0820               	movf	_INT_InterruptHandler,w
  3061     0195  0421               	iorwf	_INT_InterruptHandler+1,w
  3062     0196  1903               	btfsc	3,2
  3063     0197  2999               	goto	u33_21
  3064     0198  299A               	goto	u33_20
  3065     0199                     u33_21:
  3066     0199  299F               	goto	i1l45
  3067     019A                     u33_20:
  3068     019A                     i1l1186:
  3069                           
  3070                           ;mcc_generated_files/system/src/interrupt.c: 90:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 91:         INT_InterruptHandler();
  3071     019A  0821               	movf	_INT_InterruptHandler+1,w
  3072     019B  008A               	movwf	10
  3073     019C  0820               	movf	_INT_InterruptHandler,w
  3074     019D  000A               	callw
  3075     019E  3181               	pagesel	$
  3076     019F                     i1l45:
  3077     019F  0008               	return
  3078     01A0                     __end_of_INT_CallBack:
  3079                           
  3080                           	psect	text17
  3081     01C9                     __ptext17:	
  3082 ;; *************** function _INT_DefaultInterruptHandler *****************
  3083 ;; Defined at:
  3084 ;;		line 99 in file "mcc_generated_files/system/src/interrupt.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		None
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3098 ;;      Params:         0       0       0       0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0       0
  3101 ;;      Totals:         0       0       0       0       0       0       0       0
  3102 ;;Total ram usage:        0 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_INTERRUPT_Initialize
  3108 ;;		_INT_CallBack
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112     01C9                     _INT_DefaultInterruptHandler:	
  3113                           ;psect for function _INT_DefaultInterruptHandler
  3114                           
  3115     01C9                     i1l1162:	
  3116                           ;incstack = 0
  3117                           ; Regs used in _INT_DefaultInterruptHandler: []
  3118                           
  3119                           
  3120                           ;mcc_generated_files/system/src/interrupt.c: 102:         pushed = 1;
  3121     01C9  3001               	movlw	1
  3122     01CA  00FD               	movwf	_pushed
  3123     01CB                     i1l51:
  3124     01CB  0008               	return
  3125     01CC                     __end_of_INT_DefaultInterruptHandler:
  3126     0001                     ___latbits      equ	1
  3127     007E                     btemp           set	126	;btemp
  3128     007E                     int$flags       set	126
  3129     007E                     wtemp0          set	126
  3130                           
  3131                           	psect	config
  3132                           
  3133                           ;Config register CONFIG1 @ 0x8007
  3134                           ;	External Oscillator Mode Selection bits
  3135                           ;	FEXTOSC = ECH, EC (external clock) 16 MHz and above
  3136                           ;	Power-up Default Value for COSC bits
  3137                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  3138                           ;	Clock Out Enable bit
  3139                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  3140                           ;	VDD Range Analog Calibration Selection bit
  3141                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  3142     8007                     	org	32775
  3143     8007  3FCF               	dw	16335
  3144                           
  3145                           ;Config register CONFIG2 @ 0x8008
  3146                           ;	Master Clear Enable bit
  3147                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  3148                           ;	Power-up Timer Selection bits
  3149                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3150                           ;	WDT Operating Mode bits
  3151                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  3152                           ;	Brown-out Reset Enable bits
  3153                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  3154                           ;	Brown-out Reset Voltage Selection bit
  3155                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  3156                           ;	PPSLOCKED One-Way Set Enable bit
  3157                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  3158                           ;	Stack Overflow/Underflow Reset Enable bit
  3159                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  3160     8008                     	org	32776
  3161     8008  3FE7               	dw	16359
  3162                           
  3163                           ;Config register CONFIG4 @ 0x800A
  3164                           ;	Boot Block Size Selection bits
  3165                           ;	BBSIZE = BB512, 512 words boot block size
  3166                           ;	Boot Block Enable bit
  3167                           ;	BBEN = OFF, Boot Block is disabled
  3168                           ;	SAF Enable bit
  3169                           ;	SAFEN = OFF, SAF is disabled
  3170                           ;	Application Block Write Protection bit
  3171                           ;	WRTAPP = OFF, Application Block is not write-protected
  3172                           ;	Boot Block Write Protection bit
  3173                           ;	WRTB = OFF, Boot Block is not write-protected
  3174                           ;	Configuration Registers Write Protection bit
  3175                           ;	WRTC = OFF, Configuration Registers are not write-protected
  3176                           ;	Storage Area Flash (SAF) Write Protection bit
  3177                           ;	WRTSAF = OFF, SAF is not write-protected
  3178                           ;	Low Voltage Programming Enable bit
  3179                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  3180     800A                     	org	32778
  3181     800A  3FFF               	dw	16383
  3182                           
  3183                           ;Config register CONFIG5 @ 0x800B
  3184                           ;	User Program Flash Memory Code Protection bit
  3185                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  3186     800B                     	org	32779
  3187     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    38
    Data        2
    BSS         5
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      0       6
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    S187$4$0	PTR void  size(2) Largest target is 0

    S187$5$0	PTR void  size(2) Largest target is 0

    S187$6$0	PTR void  size(2) Largest target is 0

    S187SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S187SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S187SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S187SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S187SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S187SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S187SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S187SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S187SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S187SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S187SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S187SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S187SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S187SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SPI1_Client$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_Client$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_Client$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_Client$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_Client$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_Client$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_Client$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_Client$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_Client$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_Client$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_Client$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_Client$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_Client$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SPI1_Client$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    TMR0_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultCallback(), NULL(), 


Critical Paths under _main in COMMON

    _main->_spi_send_data
    _spi_send_data->_SPI1_Open
    _SPI1_Open->___wmul
    _INTERRUPT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     289
                  _SYSTEM_Initialize
                      _spi_send_data
                         _toggle_led
 ---------------------------------------------------------------------------------
 (1) _toggle_led                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_send_data                                        1     1      0     266
                                             10 COMMON     1     1      0
                     _SPI1_ByteWrite
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     214
                                              6 COMMON     4     3      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     100
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI1_ByteWrite                                       1     0      1      23
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                            _INT_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
               _TMR0_DefaultCallback *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                                NULL *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _spi_send_data
     _SPI1_ByteWrite
     _SPI1_Open
       ___wmul
   _toggle_led

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       NULL(Fake) *
       _INT_DefaultInterruptHandler *
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultCallback *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     11      14    100.0%
BANK0               80      0       6      7.5%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      20      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Jan 18 14:09:17 2025

                      _SPI1_ByteExchange 0000                           ?_spi_send_data 0070  
                                     l27 0192                                       l48 01B8  
                                     u90 0161                                       u91 015F  
                    ___wmul@multiplicand 0072                                      l126 00E0  
                                    l142 0185                                      l236 01C8  
                                    l432 00EB                                      l434 00FF  
                                    l259 01BE                                      l189 01B2  
                                    l197 00A3                                      l294 0169  
                                    l298 015A                                      l920 00A8  
                                    l930 00B3                                      l922 00AA  
                                    l940 00C3                                      l932 00BB  
                                    l924 00AC                                      l950 00CE  
                                    l942 00C5                                      l934 00BD  
                                    l926 00AE                                      l918 00A4  
                                    l952 00D1                                      l944 00C7  
                                    l936 00BF                                      l928 00B1  
                                    l960 01AA                                      l954 00D4  
                                    l946 00CA                                      l938 00C1  
                                    l962 01AD                                      l956 01B9  
                                    l948 00CC                                      l958 01BB  
                                    u100 0162                                      u320 00FB  
                                    u321 00FA                                      u305 00EC  
                                    u315 00F1                                      u340 003D  
                                    u341 003C                                      u430 010C  
                                    u431 010B                                      u440 0115  
                                    u441 0114                                      u290 00E7  
                                    u370 0155                                      u291 00E6  
                                    u371 0154                                      wreg 0009  
                                   l1004 015B                                     l1006 0163  
                                   l1200 00A2                                     l1204 01C5  
                                   l1230 0155                                     l1160 01B3  
                                   l1224 0179                                     l1226 0182  
                                   l1170 00F0                                     l1250 0105  
                                   l1180 0189                                     l1172 00F5  
                                   l1164 00E1                                     l1228 014C  
                                   l1260 0110                                     l1252 0106  
                                   l1244 0100                                     l1182 0190  
                                   l1174 00FB                                     l1166 00E3  
                                   l1190 0038                                     l1262 0115  
                                   l1254 0107                                     l1246 0103  
                                   l1168 00E7                                     l1192 003D  
                                   l1264 0119                                     l1256 010C  
                                   l1248 0104                                     l1178 0186  
                                   l1194 009D                                     l1258 010F  
                                   l1196 009E                                     l1188 0038  
                                   l1198 00A1                                     _LATA 0018  
                                   _LATB 0019                          __end_of_INT_ISR 01C5  
                                   _LATC 001A                                     i1l32 0013  
                                   i1l41 01C4                                     i1l51 01CB  
                                   i1l45 019F                                     i1l37 0023  
                                   i1l38 0023                                     _WPUA 1F39  
                                   _WPUB 1F44                                     _WPUC 1F4F  
                                   _main 0100                                     fsr0h 0005  
                                   indf0 0000                                     fsr0l 0004  
                                   btemp 007E      __end_of_INT_DefaultInterruptHandler 01CC  
            _INT_DefaultInterruptHandler 01C9                                     start 0025  
        __end_of_INT_SetInterruptHandler 01B9                                    ?_main 0070  
                                  _IOCAF 1F3F                                    _IOCBF 1F4A  
                                  _IOCCF 1F55                                    _IOCAN 1F3E  
                                  _IOCAP 1F3D                                    _IOCBN 1F49  
                                  _IOCBP 1F48                                    _IOCCN 1F54  
                                  _IOCCP 1F53                                    i1l364 014A  
                                  i1l357 0178                                    _OSCEN 0891  
                                  u40_20 0017                                    u40_21 0016  
                                  u33_20 019A                                    u41_20 001B  
                                  _TMR0H 059D                                    u33_21 0199  
                                  u41_21 001A                                    _TMR0L 059C  
                                  u42_20 001F                                    u42_21 001E  
                                  u35_20 0144                                    u35_21 0143  
                                  u36_20 0171                                    u36_21 0170  
                                  u38_20 000B                                    u38_21 000A  
                                  u39_20 000F                                    u39_21 000E  
                                  _TRISA 0012                                    _TRISB 0013  
                                  _TRISC 0014                         __end_of_TMR0_ISR 0179  
                                  pclath 000A                                    status 0003  
                                  wtemp0 007E                          __initialization 0027  
                        ??_spi_send_data 007A                             __end_of_main 011D  
            ?_INTERRUPT_InterruptManager 0070                                   ??_main 007B  
                              ??_INT_ISR 0070                                   _ANSELA 1F38  
                                 _ANSELB 1F43                                   _ANSELC 1F4E  
                                 _T0CON0 059E                                   _T0CON1 059F  
                                 _RB4PPS 1F1C                                   i1l1210 0144  
                                 i1l1212 0146                                   i1l1220 0171  
                                 i1l1214 01BF                                   i1l1206 0139  
                                 i1l1222 0176                                   i1l1216 01C1  
                                 i1l1208 013E                                   i1l1240 001B  
                                 i1l1232 0006                                   i1l1162 01C9  
                                 i1l1218 016A                                   i1l1242 001F  
                                 i1l1234 000B                                   _RB7PPS 1F1F  
                                 i1l1236 000F                                   i1l1238 0017  
                                 i1l1184 0193                                   _ODCONA 1F3A  
                                 i1l1186 019A                                   _ODCONB 1F45  
                                 _ODCONC 1F50                                   _INLVLA 1F3C  
                                 _INLVLB 1F47                                   _INLVLC 1F52  
                                 _INTPPS 1E90                                   _OSCFRQ 0893  
                      __end_of_SPI1_Open 00A4                                   ___wmul 00E1  
                                 _pushed 007D                        ?_CLOCK_Initialize 0070  
                          ?_INT_CallBack 0070                       ??_CLOCK_Initialize 0070  
INT_SetInterruptHandler@InterruptHandler 0070                           _SPI1_IsRxReady 0000  
                         _SPI1_IsTxReady 0000                        _SYSTEM_Initialize 0179  
                __end_of__initialization 0034                           _SPI1_ByteWrite 01C5  
                     ?_SYSTEM_Initialize 0070                           __pcstackCOMMON 0070  
                           __pidataBANK0 01CC                      ??_SYSTEM_Initialize 0072  
                              ?_TMR0_ISR 0070                        ??_SPI1_Initialize 0070  
                         ??_INT_CallBack 0070                       _spi1_configuration 01A0  
              __end_of_SYSTEM_Initialize 0186                               __pbssBANK0 0022  
                 __end_of_SPI1_ByteWrite 01C9                 _TMR0_PeriodMatchCallback 0022  
                             __pmaintext 0100                                  ?___wmul 0070  
                             ??_TMR0_ISR 0070                               __pintentry 0004  
                                _INT_ISR 01BF                                  _OSCTUNE 0892  
                                _SSP1ADD 018D                                  _SLRCONA 1F3B  
                                _SLRCONB 1F46                                  _SLRCONC 1F51  
                                _SSP1BUF 018C                          ?_SPI1_ByteWrite 0070  
           __end_of_TMR0_DefaultCallback 014B                                  __ptext1 015B  
                                __ptext2 014B                                  __ptext3 0038  
                                __ptext4 00E1                                  __ptext5 01C5  
                                __ptext6 0179                                  __ptext7 01AA  
                                __ptext8 00A4                                  __ptext9 0186  
                                _divider 0024                 ??_PIN_MANAGER_Initialize 0070  
                _INT_SetInterruptHandler 01B3                     end_of_initialization 0034  
                   __end_of_INT_CallBack 01A0                          _SPI1_BufferRead 0000  
                  __end_of_spi_send_data 015B                                _SPI1_Open 0038  
                              _SSP1SSPPS 1EC7                      _SPI1_BufferExchange 0000  
                             _toggle_led 015B                          _SPI1_Initialize 01AA  
           __end_of_INTERRUPT_Initialize 0193                               ?_SPI1_Open 0076  
                         __end_of___wmul 0100                ??_INT_SetInterruptHandler 0072  
                    start_initialization 0027                     _TMR0_DefaultCallback 0139  
           ?_INT_DefaultInterruptHandler 0070                        spi_send_data@data 007A  
                               ??___wmul 0074                              __pdataBANK0 0024  
                          _SPI1_ByteRead 0000                              __pbssCOMMON 007B  
                            ?_toggle_led 0070                                ___latbits 0001  
                               ?_INT_ISR 0070                         ??_SPI1_ByteWrite 0071  
                  ?_TMR0_DefaultCallback 0070                  __end_of_SPI1_Initialize 01B3  
                              __pnvBANK0 0020                   _PIN_MANAGER_Initialize 00A4  
                   SPI1_Open@returnValue 0079            ??_INT_DefaultInterruptHandler 0070  
                            ??_SPI1_Open 0077             ??_INTERRUPT_InterruptManager 0070  
                           _INT_CallBack 0193                                _led_state 007B  
                   _INTERRUPT_Initialize 0186                         _CLOCK_Initialize 01B9  
                         ___wmul@product 0074                                 _LATAbits 0018  
                               _PIE0bits 0716                                 _PIE1bits 0717  
                               _PIR0bits 070C                                 _PIR1bits 070D  
                               _SSP1CON1 0190                                 _SSP1CON3 0192  
                               _TMR0_ISR 016A                                 _SSP1STAT 018F  
                      _SPI1_Deinitialize 0000                        ___wmul@multiplier 0070  
                 ??_TMR0_DefaultCallback 0070                         ?_SPI1_Initialize 0070  
                  ?_INTERRUPT_Initialize 0070                      __end_of_SPI1_Client 0139  
                             _T0CON0bits 059E                                 __ptext10 01B3  
                               __ptext11 01B9                                 __ptext13 016A  
                               __ptext14 0139                                 __ptext15 01BF  
                               __ptext16 0193                                 __ptext17 01C9  
                           _SSP1CON1bits 0190                   SPI1_ByteWrite@byteData 0070  
                          _timerOverflow 007C                                 int$flags 007E  
     __end_of_INTERRUPT_InterruptManager 0025               _INTERRUPT_InterruptManager 0004  
                             _INTCONbits 000B                             ??_toggle_led 0070  
                   _INT_InterruptHandler 0020                              _SPI1_Client 011D  
                 ??_INTERRUPT_Initialize 0072                                 intlevel1 0000  
                ?_PIN_MANAGER_Initialize 0070                       __end_of_toggle_led 016A  
                       _SPI1_BufferWrite 0000                 ?_INT_SetInterruptHandler 0070  
                          _spi_send_data 014B                 __end_of_CLOCK_Initialize 01BF  
                          __pstringtext1 011D                            __pstringtext2 01A0  
                             _SPI1_Close 0000                               _SSP1DATPPS 1EC6  
                             _SSP1CLKPPS 1EC5           __end_of_PIN_MANAGER_Initialize 00E1  
                SPI1_Open@spiConfigIndex 0076               __end_of_spi1_configuration 01AA  
