

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Jan 18 21:30:25 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,space=0,delta=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Generated 25/01/2024 GMT
    37                           ; 
    38                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F15244 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0008                     bsr             equ	8
    71     0005                     fsr0h           equ	5
    72     0004                     fsr0l           equ	4
    73     0007                     fsr1h           equ	7
    74     0006                     fsr1l           equ	6
    75     0000                     indf            equ	0
    76     0000                     indf0           equ	0
    77     0001                     indf1           equ	1
    78     000B                     intcon          equ	11
    79     0002                     pc              equ	2
    80     0002                     pcl             equ	2
    81     000A                     pclath          equ	10
    82     0003                     status          equ	3
    83     0009                     wreg            equ	9
    84     0000                     INDF0           equ	0	;# 
    85     0001                     INDF1           equ	1	;# 
    86     0002                     PCL             equ	2	;# 
    87     0003                     STATUS          equ	3	;# 
    88     0004                     FSR0L           equ	4	;# 
    89     0005                     FSR0H           equ	5	;# 
    90     0006                     FSR1L           equ	6	;# 
    91     0007                     FSR1H           equ	7	;# 
    92     0008                     BSR             equ	8	;# 
    93     0009                     WREG            equ	9	;# 
    94     000A                     PCLATH          equ	10	;# 
    95     000B                     INTCON          equ	11	;# 
    96     000C                     PORTA           equ	12	;# 
    97     000D                     PORTB           equ	13	;# 
    98     000E                     PORTC           equ	14	;# 
    99     0012                     TRISA           equ	18	;# 
   100     0013                     TRISB           equ	19	;# 
   101     0014                     TRISC           equ	20	;# 
   102     0018                     LATA            equ	24	;# 
   103     0019                     LATB            equ	25	;# 
   104     001A                     LATC            equ	26	;# 
   105     009A                     CPCON           equ	154	;# 
   106     009B                     ADRES           equ	155	;# 
   107     009B                     ADRESL          equ	155	;# 
   108     009C                     ADRESH          equ	156	;# 
   109     009D                     ADCON0          equ	157	;# 
   110     009E                     ADCON1          equ	158	;# 
   111     009F                     ADACT           equ	159	;# 
   112     010C                     RB4I2C          equ	268	;# 
   113     010D                     RB6I2C          equ	269	;# 
   114     0119                     RC1REG          equ	281	;# 
   115     011A                     TX1REG          equ	282	;# 
   116     011B                     SP1BRG          equ	283	;# 
   117     011B                     SP1BRGL         equ	283	;# 
   118     011C                     SP1BRGH         equ	284	;# 
   119     011D                     RC1STA          equ	285	;# 
   120     011E                     TX1STA          equ	286	;# 
   121     011F                     BAUD1CON        equ	287	;# 
   122     018C                     SSP1BUF         equ	396	;# 
   123     018D                     SSP1ADD         equ	397	;# 
   124     018E                     SSP1MSK         equ	398	;# 
   125     018F                     SSP1STAT        equ	399	;# 
   126     0190                     SSP1CON1        equ	400	;# 
   127     0191                     SSP1CON2        equ	401	;# 
   128     0192                     SSP1CON3        equ	402	;# 
   129     020C                     TMR1            equ	524	;# 
   130     020C                     TMR1L           equ	524	;# 
   131     020D                     TMR1H           equ	525	;# 
   132     020E                     T1CON           equ	526	;# 
   133     020E                     TMR1CON         equ	526	;# 
   134     020F                     T1GCON          equ	527	;# 
   135     020F                     TMR1GCON        equ	527	;# 
   136     0210                     T1GATE          equ	528	;# 
   137     0210                     TMR1GATE        equ	528	;# 
   138     0211                     T1CLK           equ	529	;# 
   139     0211                     TMR1CLK         equ	529	;# 
   140     0211                     PR1             equ	529	;# 
   141     028C                     T2TMR           equ	652	;# 
   142     028C                     TMR2            equ	652	;# 
   143     028D                     T2PR            equ	653	;# 
   144     028D                     PR2             equ	653	;# 
   145     028E                     T2CON           equ	654	;# 
   146     028F                     T2HLT           equ	655	;# 
   147     0290                     T2CLKCON        equ	656	;# 
   148     0291                     T2RST           equ	657	;# 
   149     030C                     CCPR1           equ	780	;# 
   150     030C                     CCPR1L          equ	780	;# 
   151     030D                     CCPR1H          equ	781	;# 
   152     030E                     CCP1CON         equ	782	;# 
   153     030F                     CCP1CAP         equ	783	;# 
   154     0310                     CCPR2           equ	784	;# 
   155     0310                     CCPR2L          equ	784	;# 
   156     0311                     CCPR2H          equ	785	;# 
   157     0312                     CCP2CON         equ	786	;# 
   158     0313                     CCP2CAP         equ	787	;# 
   159     0314                     PWM3DC          equ	788	;# 
   160     0314                     PWM3DCL         equ	788	;# 
   161     0315                     PWM3DCH         equ	789	;# 
   162     0316                     PWM3CON         equ	790	;# 
   163     0318                     PWM4DC          equ	792	;# 
   164     0318                     PWM4DCL         equ	792	;# 
   165     0319                     PWM4DCH         equ	793	;# 
   166     031A                     PWM4CON         equ	794	;# 
   167     059C                     TMR0L           equ	1436	;# 
   168     059C                     TMR0            equ	1436	;# 
   169     059D                     TMR0H           equ	1437	;# 
   170     059D                     PR0             equ	1437	;# 
   171     059E                     T0CON0          equ	1438	;# 
   172     059F                     T0CON1          equ	1439	;# 
   173     070C                     PIR0            equ	1804	;# 
   174     070D                     PIR1            equ	1805	;# 
   175     070E                     PIR2            equ	1806	;# 
   176     0716                     PIE0            equ	1814	;# 
   177     0717                     PIE1            equ	1815	;# 
   178     0718                     PIE2            equ	1816	;# 
   179     080C                     WDTCON          equ	2060	;# 
   180     0811                     BORCON          equ	2065	;# 
   181     0813                     PCON0           equ	2067	;# 
   182     0814                     PCON1           equ	2068	;# 
   183     081A                     NVMADR          equ	2074	;# 
   184     081A                     NVMADRL         equ	2074	;# 
   185     081B                     NVMADRH         equ	2075	;# 
   186     081C                     NVMDAT          equ	2076	;# 
   187     081C                     NVMDATL         equ	2076	;# 
   188     081D                     NVMDATH         equ	2077	;# 
   189     081E                     NVMCON1         equ	2078	;# 
   190     081F                     NVMCON2         equ	2079	;# 
   191     088E                     OSCCON          equ	2190	;# 
   192     0890                     OSCSTAT         equ	2192	;# 
   193     0891                     OSCEN           equ	2193	;# 
   194     0892                     OSCTUNE         equ	2194	;# 
   195     0893                     OSCFRQ          equ	2195	;# 
   196     090C                     FVRCON          equ	2316	;# 
   197     1E8F                     PPSLOCK         equ	7823	;# 
   198     1E90                     INTPPS          equ	7824	;# 
   199     1E91                     T0CKIPPS        equ	7825	;# 
   200     1E92                     T1CKIPPS        equ	7826	;# 
   201     1E93                     T1GPPS          equ	7827	;# 
   202     1E9C                     T2INPPS         equ	7836	;# 
   203     1EA1                     CCP1PPS         equ	7841	;# 
   204     1EA2                     CCP2PPS         equ	7842	;# 
   205     1EC3                     ADACTPPS        equ	7875	;# 
   206     1EC5                     SSP1CLKPPS      equ	7877	;# 
   207     1EC6                     SSP1DATPPS      equ	7878	;# 
   208     1EC7                     SSP1SSPPS       equ	7879	;# 
   209     1ECB                     RX1PPS          equ	7883	;# 
   210     1ECB                     RX1DTPPS        equ	7883	;# 
   211     1ECB                     RXPPS           equ	7883	;# 
   212     1ECC                     CK1PPS          equ	7884	;# 
   213     1ECC                     TX1CKPPS        equ	7884	;# 
   214     1ECC                     CKPPS           equ	7884	;# 
   215     1F10                     RA0PPS          equ	7952	;# 
   216     1F11                     RA1PPS          equ	7953	;# 
   217     1F12                     RA2PPS          equ	7954	;# 
   218     1F14                     RA4PPS          equ	7956	;# 
   219     1F15                     RA5PPS          equ	7957	;# 
   220     1F1C                     RB4PPS          equ	7964	;# 
   221     1F1D                     RB5PPS          equ	7965	;# 
   222     1F1E                     RB6PPS          equ	7966	;# 
   223     1F1F                     RB7PPS          equ	7967	;# 
   224     1F20                     RC0PPS          equ	7968	;# 
   225     1F21                     RC1PPS          equ	7969	;# 
   226     1F22                     RC2PPS          equ	7970	;# 
   227     1F23                     RC3PPS          equ	7971	;# 
   228     1F24                     RC4PPS          equ	7972	;# 
   229     1F25                     RC5PPS          equ	7973	;# 
   230     1F26                     RC6PPS          equ	7974	;# 
   231     1F27                     RC7PPS          equ	7975	;# 
   232     1F38                     ANSELA          equ	7992	;# 
   233     1F39                     WPUA            equ	7993	;# 
   234     1F3A                     ODCONA          equ	7994	;# 
   235     1F3B                     SLRCONA         equ	7995	;# 
   236     1F3C                     INLVLA          equ	7996	;# 
   237     1F3D                     IOCAP           equ	7997	;# 
   238     1F3E                     IOCAN           equ	7998	;# 
   239     1F3F                     IOCAF           equ	7999	;# 
   240     1F43                     ANSELB          equ	8003	;# 
   241     1F44                     WPUB            equ	8004	;# 
   242     1F45                     ODCONB          equ	8005	;# 
   243     1F46                     SLRCONB         equ	8006	;# 
   244     1F47                     INLVLB          equ	8007	;# 
   245     1F48                     IOCBP           equ	8008	;# 
   246     1F49                     IOCBN           equ	8009	;# 
   247     1F4A                     IOCBF           equ	8010	;# 
   248     1F4E                     ANSELC          equ	8014	;# 
   249     1F4F                     WPUC            equ	8015	;# 
   250     1F50                     ODCONC          equ	8016	;# 
   251     1F51                     SLRCONC         equ	8017	;# 
   252     1F52                     INLVLC          equ	8018	;# 
   253     1F53                     IOCCP           equ	8019	;# 
   254     1F54                     IOCCN           equ	8020	;# 
   255     1F55                     IOCCF           equ	8021	;# 
   256     1FE4                     STATUS_SHAD     equ	8164	;# 
   257     1FE5                     WREG_SHAD       equ	8165	;# 
   258     1FE6                     BSR_SHAD        equ	8166	;# 
   259     1FE7                     PCLATH_SHAD     equ	8167	;# 
   260     1FE8                     FSR0_SHAD       equ	8168	;# 
   261     1FE8                     FSR0L_SHAD      equ	8168	;# 
   262     1FE9                     FSR0H_SHAD      equ	8169	;# 
   263     1FEA                     FSR1L_SHAD      equ	8170	;# 
   264     1FEB                     FSR1H_SHAD      equ	8171	;# 
   265     1FED                     STKPTR          equ	8173	;# 
   266     1FEE                     TOSL            equ	8174	;# 
   267     1FEF                     TOSH            equ	8175	;# 
   268     0000                     INDF0           equ	0	;# 
   269     0001                     INDF1           equ	1	;# 
   270     0002                     PCL             equ	2	;# 
   271     0003                     STATUS          equ	3	;# 
   272     0004                     FSR0L           equ	4	;# 
   273     0005                     FSR0H           equ	5	;# 
   274     0006                     FSR1L           equ	6	;# 
   275     0007                     FSR1H           equ	7	;# 
   276     0008                     BSR             equ	8	;# 
   277     0009                     WREG            equ	9	;# 
   278     000A                     PCLATH          equ	10	;# 
   279     000B                     INTCON          equ	11	;# 
   280     000C                     PORTA           equ	12	;# 
   281     000D                     PORTB           equ	13	;# 
   282     000E                     PORTC           equ	14	;# 
   283     0012                     TRISA           equ	18	;# 
   284     0013                     TRISB           equ	19	;# 
   285     0014                     TRISC           equ	20	;# 
   286     0018                     LATA            equ	24	;# 
   287     0019                     LATB            equ	25	;# 
   288     001A                     LATC            equ	26	;# 
   289     009A                     CPCON           equ	154	;# 
   290     009B                     ADRES           equ	155	;# 
   291     009B                     ADRESL          equ	155	;# 
   292     009C                     ADRESH          equ	156	;# 
   293     009D                     ADCON0          equ	157	;# 
   294     009E                     ADCON1          equ	158	;# 
   295     009F                     ADACT           equ	159	;# 
   296     010C                     RB4I2C          equ	268	;# 
   297     010D                     RB6I2C          equ	269	;# 
   298     0119                     RC1REG          equ	281	;# 
   299     011A                     TX1REG          equ	282	;# 
   300     011B                     SP1BRG          equ	283	;# 
   301     011B                     SP1BRGL         equ	283	;# 
   302     011C                     SP1BRGH         equ	284	;# 
   303     011D                     RC1STA          equ	285	;# 
   304     011E                     TX1STA          equ	286	;# 
   305     011F                     BAUD1CON        equ	287	;# 
   306     018C                     SSP1BUF         equ	396	;# 
   307     018D                     SSP1ADD         equ	397	;# 
   308     018E                     SSP1MSK         equ	398	;# 
   309     018F                     SSP1STAT        equ	399	;# 
   310     0190                     SSP1CON1        equ	400	;# 
   311     0191                     SSP1CON2        equ	401	;# 
   312     0192                     SSP1CON3        equ	402	;# 
   313     020C                     TMR1            equ	524	;# 
   314     020C                     TMR1L           equ	524	;# 
   315     020D                     TMR1H           equ	525	;# 
   316     020E                     T1CON           equ	526	;# 
   317     020E                     TMR1CON         equ	526	;# 
   318     020F                     T1GCON          equ	527	;# 
   319     020F                     TMR1GCON        equ	527	;# 
   320     0210                     T1GATE          equ	528	;# 
   321     0210                     TMR1GATE        equ	528	;# 
   322     0211                     T1CLK           equ	529	;# 
   323     0211                     TMR1CLK         equ	529	;# 
   324     0211                     PR1             equ	529	;# 
   325     028C                     T2TMR           equ	652	;# 
   326     028C                     TMR2            equ	652	;# 
   327     028D                     T2PR            equ	653	;# 
   328     028D                     PR2             equ	653	;# 
   329     028E                     T2CON           equ	654	;# 
   330     028F                     T2HLT           equ	655	;# 
   331     0290                     T2CLKCON        equ	656	;# 
   332     0291                     T2RST           equ	657	;# 
   333     030C                     CCPR1           equ	780	;# 
   334     030C                     CCPR1L          equ	780	;# 
   335     030D                     CCPR1H          equ	781	;# 
   336     030E                     CCP1CON         equ	782	;# 
   337     030F                     CCP1CAP         equ	783	;# 
   338     0310                     CCPR2           equ	784	;# 
   339     0310                     CCPR2L          equ	784	;# 
   340     0311                     CCPR2H          equ	785	;# 
   341     0312                     CCP2CON         equ	786	;# 
   342     0313                     CCP2CAP         equ	787	;# 
   343     0314                     PWM3DC          equ	788	;# 
   344     0314                     PWM3DCL         equ	788	;# 
   345     0315                     PWM3DCH         equ	789	;# 
   346     0316                     PWM3CON         equ	790	;# 
   347     0318                     PWM4DC          equ	792	;# 
   348     0318                     PWM4DCL         equ	792	;# 
   349     0319                     PWM4DCH         equ	793	;# 
   350     031A                     PWM4CON         equ	794	;# 
   351     059C                     TMR0L           equ	1436	;# 
   352     059C                     TMR0            equ	1436	;# 
   353     059D                     TMR0H           equ	1437	;# 
   354     059D                     PR0             equ	1437	;# 
   355     059E                     T0CON0          equ	1438	;# 
   356     059F                     T0CON1          equ	1439	;# 
   357     070C                     PIR0            equ	1804	;# 
   358     070D                     PIR1            equ	1805	;# 
   359     070E                     PIR2            equ	1806	;# 
   360     0716                     PIE0            equ	1814	;# 
   361     0717                     PIE1            equ	1815	;# 
   362     0718                     PIE2            equ	1816	;# 
   363     080C                     WDTCON          equ	2060	;# 
   364     0811                     BORCON          equ	2065	;# 
   365     0813                     PCON0           equ	2067	;# 
   366     0814                     PCON1           equ	2068	;# 
   367     081A                     NVMADR          equ	2074	;# 
   368     081A                     NVMADRL         equ	2074	;# 
   369     081B                     NVMADRH         equ	2075	;# 
   370     081C                     NVMDAT          equ	2076	;# 
   371     081C                     NVMDATL         equ	2076	;# 
   372     081D                     NVMDATH         equ	2077	;# 
   373     081E                     NVMCON1         equ	2078	;# 
   374     081F                     NVMCON2         equ	2079	;# 
   375     088E                     OSCCON          equ	2190	;# 
   376     0890                     OSCSTAT         equ	2192	;# 
   377     0891                     OSCEN           equ	2193	;# 
   378     0892                     OSCTUNE         equ	2194	;# 
   379     0893                     OSCFRQ          equ	2195	;# 
   380     090C                     FVRCON          equ	2316	;# 
   381     1E8F                     PPSLOCK         equ	7823	;# 
   382     1E90                     INTPPS          equ	7824	;# 
   383     1E91                     T0CKIPPS        equ	7825	;# 
   384     1E92                     T1CKIPPS        equ	7826	;# 
   385     1E93                     T1GPPS          equ	7827	;# 
   386     1E9C                     T2INPPS         equ	7836	;# 
   387     1EA1                     CCP1PPS         equ	7841	;# 
   388     1EA2                     CCP2PPS         equ	7842	;# 
   389     1EC3                     ADACTPPS        equ	7875	;# 
   390     1EC5                     SSP1CLKPPS      equ	7877	;# 
   391     1EC6                     SSP1DATPPS      equ	7878	;# 
   392     1EC7                     SSP1SSPPS       equ	7879	;# 
   393     1ECB                     RX1PPS          equ	7883	;# 
   394     1ECB                     RX1DTPPS        equ	7883	;# 
   395     1ECB                     RXPPS           equ	7883	;# 
   396     1ECC                     CK1PPS          equ	7884	;# 
   397     1ECC                     TX1CKPPS        equ	7884	;# 
   398     1ECC                     CKPPS           equ	7884	;# 
   399     1F10                     RA0PPS          equ	7952	;# 
   400     1F11                     RA1PPS          equ	7953	;# 
   401     1F12                     RA2PPS          equ	7954	;# 
   402     1F14                     RA4PPS          equ	7956	;# 
   403     1F15                     RA5PPS          equ	7957	;# 
   404     1F1C                     RB4PPS          equ	7964	;# 
   405     1F1D                     RB5PPS          equ	7965	;# 
   406     1F1E                     RB6PPS          equ	7966	;# 
   407     1F1F                     RB7PPS          equ	7967	;# 
   408     1F20                     RC0PPS          equ	7968	;# 
   409     1F21                     RC1PPS          equ	7969	;# 
   410     1F22                     RC2PPS          equ	7970	;# 
   411     1F23                     RC3PPS          equ	7971	;# 
   412     1F24                     RC4PPS          equ	7972	;# 
   413     1F25                     RC5PPS          equ	7973	;# 
   414     1F26                     RC6PPS          equ	7974	;# 
   415     1F27                     RC7PPS          equ	7975	;# 
   416     1F38                     ANSELA          equ	7992	;# 
   417     1F39                     WPUA            equ	7993	;# 
   418     1F3A                     ODCONA          equ	7994	;# 
   419     1F3B                     SLRCONA         equ	7995	;# 
   420     1F3C                     INLVLA          equ	7996	;# 
   421     1F3D                     IOCAP           equ	7997	;# 
   422     1F3E                     IOCAN           equ	7998	;# 
   423     1F3F                     IOCAF           equ	7999	;# 
   424     1F43                     ANSELB          equ	8003	;# 
   425     1F44                     WPUB            equ	8004	;# 
   426     1F45                     ODCONB          equ	8005	;# 
   427     1F46                     SLRCONB         equ	8006	;# 
   428     1F47                     INLVLB          equ	8007	;# 
   429     1F48                     IOCBP           equ	8008	;# 
   430     1F49                     IOCBN           equ	8009	;# 
   431     1F4A                     IOCBF           equ	8010	;# 
   432     1F4E                     ANSELC          equ	8014	;# 
   433     1F4F                     WPUC            equ	8015	;# 
   434     1F50                     ODCONC          equ	8016	;# 
   435     1F51                     SLRCONC         equ	8017	;# 
   436     1F52                     INLVLC          equ	8018	;# 
   437     1F53                     IOCCP           equ	8019	;# 
   438     1F54                     IOCCN           equ	8020	;# 
   439     1F55                     IOCCF           equ	8021	;# 
   440     1FE4                     STATUS_SHAD     equ	8164	;# 
   441     1FE5                     WREG_SHAD       equ	8165	;# 
   442     1FE6                     BSR_SHAD        equ	8166	;# 
   443     1FE7                     PCLATH_SHAD     equ	8167	;# 
   444     1FE8                     FSR0_SHAD       equ	8168	;# 
   445     1FE8                     FSR0L_SHAD      equ	8168	;# 
   446     1FE9                     FSR0H_SHAD      equ	8169	;# 
   447     1FEA                     FSR1L_SHAD      equ	8170	;# 
   448     1FEB                     FSR1H_SHAD      equ	8171	;# 
   449     1FED                     STKPTR          equ	8173	;# 
   450     1FEE                     TOSL            equ	8174	;# 
   451     1FEF                     TOSH            equ	8175	;# 
   452     0000                     INDF0           equ	0	;# 
   453     0001                     INDF1           equ	1	;# 
   454     0002                     PCL             equ	2	;# 
   455     0003                     STATUS          equ	3	;# 
   456     0004                     FSR0L           equ	4	;# 
   457     0005                     FSR0H           equ	5	;# 
   458     0006                     FSR1L           equ	6	;# 
   459     0007                     FSR1H           equ	7	;# 
   460     0008                     BSR             equ	8	;# 
   461     0009                     WREG            equ	9	;# 
   462     000A                     PCLATH          equ	10	;# 
   463     000B                     INTCON          equ	11	;# 
   464     000C                     PORTA           equ	12	;# 
   465     000D                     PORTB           equ	13	;# 
   466     000E                     PORTC           equ	14	;# 
   467     0012                     TRISA           equ	18	;# 
   468     0013                     TRISB           equ	19	;# 
   469     0014                     TRISC           equ	20	;# 
   470     0018                     LATA            equ	24	;# 
   471     0019                     LATB            equ	25	;# 
   472     001A                     LATC            equ	26	;# 
   473     009A                     CPCON           equ	154	;# 
   474     009B                     ADRES           equ	155	;# 
   475     009B                     ADRESL          equ	155	;# 
   476     009C                     ADRESH          equ	156	;# 
   477     009D                     ADCON0          equ	157	;# 
   478     009E                     ADCON1          equ	158	;# 
   479     009F                     ADACT           equ	159	;# 
   480     010C                     RB4I2C          equ	268	;# 
   481     010D                     RB6I2C          equ	269	;# 
   482     0119                     RC1REG          equ	281	;# 
   483     011A                     TX1REG          equ	282	;# 
   484     011B                     SP1BRG          equ	283	;# 
   485     011B                     SP1BRGL         equ	283	;# 
   486     011C                     SP1BRGH         equ	284	;# 
   487     011D                     RC1STA          equ	285	;# 
   488     011E                     TX1STA          equ	286	;# 
   489     011F                     BAUD1CON        equ	287	;# 
   490     018C                     SSP1BUF         equ	396	;# 
   491     018D                     SSP1ADD         equ	397	;# 
   492     018E                     SSP1MSK         equ	398	;# 
   493     018F                     SSP1STAT        equ	399	;# 
   494     0190                     SSP1CON1        equ	400	;# 
   495     0191                     SSP1CON2        equ	401	;# 
   496     0192                     SSP1CON3        equ	402	;# 
   497     020C                     TMR1            equ	524	;# 
   498     020C                     TMR1L           equ	524	;# 
   499     020D                     TMR1H           equ	525	;# 
   500     020E                     T1CON           equ	526	;# 
   501     020E                     TMR1CON         equ	526	;# 
   502     020F                     T1GCON          equ	527	;# 
   503     020F                     TMR1GCON        equ	527	;# 
   504     0210                     T1GATE          equ	528	;# 
   505     0210                     TMR1GATE        equ	528	;# 
   506     0211                     T1CLK           equ	529	;# 
   507     0211                     TMR1CLK         equ	529	;# 
   508     0211                     PR1             equ	529	;# 
   509     028C                     T2TMR           equ	652	;# 
   510     028C                     TMR2            equ	652	;# 
   511     028D                     T2PR            equ	653	;# 
   512     028D                     PR2             equ	653	;# 
   513     028E                     T2CON           equ	654	;# 
   514     028F                     T2HLT           equ	655	;# 
   515     0290                     T2CLKCON        equ	656	;# 
   516     0291                     T2RST           equ	657	;# 
   517     030C                     CCPR1           equ	780	;# 
   518     030C                     CCPR1L          equ	780	;# 
   519     030D                     CCPR1H          equ	781	;# 
   520     030E                     CCP1CON         equ	782	;# 
   521     030F                     CCP1CAP         equ	783	;# 
   522     0310                     CCPR2           equ	784	;# 
   523     0310                     CCPR2L          equ	784	;# 
   524     0311                     CCPR2H          equ	785	;# 
   525     0312                     CCP2CON         equ	786	;# 
   526     0313                     CCP2CAP         equ	787	;# 
   527     0314                     PWM3DC          equ	788	;# 
   528     0314                     PWM3DCL         equ	788	;# 
   529     0315                     PWM3DCH         equ	789	;# 
   530     0316                     PWM3CON         equ	790	;# 
   531     0318                     PWM4DC          equ	792	;# 
   532     0318                     PWM4DCL         equ	792	;# 
   533     0319                     PWM4DCH         equ	793	;# 
   534     031A                     PWM4CON         equ	794	;# 
   535     059C                     TMR0L           equ	1436	;# 
   536     059C                     TMR0            equ	1436	;# 
   537     059D                     TMR0H           equ	1437	;# 
   538     059D                     PR0             equ	1437	;# 
   539     059E                     T0CON0          equ	1438	;# 
   540     059F                     T0CON1          equ	1439	;# 
   541     070C                     PIR0            equ	1804	;# 
   542     070D                     PIR1            equ	1805	;# 
   543     070E                     PIR2            equ	1806	;# 
   544     0716                     PIE0            equ	1814	;# 
   545     0717                     PIE1            equ	1815	;# 
   546     0718                     PIE2            equ	1816	;# 
   547     080C                     WDTCON          equ	2060	;# 
   548     0811                     BORCON          equ	2065	;# 
   549     0813                     PCON0           equ	2067	;# 
   550     0814                     PCON1           equ	2068	;# 
   551     081A                     NVMADR          equ	2074	;# 
   552     081A                     NVMADRL         equ	2074	;# 
   553     081B                     NVMADRH         equ	2075	;# 
   554     081C                     NVMDAT          equ	2076	;# 
   555     081C                     NVMDATL         equ	2076	;# 
   556     081D                     NVMDATH         equ	2077	;# 
   557     081E                     NVMCON1         equ	2078	;# 
   558     081F                     NVMCON2         equ	2079	;# 
   559     088E                     OSCCON          equ	2190	;# 
   560     0890                     OSCSTAT         equ	2192	;# 
   561     0891                     OSCEN           equ	2193	;# 
   562     0892                     OSCTUNE         equ	2194	;# 
   563     0893                     OSCFRQ          equ	2195	;# 
   564     090C                     FVRCON          equ	2316	;# 
   565     1E8F                     PPSLOCK         equ	7823	;# 
   566     1E90                     INTPPS          equ	7824	;# 
   567     1E91                     T0CKIPPS        equ	7825	;# 
   568     1E92                     T1CKIPPS        equ	7826	;# 
   569     1E93                     T1GPPS          equ	7827	;# 
   570     1E9C                     T2INPPS         equ	7836	;# 
   571     1EA1                     CCP1PPS         equ	7841	;# 
   572     1EA2                     CCP2PPS         equ	7842	;# 
   573     1EC3                     ADACTPPS        equ	7875	;# 
   574     1EC5                     SSP1CLKPPS      equ	7877	;# 
   575     1EC6                     SSP1DATPPS      equ	7878	;# 
   576     1EC7                     SSP1SSPPS       equ	7879	;# 
   577     1ECB                     RX1PPS          equ	7883	;# 
   578     1ECB                     RX1DTPPS        equ	7883	;# 
   579     1ECB                     RXPPS           equ	7883	;# 
   580     1ECC                     CK1PPS          equ	7884	;# 
   581     1ECC                     TX1CKPPS        equ	7884	;# 
   582     1ECC                     CKPPS           equ	7884	;# 
   583     1F10                     RA0PPS          equ	7952	;# 
   584     1F11                     RA1PPS          equ	7953	;# 
   585     1F12                     RA2PPS          equ	7954	;# 
   586     1F14                     RA4PPS          equ	7956	;# 
   587     1F15                     RA5PPS          equ	7957	;# 
   588     1F1C                     RB4PPS          equ	7964	;# 
   589     1F1D                     RB5PPS          equ	7965	;# 
   590     1F1E                     RB6PPS          equ	7966	;# 
   591     1F1F                     RB7PPS          equ	7967	;# 
   592     1F20                     RC0PPS          equ	7968	;# 
   593     1F21                     RC1PPS          equ	7969	;# 
   594     1F22                     RC2PPS          equ	7970	;# 
   595     1F23                     RC3PPS          equ	7971	;# 
   596     1F24                     RC4PPS          equ	7972	;# 
   597     1F25                     RC5PPS          equ	7973	;# 
   598     1F26                     RC6PPS          equ	7974	;# 
   599     1F27                     RC7PPS          equ	7975	;# 
   600     1F38                     ANSELA          equ	7992	;# 
   601     1F39                     WPUA            equ	7993	;# 
   602     1F3A                     ODCONA          equ	7994	;# 
   603     1F3B                     SLRCONA         equ	7995	;# 
   604     1F3C                     INLVLA          equ	7996	;# 
   605     1F3D                     IOCAP           equ	7997	;# 
   606     1F3E                     IOCAN           equ	7998	;# 
   607     1F3F                     IOCAF           equ	7999	;# 
   608     1F43                     ANSELB          equ	8003	;# 
   609     1F44                     WPUB            equ	8004	;# 
   610     1F45                     ODCONB          equ	8005	;# 
   611     1F46                     SLRCONB         equ	8006	;# 
   612     1F47                     INLVLB          equ	8007	;# 
   613     1F48                     IOCBP           equ	8008	;# 
   614     1F49                     IOCBN           equ	8009	;# 
   615     1F4A                     IOCBF           equ	8010	;# 
   616     1F4E                     ANSELC          equ	8014	;# 
   617     1F4F                     WPUC            equ	8015	;# 
   618     1F50                     ODCONC          equ	8016	;# 
   619     1F51                     SLRCONC         equ	8017	;# 
   620     1F52                     INLVLC          equ	8018	;# 
   621     1F53                     IOCCP           equ	8019	;# 
   622     1F54                     IOCCN           equ	8020	;# 
   623     1F55                     IOCCF           equ	8021	;# 
   624     1FE4                     STATUS_SHAD     equ	8164	;# 
   625     1FE5                     WREG_SHAD       equ	8165	;# 
   626     1FE6                     BSR_SHAD        equ	8166	;# 
   627     1FE7                     PCLATH_SHAD     equ	8167	;# 
   628     1FE8                     FSR0_SHAD       equ	8168	;# 
   629     1FE8                     FSR0L_SHAD      equ	8168	;# 
   630     1FE9                     FSR0H_SHAD      equ	8169	;# 
   631     1FEA                     FSR1L_SHAD      equ	8170	;# 
   632     1FEB                     FSR1H_SHAD      equ	8171	;# 
   633     1FED                     STKPTR          equ	8173	;# 
   634     1FEE                     TOSL            equ	8174	;# 
   635     1FEF                     TOSH            equ	8175	;# 
   636     0000                     INDF0           equ	0	;# 
   637     0001                     INDF1           equ	1	;# 
   638     0002                     PCL             equ	2	;# 
   639     0003                     STATUS          equ	3	;# 
   640     0004                     FSR0L           equ	4	;# 
   641     0005                     FSR0H           equ	5	;# 
   642     0006                     FSR1L           equ	6	;# 
   643     0007                     FSR1H           equ	7	;# 
   644     0008                     BSR             equ	8	;# 
   645     0009                     WREG            equ	9	;# 
   646     000A                     PCLATH          equ	10	;# 
   647     000B                     INTCON          equ	11	;# 
   648     000C                     PORTA           equ	12	;# 
   649     000D                     PORTB           equ	13	;# 
   650     000E                     PORTC           equ	14	;# 
   651     0012                     TRISA           equ	18	;# 
   652     0013                     TRISB           equ	19	;# 
   653     0014                     TRISC           equ	20	;# 
   654     0018                     LATA            equ	24	;# 
   655     0019                     LATB            equ	25	;# 
   656     001A                     LATC            equ	26	;# 
   657     009A                     CPCON           equ	154	;# 
   658     009B                     ADRES           equ	155	;# 
   659     009B                     ADRESL          equ	155	;# 
   660     009C                     ADRESH          equ	156	;# 
   661     009D                     ADCON0          equ	157	;# 
   662     009E                     ADCON1          equ	158	;# 
   663     009F                     ADACT           equ	159	;# 
   664     010C                     RB4I2C          equ	268	;# 
   665     010D                     RB6I2C          equ	269	;# 
   666     0119                     RC1REG          equ	281	;# 
   667     011A                     TX1REG          equ	282	;# 
   668     011B                     SP1BRG          equ	283	;# 
   669     011B                     SP1BRGL         equ	283	;# 
   670     011C                     SP1BRGH         equ	284	;# 
   671     011D                     RC1STA          equ	285	;# 
   672     011E                     TX1STA          equ	286	;# 
   673     011F                     BAUD1CON        equ	287	;# 
   674     018C                     SSP1BUF         equ	396	;# 
   675     018D                     SSP1ADD         equ	397	;# 
   676     018E                     SSP1MSK         equ	398	;# 
   677     018F                     SSP1STAT        equ	399	;# 
   678     0190                     SSP1CON1        equ	400	;# 
   679     0191                     SSP1CON2        equ	401	;# 
   680     0192                     SSP1CON3        equ	402	;# 
   681     020C                     TMR1            equ	524	;# 
   682     020C                     TMR1L           equ	524	;# 
   683     020D                     TMR1H           equ	525	;# 
   684     020E                     T1CON           equ	526	;# 
   685     020E                     TMR1CON         equ	526	;# 
   686     020F                     T1GCON          equ	527	;# 
   687     020F                     TMR1GCON        equ	527	;# 
   688     0210                     T1GATE          equ	528	;# 
   689     0210                     TMR1GATE        equ	528	;# 
   690     0211                     T1CLK           equ	529	;# 
   691     0211                     TMR1CLK         equ	529	;# 
   692     0211                     PR1             equ	529	;# 
   693     028C                     T2TMR           equ	652	;# 
   694     028C                     TMR2            equ	652	;# 
   695     028D                     T2PR            equ	653	;# 
   696     028D                     PR2             equ	653	;# 
   697     028E                     T2CON           equ	654	;# 
   698     028F                     T2HLT           equ	655	;# 
   699     0290                     T2CLKCON        equ	656	;# 
   700     0291                     T2RST           equ	657	;# 
   701     030C                     CCPR1           equ	780	;# 
   702     030C                     CCPR1L          equ	780	;# 
   703     030D                     CCPR1H          equ	781	;# 
   704     030E                     CCP1CON         equ	782	;# 
   705     030F                     CCP1CAP         equ	783	;# 
   706     0310                     CCPR2           equ	784	;# 
   707     0310                     CCPR2L          equ	784	;# 
   708     0311                     CCPR2H          equ	785	;# 
   709     0312                     CCP2CON         equ	786	;# 
   710     0313                     CCP2CAP         equ	787	;# 
   711     0314                     PWM3DC          equ	788	;# 
   712     0314                     PWM3DCL         equ	788	;# 
   713     0315                     PWM3DCH         equ	789	;# 
   714     0316                     PWM3CON         equ	790	;# 
   715     0318                     PWM4DC          equ	792	;# 
   716     0318                     PWM4DCL         equ	792	;# 
   717     0319                     PWM4DCH         equ	793	;# 
   718     031A                     PWM4CON         equ	794	;# 
   719     059C                     TMR0L           equ	1436	;# 
   720     059C                     TMR0            equ	1436	;# 
   721     059D                     TMR0H           equ	1437	;# 
   722     059D                     PR0             equ	1437	;# 
   723     059E                     T0CON0          equ	1438	;# 
   724     059F                     T0CON1          equ	1439	;# 
   725     070C                     PIR0            equ	1804	;# 
   726     070D                     PIR1            equ	1805	;# 
   727     070E                     PIR2            equ	1806	;# 
   728     0716                     PIE0            equ	1814	;# 
   729     0717                     PIE1            equ	1815	;# 
   730     0718                     PIE2            equ	1816	;# 
   731     080C                     WDTCON          equ	2060	;# 
   732     0811                     BORCON          equ	2065	;# 
   733     0813                     PCON0           equ	2067	;# 
   734     0814                     PCON1           equ	2068	;# 
   735     081A                     NVMADR          equ	2074	;# 
   736     081A                     NVMADRL         equ	2074	;# 
   737     081B                     NVMADRH         equ	2075	;# 
   738     081C                     NVMDAT          equ	2076	;# 
   739     081C                     NVMDATL         equ	2076	;# 
   740     081D                     NVMDATH         equ	2077	;# 
   741     081E                     NVMCON1         equ	2078	;# 
   742     081F                     NVMCON2         equ	2079	;# 
   743     088E                     OSCCON          equ	2190	;# 
   744     0890                     OSCSTAT         equ	2192	;# 
   745     0891                     OSCEN           equ	2193	;# 
   746     0892                     OSCTUNE         equ	2194	;# 
   747     0893                     OSCFRQ          equ	2195	;# 
   748     090C                     FVRCON          equ	2316	;# 
   749     1E8F                     PPSLOCK         equ	7823	;# 
   750     1E90                     INTPPS          equ	7824	;# 
   751     1E91                     T0CKIPPS        equ	7825	;# 
   752     1E92                     T1CKIPPS        equ	7826	;# 
   753     1E93                     T1GPPS          equ	7827	;# 
   754     1E9C                     T2INPPS         equ	7836	;# 
   755     1EA1                     CCP1PPS         equ	7841	;# 
   756     1EA2                     CCP2PPS         equ	7842	;# 
   757     1EC3                     ADACTPPS        equ	7875	;# 
   758     1EC5                     SSP1CLKPPS      equ	7877	;# 
   759     1EC6                     SSP1DATPPS      equ	7878	;# 
   760     1EC7                     SSP1SSPPS       equ	7879	;# 
   761     1ECB                     RX1PPS          equ	7883	;# 
   762     1ECB                     RX1DTPPS        equ	7883	;# 
   763     1ECB                     RXPPS           equ	7883	;# 
   764     1ECC                     CK1PPS          equ	7884	;# 
   765     1ECC                     TX1CKPPS        equ	7884	;# 
   766     1ECC                     CKPPS           equ	7884	;# 
   767     1F10                     RA0PPS          equ	7952	;# 
   768     1F11                     RA1PPS          equ	7953	;# 
   769     1F12                     RA2PPS          equ	7954	;# 
   770     1F14                     RA4PPS          equ	7956	;# 
   771     1F15                     RA5PPS          equ	7957	;# 
   772     1F1C                     RB4PPS          equ	7964	;# 
   773     1F1D                     RB5PPS          equ	7965	;# 
   774     1F1E                     RB6PPS          equ	7966	;# 
   775     1F1F                     RB7PPS          equ	7967	;# 
   776     1F20                     RC0PPS          equ	7968	;# 
   777     1F21                     RC1PPS          equ	7969	;# 
   778     1F22                     RC2PPS          equ	7970	;# 
   779     1F23                     RC3PPS          equ	7971	;# 
   780     1F24                     RC4PPS          equ	7972	;# 
   781     1F25                     RC5PPS          equ	7973	;# 
   782     1F26                     RC6PPS          equ	7974	;# 
   783     1F27                     RC7PPS          equ	7975	;# 
   784     1F38                     ANSELA          equ	7992	;# 
   785     1F39                     WPUA            equ	7993	;# 
   786     1F3A                     ODCONA          equ	7994	;# 
   787     1F3B                     SLRCONA         equ	7995	;# 
   788     1F3C                     INLVLA          equ	7996	;# 
   789     1F3D                     IOCAP           equ	7997	;# 
   790     1F3E                     IOCAN           equ	7998	;# 
   791     1F3F                     IOCAF           equ	7999	;# 
   792     1F43                     ANSELB          equ	8003	;# 
   793     1F44                     WPUB            equ	8004	;# 
   794     1F45                     ODCONB          equ	8005	;# 
   795     1F46                     SLRCONB         equ	8006	;# 
   796     1F47                     INLVLB          equ	8007	;# 
   797     1F48                     IOCBP           equ	8008	;# 
   798     1F49                     IOCBN           equ	8009	;# 
   799     1F4A                     IOCBF           equ	8010	;# 
   800     1F4E                     ANSELC          equ	8014	;# 
   801     1F4F                     WPUC            equ	8015	;# 
   802     1F50                     ODCONC          equ	8016	;# 
   803     1F51                     SLRCONC         equ	8017	;# 
   804     1F52                     INLVLC          equ	8018	;# 
   805     1F53                     IOCCP           equ	8019	;# 
   806     1F54                     IOCCN           equ	8020	;# 
   807     1F55                     IOCCF           equ	8021	;# 
   808     1FE4                     STATUS_SHAD     equ	8164	;# 
   809     1FE5                     WREG_SHAD       equ	8165	;# 
   810     1FE6                     BSR_SHAD        equ	8166	;# 
   811     1FE7                     PCLATH_SHAD     equ	8167	;# 
   812     1FE8                     FSR0_SHAD       equ	8168	;# 
   813     1FE8                     FSR0L_SHAD      equ	8168	;# 
   814     1FE9                     FSR0H_SHAD      equ	8169	;# 
   815     1FEA                     FSR1L_SHAD      equ	8170	;# 
   816     1FEB                     FSR1H_SHAD      equ	8171	;# 
   817     1FED                     STKPTR          equ	8173	;# 
   818     1FEE                     TOSL            equ	8174	;# 
   819     1FEF                     TOSH            equ	8175	;# 
   820     0000                     INDF0           equ	0	;# 
   821     0001                     INDF1           equ	1	;# 
   822     0002                     PCL             equ	2	;# 
   823     0003                     STATUS          equ	3	;# 
   824     0004                     FSR0L           equ	4	;# 
   825     0005                     FSR0H           equ	5	;# 
   826     0006                     FSR1L           equ	6	;# 
   827     0007                     FSR1H           equ	7	;# 
   828     0008                     BSR             equ	8	;# 
   829     0009                     WREG            equ	9	;# 
   830     000A                     PCLATH          equ	10	;# 
   831     000B                     INTCON          equ	11	;# 
   832     000C                     PORTA           equ	12	;# 
   833     000D                     PORTB           equ	13	;# 
   834     000E                     PORTC           equ	14	;# 
   835     0012                     TRISA           equ	18	;# 
   836     0013                     TRISB           equ	19	;# 
   837     0014                     TRISC           equ	20	;# 
   838     0018                     LATA            equ	24	;# 
   839     0019                     LATB            equ	25	;# 
   840     001A                     LATC            equ	26	;# 
   841     009A                     CPCON           equ	154	;# 
   842     009B                     ADRES           equ	155	;# 
   843     009B                     ADRESL          equ	155	;# 
   844     009C                     ADRESH          equ	156	;# 
   845     009D                     ADCON0          equ	157	;# 
   846     009E                     ADCON1          equ	158	;# 
   847     009F                     ADACT           equ	159	;# 
   848     010C                     RB4I2C          equ	268	;# 
   849     010D                     RB6I2C          equ	269	;# 
   850     0119                     RC1REG          equ	281	;# 
   851     011A                     TX1REG          equ	282	;# 
   852     011B                     SP1BRG          equ	283	;# 
   853     011B                     SP1BRGL         equ	283	;# 
   854     011C                     SP1BRGH         equ	284	;# 
   855     011D                     RC1STA          equ	285	;# 
   856     011E                     TX1STA          equ	286	;# 
   857     011F                     BAUD1CON        equ	287	;# 
   858     018C                     SSP1BUF         equ	396	;# 
   859     018D                     SSP1ADD         equ	397	;# 
   860     018E                     SSP1MSK         equ	398	;# 
   861     018F                     SSP1STAT        equ	399	;# 
   862     0190                     SSP1CON1        equ	400	;# 
   863     0191                     SSP1CON2        equ	401	;# 
   864     0192                     SSP1CON3        equ	402	;# 
   865     020C                     TMR1            equ	524	;# 
   866     020C                     TMR1L           equ	524	;# 
   867     020D                     TMR1H           equ	525	;# 
   868     020E                     T1CON           equ	526	;# 
   869     020E                     TMR1CON         equ	526	;# 
   870     020F                     T1GCON          equ	527	;# 
   871     020F                     TMR1GCON        equ	527	;# 
   872     0210                     T1GATE          equ	528	;# 
   873     0210                     TMR1GATE        equ	528	;# 
   874     0211                     T1CLK           equ	529	;# 
   875     0211                     TMR1CLK         equ	529	;# 
   876     0211                     PR1             equ	529	;# 
   877     028C                     T2TMR           equ	652	;# 
   878     028C                     TMR2            equ	652	;# 
   879     028D                     T2PR            equ	653	;# 
   880     028D                     PR2             equ	653	;# 
   881     028E                     T2CON           equ	654	;# 
   882     028F                     T2HLT           equ	655	;# 
   883     0290                     T2CLKCON        equ	656	;# 
   884     0291                     T2RST           equ	657	;# 
   885     030C                     CCPR1           equ	780	;# 
   886     030C                     CCPR1L          equ	780	;# 
   887     030D                     CCPR1H          equ	781	;# 
   888     030E                     CCP1CON         equ	782	;# 
   889     030F                     CCP1CAP         equ	783	;# 
   890     0310                     CCPR2           equ	784	;# 
   891     0310                     CCPR2L          equ	784	;# 
   892     0311                     CCPR2H          equ	785	;# 
   893     0312                     CCP2CON         equ	786	;# 
   894     0313                     CCP2CAP         equ	787	;# 
   895     0314                     PWM3DC          equ	788	;# 
   896     0314                     PWM3DCL         equ	788	;# 
   897     0315                     PWM3DCH         equ	789	;# 
   898     0316                     PWM3CON         equ	790	;# 
   899     0318                     PWM4DC          equ	792	;# 
   900     0318                     PWM4DCL         equ	792	;# 
   901     0319                     PWM4DCH         equ	793	;# 
   902     031A                     PWM4CON         equ	794	;# 
   903     059C                     TMR0L           equ	1436	;# 
   904     059C                     TMR0            equ	1436	;# 
   905     059D                     TMR0H           equ	1437	;# 
   906     059D                     PR0             equ	1437	;# 
   907     059E                     T0CON0          equ	1438	;# 
   908     059F                     T0CON1          equ	1439	;# 
   909     070C                     PIR0            equ	1804	;# 
   910     070D                     PIR1            equ	1805	;# 
   911     070E                     PIR2            equ	1806	;# 
   912     0716                     PIE0            equ	1814	;# 
   913     0717                     PIE1            equ	1815	;# 
   914     0718                     PIE2            equ	1816	;# 
   915     080C                     WDTCON          equ	2060	;# 
   916     0811                     BORCON          equ	2065	;# 
   917     0813                     PCON0           equ	2067	;# 
   918     0814                     PCON1           equ	2068	;# 
   919     081A                     NVMADR          equ	2074	;# 
   920     081A                     NVMADRL         equ	2074	;# 
   921     081B                     NVMADRH         equ	2075	;# 
   922     081C                     NVMDAT          equ	2076	;# 
   923     081C                     NVMDATL         equ	2076	;# 
   924     081D                     NVMDATH         equ	2077	;# 
   925     081E                     NVMCON1         equ	2078	;# 
   926     081F                     NVMCON2         equ	2079	;# 
   927     088E                     OSCCON          equ	2190	;# 
   928     0890                     OSCSTAT         equ	2192	;# 
   929     0891                     OSCEN           equ	2193	;# 
   930     0892                     OSCTUNE         equ	2194	;# 
   931     0893                     OSCFRQ          equ	2195	;# 
   932     090C                     FVRCON          equ	2316	;# 
   933     1E8F                     PPSLOCK         equ	7823	;# 
   934     1E90                     INTPPS          equ	7824	;# 
   935     1E91                     T0CKIPPS        equ	7825	;# 
   936     1E92                     T1CKIPPS        equ	7826	;# 
   937     1E93                     T1GPPS          equ	7827	;# 
   938     1E9C                     T2INPPS         equ	7836	;# 
   939     1EA1                     CCP1PPS         equ	7841	;# 
   940     1EA2                     CCP2PPS         equ	7842	;# 
   941     1EC3                     ADACTPPS        equ	7875	;# 
   942     1EC5                     SSP1CLKPPS      equ	7877	;# 
   943     1EC6                     SSP1DATPPS      equ	7878	;# 
   944     1EC7                     SSP1SSPPS       equ	7879	;# 
   945     1ECB                     RX1PPS          equ	7883	;# 
   946     1ECB                     RX1DTPPS        equ	7883	;# 
   947     1ECB                     RXPPS           equ	7883	;# 
   948     1ECC                     CK1PPS          equ	7884	;# 
   949     1ECC                     TX1CKPPS        equ	7884	;# 
   950     1ECC                     CKPPS           equ	7884	;# 
   951     1F10                     RA0PPS          equ	7952	;# 
   952     1F11                     RA1PPS          equ	7953	;# 
   953     1F12                     RA2PPS          equ	7954	;# 
   954     1F14                     RA4PPS          equ	7956	;# 
   955     1F15                     RA5PPS          equ	7957	;# 
   956     1F1C                     RB4PPS          equ	7964	;# 
   957     1F1D                     RB5PPS          equ	7965	;# 
   958     1F1E                     RB6PPS          equ	7966	;# 
   959     1F1F                     RB7PPS          equ	7967	;# 
   960     1F20                     RC0PPS          equ	7968	;# 
   961     1F21                     RC1PPS          equ	7969	;# 
   962     1F22                     RC2PPS          equ	7970	;# 
   963     1F23                     RC3PPS          equ	7971	;# 
   964     1F24                     RC4PPS          equ	7972	;# 
   965     1F25                     RC5PPS          equ	7973	;# 
   966     1F26                     RC6PPS          equ	7974	;# 
   967     1F27                     RC7PPS          equ	7975	;# 
   968     1F38                     ANSELA          equ	7992	;# 
   969     1F39                     WPUA            equ	7993	;# 
   970     1F3A                     ODCONA          equ	7994	;# 
   971     1F3B                     SLRCONA         equ	7995	;# 
   972     1F3C                     INLVLA          equ	7996	;# 
   973     1F3D                     IOCAP           equ	7997	;# 
   974     1F3E                     IOCAN           equ	7998	;# 
   975     1F3F                     IOCAF           equ	7999	;# 
   976     1F43                     ANSELB          equ	8003	;# 
   977     1F44                     WPUB            equ	8004	;# 
   978     1F45                     ODCONB          equ	8005	;# 
   979     1F46                     SLRCONB         equ	8006	;# 
   980     1F47                     INLVLB          equ	8007	;# 
   981     1F48                     IOCBP           equ	8008	;# 
   982     1F49                     IOCBN           equ	8009	;# 
   983     1F4A                     IOCBF           equ	8010	;# 
   984     1F4E                     ANSELC          equ	8014	;# 
   985     1F4F                     WPUC            equ	8015	;# 
   986     1F50                     ODCONC          equ	8016	;# 
   987     1F51                     SLRCONC         equ	8017	;# 
   988     1F52                     INLVLC          equ	8018	;# 
   989     1F53                     IOCCP           equ	8019	;# 
   990     1F54                     IOCCN           equ	8020	;# 
   991     1F55                     IOCCF           equ	8021	;# 
   992     1FE4                     STATUS_SHAD     equ	8164	;# 
   993     1FE5                     WREG_SHAD       equ	8165	;# 
   994     1FE6                     BSR_SHAD        equ	8166	;# 
   995     1FE7                     PCLATH_SHAD     equ	8167	;# 
   996     1FE8                     FSR0_SHAD       equ	8168	;# 
   997     1FE8                     FSR0L_SHAD      equ	8168	;# 
   998     1FE9                     FSR0H_SHAD      equ	8169	;# 
   999     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1000     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1001     1FED                     STKPTR          equ	8173	;# 
  1002     1FEE                     TOSL            equ	8174	;# 
  1003     1FEF                     TOSH            equ	8175	;# 
  1004     0000                     INDF0           equ	0	;# 
  1005     0001                     INDF1           equ	1	;# 
  1006     0002                     PCL             equ	2	;# 
  1007     0003                     STATUS          equ	3	;# 
  1008     0004                     FSR0L           equ	4	;# 
  1009     0005                     FSR0H           equ	5	;# 
  1010     0006                     FSR1L           equ	6	;# 
  1011     0007                     FSR1H           equ	7	;# 
  1012     0008                     BSR             equ	8	;# 
  1013     0009                     WREG            equ	9	;# 
  1014     000A                     PCLATH          equ	10	;# 
  1015     000B                     INTCON          equ	11	;# 
  1016     000C                     PORTA           equ	12	;# 
  1017     000D                     PORTB           equ	13	;# 
  1018     000E                     PORTC           equ	14	;# 
  1019     0012                     TRISA           equ	18	;# 
  1020     0013                     TRISB           equ	19	;# 
  1021     0014                     TRISC           equ	20	;# 
  1022     0018                     LATA            equ	24	;# 
  1023     0019                     LATB            equ	25	;# 
  1024     001A                     LATC            equ	26	;# 
  1025     009A                     CPCON           equ	154	;# 
  1026     009B                     ADRES           equ	155	;# 
  1027     009B                     ADRESL          equ	155	;# 
  1028     009C                     ADRESH          equ	156	;# 
  1029     009D                     ADCON0          equ	157	;# 
  1030     009E                     ADCON1          equ	158	;# 
  1031     009F                     ADACT           equ	159	;# 
  1032     010C                     RB4I2C          equ	268	;# 
  1033     010D                     RB6I2C          equ	269	;# 
  1034     0119                     RC1REG          equ	281	;# 
  1035     011A                     TX1REG          equ	282	;# 
  1036     011B                     SP1BRG          equ	283	;# 
  1037     011B                     SP1BRGL         equ	283	;# 
  1038     011C                     SP1BRGH         equ	284	;# 
  1039     011D                     RC1STA          equ	285	;# 
  1040     011E                     TX1STA          equ	286	;# 
  1041     011F                     BAUD1CON        equ	287	;# 
  1042     018C                     SSP1BUF         equ	396	;# 
  1043     018D                     SSP1ADD         equ	397	;# 
  1044     018E                     SSP1MSK         equ	398	;# 
  1045     018F                     SSP1STAT        equ	399	;# 
  1046     0190                     SSP1CON1        equ	400	;# 
  1047     0191                     SSP1CON2        equ	401	;# 
  1048     0192                     SSP1CON3        equ	402	;# 
  1049     020C                     TMR1            equ	524	;# 
  1050     020C                     TMR1L           equ	524	;# 
  1051     020D                     TMR1H           equ	525	;# 
  1052     020E                     T1CON           equ	526	;# 
  1053     020E                     TMR1CON         equ	526	;# 
  1054     020F                     T1GCON          equ	527	;# 
  1055     020F                     TMR1GCON        equ	527	;# 
  1056     0210                     T1GATE          equ	528	;# 
  1057     0210                     TMR1GATE        equ	528	;# 
  1058     0211                     T1CLK           equ	529	;# 
  1059     0211                     TMR1CLK         equ	529	;# 
  1060     0211                     PR1             equ	529	;# 
  1061     028C                     T2TMR           equ	652	;# 
  1062     028C                     TMR2            equ	652	;# 
  1063     028D                     T2PR            equ	653	;# 
  1064     028D                     PR2             equ	653	;# 
  1065     028E                     T2CON           equ	654	;# 
  1066     028F                     T2HLT           equ	655	;# 
  1067     0290                     T2CLKCON        equ	656	;# 
  1068     0291                     T2RST           equ	657	;# 
  1069     030C                     CCPR1           equ	780	;# 
  1070     030C                     CCPR1L          equ	780	;# 
  1071     030D                     CCPR1H          equ	781	;# 
  1072     030E                     CCP1CON         equ	782	;# 
  1073     030F                     CCP1CAP         equ	783	;# 
  1074     0310                     CCPR2           equ	784	;# 
  1075     0310                     CCPR2L          equ	784	;# 
  1076     0311                     CCPR2H          equ	785	;# 
  1077     0312                     CCP2CON         equ	786	;# 
  1078     0313                     CCP2CAP         equ	787	;# 
  1079     0314                     PWM3DC          equ	788	;# 
  1080     0314                     PWM3DCL         equ	788	;# 
  1081     0315                     PWM3DCH         equ	789	;# 
  1082     0316                     PWM3CON         equ	790	;# 
  1083     0318                     PWM4DC          equ	792	;# 
  1084     0318                     PWM4DCL         equ	792	;# 
  1085     0319                     PWM4DCH         equ	793	;# 
  1086     031A                     PWM4CON         equ	794	;# 
  1087     059C                     TMR0L           equ	1436	;# 
  1088     059C                     TMR0            equ	1436	;# 
  1089     059D                     TMR0H           equ	1437	;# 
  1090     059D                     PR0             equ	1437	;# 
  1091     059E                     T0CON0          equ	1438	;# 
  1092     059F                     T0CON1          equ	1439	;# 
  1093     070C                     PIR0            equ	1804	;# 
  1094     070D                     PIR1            equ	1805	;# 
  1095     070E                     PIR2            equ	1806	;# 
  1096     0716                     PIE0            equ	1814	;# 
  1097     0717                     PIE1            equ	1815	;# 
  1098     0718                     PIE2            equ	1816	;# 
  1099     080C                     WDTCON          equ	2060	;# 
  1100     0811                     BORCON          equ	2065	;# 
  1101     0813                     PCON0           equ	2067	;# 
  1102     0814                     PCON1           equ	2068	;# 
  1103     081A                     NVMADR          equ	2074	;# 
  1104     081A                     NVMADRL         equ	2074	;# 
  1105     081B                     NVMADRH         equ	2075	;# 
  1106     081C                     NVMDAT          equ	2076	;# 
  1107     081C                     NVMDATL         equ	2076	;# 
  1108     081D                     NVMDATH         equ	2077	;# 
  1109     081E                     NVMCON1         equ	2078	;# 
  1110     081F                     NVMCON2         equ	2079	;# 
  1111     088E                     OSCCON          equ	2190	;# 
  1112     0890                     OSCSTAT         equ	2192	;# 
  1113     0891                     OSCEN           equ	2193	;# 
  1114     0892                     OSCTUNE         equ	2194	;# 
  1115     0893                     OSCFRQ          equ	2195	;# 
  1116     090C                     FVRCON          equ	2316	;# 
  1117     1E8F                     PPSLOCK         equ	7823	;# 
  1118     1E90                     INTPPS          equ	7824	;# 
  1119     1E91                     T0CKIPPS        equ	7825	;# 
  1120     1E92                     T1CKIPPS        equ	7826	;# 
  1121     1E93                     T1GPPS          equ	7827	;# 
  1122     1E9C                     T2INPPS         equ	7836	;# 
  1123     1EA1                     CCP1PPS         equ	7841	;# 
  1124     1EA2                     CCP2PPS         equ	7842	;# 
  1125     1EC3                     ADACTPPS        equ	7875	;# 
  1126     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1127     1EC6                     SSP1DATPPS      equ	7878	;# 
  1128     1EC7                     SSP1SSPPS       equ	7879	;# 
  1129     1ECB                     RX1PPS          equ	7883	;# 
  1130     1ECB                     RX1DTPPS        equ	7883	;# 
  1131     1ECB                     RXPPS           equ	7883	;# 
  1132     1ECC                     CK1PPS          equ	7884	;# 
  1133     1ECC                     TX1CKPPS        equ	7884	;# 
  1134     1ECC                     CKPPS           equ	7884	;# 
  1135     1F10                     RA0PPS          equ	7952	;# 
  1136     1F11                     RA1PPS          equ	7953	;# 
  1137     1F12                     RA2PPS          equ	7954	;# 
  1138     1F14                     RA4PPS          equ	7956	;# 
  1139     1F15                     RA5PPS          equ	7957	;# 
  1140     1F1C                     RB4PPS          equ	7964	;# 
  1141     1F1D                     RB5PPS          equ	7965	;# 
  1142     1F1E                     RB6PPS          equ	7966	;# 
  1143     1F1F                     RB7PPS          equ	7967	;# 
  1144     1F20                     RC0PPS          equ	7968	;# 
  1145     1F21                     RC1PPS          equ	7969	;# 
  1146     1F22                     RC2PPS          equ	7970	;# 
  1147     1F23                     RC3PPS          equ	7971	;# 
  1148     1F24                     RC4PPS          equ	7972	;# 
  1149     1F25                     RC5PPS          equ	7973	;# 
  1150     1F26                     RC6PPS          equ	7974	;# 
  1151     1F27                     RC7PPS          equ	7975	;# 
  1152     1F38                     ANSELA          equ	7992	;# 
  1153     1F39                     WPUA            equ	7993	;# 
  1154     1F3A                     ODCONA          equ	7994	;# 
  1155     1F3B                     SLRCONA         equ	7995	;# 
  1156     1F3C                     INLVLA          equ	7996	;# 
  1157     1F3D                     IOCAP           equ	7997	;# 
  1158     1F3E                     IOCAN           equ	7998	;# 
  1159     1F3F                     IOCAF           equ	7999	;# 
  1160     1F43                     ANSELB          equ	8003	;# 
  1161     1F44                     WPUB            equ	8004	;# 
  1162     1F45                     ODCONB          equ	8005	;# 
  1163     1F46                     SLRCONB         equ	8006	;# 
  1164     1F47                     INLVLB          equ	8007	;# 
  1165     1F48                     IOCBP           equ	8008	;# 
  1166     1F49                     IOCBN           equ	8009	;# 
  1167     1F4A                     IOCBF           equ	8010	;# 
  1168     1F4E                     ANSELC          equ	8014	;# 
  1169     1F4F                     WPUC            equ	8015	;# 
  1170     1F50                     ODCONC          equ	8016	;# 
  1171     1F51                     SLRCONC         equ	8017	;# 
  1172     1F52                     INLVLC          equ	8018	;# 
  1173     1F53                     IOCCP           equ	8019	;# 
  1174     1F54                     IOCCN           equ	8020	;# 
  1175     1F55                     IOCCF           equ	8021	;# 
  1176     1FE4                     STATUS_SHAD     equ	8164	;# 
  1177     1FE5                     WREG_SHAD       equ	8165	;# 
  1178     1FE6                     BSR_SHAD        equ	8166	;# 
  1179     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1180     1FE8                     FSR0_SHAD       equ	8168	;# 
  1181     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1182     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1183     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1184     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1185     1FED                     STKPTR          equ	8173	;# 
  1186     1FEE                     TOSL            equ	8174	;# 
  1187     1FEF                     TOSH            equ	8175	;# 
  1188     0000                     INDF0           equ	0	;# 
  1189     0001                     INDF1           equ	1	;# 
  1190     0002                     PCL             equ	2	;# 
  1191     0003                     STATUS          equ	3	;# 
  1192     0004                     FSR0L           equ	4	;# 
  1193     0005                     FSR0H           equ	5	;# 
  1194     0006                     FSR1L           equ	6	;# 
  1195     0007                     FSR1H           equ	7	;# 
  1196     0008                     BSR             equ	8	;# 
  1197     0009                     WREG            equ	9	;# 
  1198     000A                     PCLATH          equ	10	;# 
  1199     000B                     INTCON          equ	11	;# 
  1200     000C                     PORTA           equ	12	;# 
  1201     000D                     PORTB           equ	13	;# 
  1202     000E                     PORTC           equ	14	;# 
  1203     0012                     TRISA           equ	18	;# 
  1204     0013                     TRISB           equ	19	;# 
  1205     0014                     TRISC           equ	20	;# 
  1206     0018                     LATA            equ	24	;# 
  1207     0019                     LATB            equ	25	;# 
  1208     001A                     LATC            equ	26	;# 
  1209     009A                     CPCON           equ	154	;# 
  1210     009B                     ADRES           equ	155	;# 
  1211     009B                     ADRESL          equ	155	;# 
  1212     009C                     ADRESH          equ	156	;# 
  1213     009D                     ADCON0          equ	157	;# 
  1214     009E                     ADCON1          equ	158	;# 
  1215     009F                     ADACT           equ	159	;# 
  1216     010C                     RB4I2C          equ	268	;# 
  1217     010D                     RB6I2C          equ	269	;# 
  1218     0119                     RC1REG          equ	281	;# 
  1219     011A                     TX1REG          equ	282	;# 
  1220     011B                     SP1BRG          equ	283	;# 
  1221     011B                     SP1BRGL         equ	283	;# 
  1222     011C                     SP1BRGH         equ	284	;# 
  1223     011D                     RC1STA          equ	285	;# 
  1224     011E                     TX1STA          equ	286	;# 
  1225     011F                     BAUD1CON        equ	287	;# 
  1226     018C                     SSP1BUF         equ	396	;# 
  1227     018D                     SSP1ADD         equ	397	;# 
  1228     018E                     SSP1MSK         equ	398	;# 
  1229     018F                     SSP1STAT        equ	399	;# 
  1230     0190                     SSP1CON1        equ	400	;# 
  1231     0191                     SSP1CON2        equ	401	;# 
  1232     0192                     SSP1CON3        equ	402	;# 
  1233     020C                     TMR1            equ	524	;# 
  1234     020C                     TMR1L           equ	524	;# 
  1235     020D                     TMR1H           equ	525	;# 
  1236     020E                     T1CON           equ	526	;# 
  1237     020E                     TMR1CON         equ	526	;# 
  1238     020F                     T1GCON          equ	527	;# 
  1239     020F                     TMR1GCON        equ	527	;# 
  1240     0210                     T1GATE          equ	528	;# 
  1241     0210                     TMR1GATE        equ	528	;# 
  1242     0211                     T1CLK           equ	529	;# 
  1243     0211                     TMR1CLK         equ	529	;# 
  1244     0211                     PR1             equ	529	;# 
  1245     028C                     T2TMR           equ	652	;# 
  1246     028C                     TMR2            equ	652	;# 
  1247     028D                     T2PR            equ	653	;# 
  1248     028D                     PR2             equ	653	;# 
  1249     028E                     T2CON           equ	654	;# 
  1250     028F                     T2HLT           equ	655	;# 
  1251     0290                     T2CLKCON        equ	656	;# 
  1252     0291                     T2RST           equ	657	;# 
  1253     030C                     CCPR1           equ	780	;# 
  1254     030C                     CCPR1L          equ	780	;# 
  1255     030D                     CCPR1H          equ	781	;# 
  1256     030E                     CCP1CON         equ	782	;# 
  1257     030F                     CCP1CAP         equ	783	;# 
  1258     0310                     CCPR2           equ	784	;# 
  1259     0310                     CCPR2L          equ	784	;# 
  1260     0311                     CCPR2H          equ	785	;# 
  1261     0312                     CCP2CON         equ	786	;# 
  1262     0313                     CCP2CAP         equ	787	;# 
  1263     0314                     PWM3DC          equ	788	;# 
  1264     0314                     PWM3DCL         equ	788	;# 
  1265     0315                     PWM3DCH         equ	789	;# 
  1266     0316                     PWM3CON         equ	790	;# 
  1267     0318                     PWM4DC          equ	792	;# 
  1268     0318                     PWM4DCL         equ	792	;# 
  1269     0319                     PWM4DCH         equ	793	;# 
  1270     031A                     PWM4CON         equ	794	;# 
  1271     059C                     TMR0L           equ	1436	;# 
  1272     059C                     TMR0            equ	1436	;# 
  1273     059D                     TMR0H           equ	1437	;# 
  1274     059D                     PR0             equ	1437	;# 
  1275     059E                     T0CON0          equ	1438	;# 
  1276     059F                     T0CON1          equ	1439	;# 
  1277     070C                     PIR0            equ	1804	;# 
  1278     070D                     PIR1            equ	1805	;# 
  1279     070E                     PIR2            equ	1806	;# 
  1280     0716                     PIE0            equ	1814	;# 
  1281     0717                     PIE1            equ	1815	;# 
  1282     0718                     PIE2            equ	1816	;# 
  1283     080C                     WDTCON          equ	2060	;# 
  1284     0811                     BORCON          equ	2065	;# 
  1285     0813                     PCON0           equ	2067	;# 
  1286     0814                     PCON1           equ	2068	;# 
  1287     081A                     NVMADR          equ	2074	;# 
  1288     081A                     NVMADRL         equ	2074	;# 
  1289     081B                     NVMADRH         equ	2075	;# 
  1290     081C                     NVMDAT          equ	2076	;# 
  1291     081C                     NVMDATL         equ	2076	;# 
  1292     081D                     NVMDATH         equ	2077	;# 
  1293     081E                     NVMCON1         equ	2078	;# 
  1294     081F                     NVMCON2         equ	2079	;# 
  1295     088E                     OSCCON          equ	2190	;# 
  1296     0890                     OSCSTAT         equ	2192	;# 
  1297     0891                     OSCEN           equ	2193	;# 
  1298     0892                     OSCTUNE         equ	2194	;# 
  1299     0893                     OSCFRQ          equ	2195	;# 
  1300     090C                     FVRCON          equ	2316	;# 
  1301     1E8F                     PPSLOCK         equ	7823	;# 
  1302     1E90                     INTPPS          equ	7824	;# 
  1303     1E91                     T0CKIPPS        equ	7825	;# 
  1304     1E92                     T1CKIPPS        equ	7826	;# 
  1305     1E93                     T1GPPS          equ	7827	;# 
  1306     1E9C                     T2INPPS         equ	7836	;# 
  1307     1EA1                     CCP1PPS         equ	7841	;# 
  1308     1EA2                     CCP2PPS         equ	7842	;# 
  1309     1EC3                     ADACTPPS        equ	7875	;# 
  1310     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1311     1EC6                     SSP1DATPPS      equ	7878	;# 
  1312     1EC7                     SSP1SSPPS       equ	7879	;# 
  1313     1ECB                     RX1PPS          equ	7883	;# 
  1314     1ECB                     RX1DTPPS        equ	7883	;# 
  1315     1ECB                     RXPPS           equ	7883	;# 
  1316     1ECC                     CK1PPS          equ	7884	;# 
  1317     1ECC                     TX1CKPPS        equ	7884	;# 
  1318     1ECC                     CKPPS           equ	7884	;# 
  1319     1F10                     RA0PPS          equ	7952	;# 
  1320     1F11                     RA1PPS          equ	7953	;# 
  1321     1F12                     RA2PPS          equ	7954	;# 
  1322     1F14                     RA4PPS          equ	7956	;# 
  1323     1F15                     RA5PPS          equ	7957	;# 
  1324     1F1C                     RB4PPS          equ	7964	;# 
  1325     1F1D                     RB5PPS          equ	7965	;# 
  1326     1F1E                     RB6PPS          equ	7966	;# 
  1327     1F1F                     RB7PPS          equ	7967	;# 
  1328     1F20                     RC0PPS          equ	7968	;# 
  1329     1F21                     RC1PPS          equ	7969	;# 
  1330     1F22                     RC2PPS          equ	7970	;# 
  1331     1F23                     RC3PPS          equ	7971	;# 
  1332     1F24                     RC4PPS          equ	7972	;# 
  1333     1F25                     RC5PPS          equ	7973	;# 
  1334     1F26                     RC6PPS          equ	7974	;# 
  1335     1F27                     RC7PPS          equ	7975	;# 
  1336     1F38                     ANSELA          equ	7992	;# 
  1337     1F39                     WPUA            equ	7993	;# 
  1338     1F3A                     ODCONA          equ	7994	;# 
  1339     1F3B                     SLRCONA         equ	7995	;# 
  1340     1F3C                     INLVLA          equ	7996	;# 
  1341     1F3D                     IOCAP           equ	7997	;# 
  1342     1F3E                     IOCAN           equ	7998	;# 
  1343     1F3F                     IOCAF           equ	7999	;# 
  1344     1F43                     ANSELB          equ	8003	;# 
  1345     1F44                     WPUB            equ	8004	;# 
  1346     1F45                     ODCONB          equ	8005	;# 
  1347     1F46                     SLRCONB         equ	8006	;# 
  1348     1F47                     INLVLB          equ	8007	;# 
  1349     1F48                     IOCBP           equ	8008	;# 
  1350     1F49                     IOCBN           equ	8009	;# 
  1351     1F4A                     IOCBF           equ	8010	;# 
  1352     1F4E                     ANSELC          equ	8014	;# 
  1353     1F4F                     WPUC            equ	8015	;# 
  1354     1F50                     ODCONC          equ	8016	;# 
  1355     1F51                     SLRCONC         equ	8017	;# 
  1356     1F52                     INLVLC          equ	8018	;# 
  1357     1F53                     IOCCP           equ	8019	;# 
  1358     1F54                     IOCCN           equ	8020	;# 
  1359     1F55                     IOCCF           equ	8021	;# 
  1360     1FE4                     STATUS_SHAD     equ	8164	;# 
  1361     1FE5                     WREG_SHAD       equ	8165	;# 
  1362     1FE6                     BSR_SHAD        equ	8166	;# 
  1363     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1364     1FE8                     FSR0_SHAD       equ	8168	;# 
  1365     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1366     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1367     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1368     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1369     1FED                     STKPTR          equ	8173	;# 
  1370     1FEE                     TOSL            equ	8174	;# 
  1371     1FEF                     TOSH            equ	8175	;# 
  1372                           
  1373 ;; Function _SPI1_Deinitialize is unused but had its address taken
  1374     0000                     _SPI1_Deinitialize equ	0
  1375                           
  1376 ;; Function _SPI1_Close is unused but had its address taken
  1377     0000                     _SPI1_Close     equ	0
  1378                           
  1379 ;; Function _SPI1_BufferExchange is unused but had its address taken
  1380     0000                     _SPI1_BufferExchange equ	0
  1381                           
  1382 ;; Function _SPI1_BufferRead is unused but had its address taken
  1383     0000                     _SPI1_BufferRead equ	0
  1384                           
  1385 ;; Function _SPI1_ByteExchange is unused but had its address taken
  1386     0000                     _SPI1_ByteExchange equ	0
  1387                           
  1388 ;; Function _SPI1_ByteWrite is unused but had its address taken
  1389     0000                     _SPI1_ByteWrite equ	0
  1390                           
  1391 ;; Function _SPI1_ByteRead is unused but had its address taken
  1392     0000                     _SPI1_ByteRead  equ	0
  1393                           
  1394 ;; Function _SPI1_IsRxReady is unused but had its address taken
  1395     0000                     _SPI1_IsRxReady equ	0
  1396                           
  1397 ;; Function _SPI1_IsTxReady is unused but had its address taken
  1398     0000                     _SPI1_IsTxReady equ	0
  1399                           
  1400 ;; Function _TMR0_Deinitialize is unused but had its address taken
  1401     0000                     _TMR0_Deinitialize equ	0
  1402                           
  1403 ;; Function _TMR0_Start is unused but had its address taken
  1404     0000                     _TMR0_Start     equ	0
  1405                           
  1406 ;; Function _TMR0_Stop is unused but had its address taken
  1407     0000                     _TMR0_Stop      equ	0
  1408                           
  1409 ;; Function _TMR0_CounterGet is unused but had its address taken
  1410     0000                     _TMR0_CounterGet equ	0
  1411                           
  1412 ;; Function _TMR0_CounterSet is unused but had its address taken
  1413     0000                     _TMR0_CounterSet equ	0
  1414                           
  1415 ;; Function _TMR0_PeriodSet is unused but had its address taken
  1416     0000                     _TMR0_PeriodSet equ	0
  1417                           
  1418 ;; Function _TMR0_PeriodGet is unused but had its address taken
  1419     0000                     _TMR0_PeriodGet equ	0
  1420                           
  1421 ;; Function _TMR0_MaxCountGet is unused but had its address taken
  1422     0000                     _TMR0_MaxCountGet equ	0
  1423                           
  1424 ;; Function _TMR0_OverflowCallbackRegister is unused but had its address taken
  1425     0000                     _TMR0_OverflowCallbackRegister equ	0
  1426                           
  1427                           	psect	idataBANK0
  1428     022D                     __pidataBANK0:
  1429                           
  1430                           ;initializer for _divider
  1431     022D  34FF               	retlw	255
  1432     022E  34FF               	retlw	255
  1433                           
  1434                           	psect	stringtext1
  1435     0121                     __pstringtext1:
  1436     0121                     _SPI1_Client:
  1437     0121  340E               	retlw	low _SPI1_Initialize
  1438     0122  3402               	retlw	high _SPI1_Initialize
  1439     0123  3400               	retlw	0
  1440     0124  3400               	retlw	0
  1441     0125  3438               	retlw	low _SPI1_Open
  1442     0126  3400               	retlw	high _SPI1_Open
  1443     0127  3400               	retlw	0
  1444     0128  3400               	retlw	0
  1445     0129  3400               	retlw	0
  1446     012A  3400               	retlw	0
  1447     012B  3400               	retlw	0
  1448     012C  3400               	retlw	0
  1449     012D  34E2               	retlw	low _SPI1_BufferWrite
  1450     012E  3400               	retlw	high _SPI1_BufferWrite
  1451     012F  3400               	retlw	0
  1452     0130  3400               	retlw	0
  1453     0131  3400               	retlw	0
  1454     0132  3400               	retlw	0
  1455     0133  3400               	retlw	0
  1456     0134  3400               	retlw	0
  1457     0135  3400               	retlw	0
  1458     0136  3400               	retlw	0
  1459     0137  3400               	retlw	0
  1460     0138  3400               	retlw	0
  1461     0139  3400               	retlw	0
  1462     013A  3400               	retlw	0
  1463     013B  3400               	retlw	0
  1464     013C  3400               	retlw	0
  1465     013D                     __end_of_SPI1_Client:
  1466                           
  1467                           	psect	stringtext2
  1468     0157                     __pstringtext2:
  1469     0157                     _spi1_configuration:
  1470     0157  3440               	retlw	64
  1471     0158  3404               	retlw	4
  1472     0159  3410               	retlw	16
  1473     015A  3401               	retlw	1
  1474     015B  3400               	retlw	0
  1475     015C  3400               	retlw	0
  1476     015D  3404               	retlw	4
  1477     015E  3410               	retlw	16
  1478     015F  3401               	retlw	1
  1479     0160  3400               	retlw	0
  1480     0161  3440               	retlw	64
  1481     0162  3414               	retlw	20
  1482     0163  3410               	retlw	16
  1483     0164  3401               	retlw	1
  1484     0165  3400               	retlw	0
  1485     0166  3400               	retlw	0
  1486     0167  3414               	retlw	20
  1487     0168  3410               	retlw	16
  1488     0169  3401               	retlw	1
  1489     016A  3400               	retlw	0
  1490     016B  3464               	retlw	100
  1491     016C  3404               	retlw	4
  1492     016D  3410               	retlw	16
  1493     016E  3400               	retlw	0
  1494     016F  3400               	retlw	0
  1495     0170                     __end_of_spi1_configuration:
  1496                           
  1497                           	psect	stringtext3
  1498     0170                     __pstringtext3:
  1499     0170                     _Timer0:
  1500     0170  3486               	retlw	low _TMR0_Initialize
  1501     0171  3401               	retlw	high _TMR0_Initialize
  1502     0172  3400               	retlw	0
  1503     0173  3400               	retlw	0
  1504     0174  3400               	retlw	0
  1505     0175  3400               	retlw	0
  1506     0176  3400               	retlw	0
  1507     0177  3400               	retlw	0
  1508     0178  3400               	retlw	0
  1509     0179  3400               	retlw	0
  1510     017A  3400               	retlw	0
  1511     017B  3400               	retlw	0
  1512     017C  3400               	retlw	0
  1513     017D  3400               	retlw	0
  1514     017E  3400               	retlw	0
  1515     017F  3400               	retlw	0
  1516     0180  3400               	retlw	0
  1517     0181  3400               	retlw	0
  1518     0182  3400               	retlw	0
  1519     0183  3400               	retlw	0
  1520     0184  3400               	retlw	0
  1521     0185  3400               	retlw	0
  1522     0186                     __end_of_Timer0:
  1523                           
  1524                           	psect	nvBANK0
  1525     0020                     __pnvBANK0:
  1526     0020                     _TMR0_OverflowCallback:
  1527     0020                     	ds	2
  1528     0022                     _INT_InterruptHandler:
  1529     0022                     	ds	2
  1530     0018                     _LATAbits       set	24
  1531     0014                     _TRISC          set	20
  1532     0013                     _TRISB          set	19
  1533     0012                     _TRISA          set	18
  1534     001A                     _LATC           set	26
  1535     0019                     _LATB           set	25
  1536     0018                     _LATA           set	24
  1537     000B                     _INTCONbits     set	11
  1538     018C                     _SSP1BUF        set	396
  1539     0190                     _SSP1CON1bits   set	400
  1540     018D                     _SSP1ADD        set	397
  1541     0192                     _SSP1CON3       set	402
  1542     0190                     _SSP1CON1       set	400
  1543     018F                     _SSP1STAT       set	399
  1544     059E                     _T0CON0bits     set	1438
  1545     059E                     _T0CON0         set	1438
  1546     059F                     _T0CON1         set	1439
  1547     059C                     _TMR0L          set	1436
  1548     059D                     _TMR0H          set	1437
  1549     0716                     _PIE0bits       set	1814
  1550     070C                     _PIR0bits       set	1804
  1551     070D                     _PIR1bits       set	1805
  1552     0717                     _PIE1bits       set	1815
  1553     0892                     _OSCTUNE        set	2194
  1554     0893                     _OSCFRQ         set	2195
  1555     0891                     _OSCEN          set	2193
  1556     1EC5                     _SSP1CLKPPS     set	7877
  1557     1E90                     _INTPPS         set	7824
  1558     1EC7                     _SSP1SSPPS      set	7879
  1559     1EC6                     _SSP1DATPPS     set	7878
  1560     1F55                     _IOCCF          set	8021
  1561     1F54                     _IOCCN          set	8020
  1562     1F53                     _IOCCP          set	8019
  1563     1F4A                     _IOCBF          set	8010
  1564     1F49                     _IOCBN          set	8009
  1565     1F48                     _IOCBP          set	8008
  1566     1F3F                     _IOCAF          set	7999
  1567     1F3E                     _IOCAN          set	7998
  1568     1F3D                     _IOCAP          set	7997
  1569     1F1C                     _RB4PPS         set	7964
  1570     1F1F                     _RB7PPS         set	7967
  1571     1F52                     _INLVLC         set	8018
  1572     1F47                     _INLVLB         set	8007
  1573     1F3C                     _INLVLA         set	7996
  1574     1F51                     _SLRCONC        set	8017
  1575     1F46                     _SLRCONB        set	8006
  1576     1F3B                     _SLRCONA        set	7995
  1577     1F50                     _ODCONC         set	8016
  1578     1F45                     _ODCONB         set	8005
  1579     1F3A                     _ODCONA         set	7994
  1580     1F4F                     _WPUCbits       set	8015
  1581     1F4F                     _WPUC           set	8015
  1582     1F44                     _WPUB           set	8004
  1583     1F39                     _WPUA           set	7993
  1584     1F4E                     _ANSELC         set	8014
  1585     1F43                     _ANSELB         set	8003
  1586     1F38                     _ANSELA         set	7992
  1587                           
  1588                           	psect	cinit
  1589     0027                     start_initialization:	
  1590                           ; #config settings
  1591                           
  1592     0027                     __initialization:
  1593                           
  1594                           ; Initialize objects allocated to BANK0
  1595     0027  3182  222D  3180   	fcall	__pidataBANK0	;fetch initializer
  1596     002A  00A7               	movwf	__pdataBANK0& (0+127)
  1597     002B  3182  222E  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1598     002E  00A8               	movwf	(__pdataBANK0+1)& (0+127)
  1599                           
  1600                           ; Clear objects allocated to COMMON
  1601     002F  01FC               	clrf	__pbssCOMMON& (0+127)
  1602     0030  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1603                           
  1604                           ; Clear objects allocated to BANK0
  1605     0031  01A4               	clrf	__pbssBANK0& (0+127)
  1606     0032  01A5               	clrf	(__pbssBANK0+1)& (0+127)
  1607     0033  01A6               	clrf	(__pbssBANK0+2)& (0+127)
  1608     0034                     end_of_initialization:	
  1609                           ;End of C runtime variable initialization code
  1610                           
  1611     0034                     __end_of__initialization:
  1612     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1613     0035  0140               	movlb	0
  1614     0036  3181  293D         	ljmp	_main	;jump to C main() function
  1615                           
  1616                           	psect	bssCOMMON
  1617     007C                     __pbssCOMMON:
  1618     007C                     _tmr0PeriodCount:
  1619     007C                     	ds	2
  1620                           
  1621                           	psect	bssBANK0
  1622     0024                     __pbssBANK0:
  1623     0024                     _led_state:
  1624     0024                     	ds	1
  1625     0025                     _timerOverflow:
  1626     0025                     	ds	1
  1627     0026                     _pushed:
  1628     0026                     	ds	1
  1629                           
  1630                           	psect	dataBANK0
  1631     0027                     __pdataBANK0:
  1632     0027                     _divider:
  1633     0027                     	ds	2
  1634                           
  1635                           	psect	cstackCOMMON
  1636     0070                     __pcstackCOMMON:
  1637     0070                     ?_SPI1_Initialize:
  1638     0070                     ?_SPI1_BufferWrite:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641     0070                     ?_INT_SetInterruptHandler:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644     0070                     ?_INT_DefaultInterruptHandler:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647     0070                     ?_INT_ISR:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650     0070                     ?_TMR0_ISR:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653     0070                     ?_INT_CallBack:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656     0070                     ?_TMR0_Initialize:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659     0070                     ?_TMR0_DefaultOverflowCallback:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662     0070                     ?_toggle_led:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665     0070                     ?_INTERRUPT_Initialize:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668     0070                     ?_INTERRUPT_InterruptManager:	
  1669                           ; 1 bytes @ 0x0
  1670                           
  1671     0070                     ?_CLOCK_Initialize:	
  1672                           ; 1 bytes @ 0x0
  1673                           
  1674     0070                     ?_PIN_MANAGER_Initialize:	
  1675                           ; 1 bytes @ 0x0
  1676                           
  1677     0070                     ?_SYSTEM_Initialize:	
  1678                           ; 1 bytes @ 0x0
  1679                           
  1680     0070                     ?_main:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683     0070                     ?___wmul:	
  1684                           ; 2 bytes @ 0x0
  1685                           
  1686     0070                     SPI1_BufferWrite@bufferData:	
  1687                           ; 2 bytes @ 0x0
  1688                           
  1689     0070                     INT_SetInterruptHandler@InterruptHandler:	
  1690                           ; 1 bytes @ 0x0
  1691                           
  1692     0070                     ___wmul@multiplier:	
  1693                           ; 2 bytes @ 0x0
  1694                           
  1695     0070                     ??_SPI1_Initialize:	
  1696                           ; 2 bytes @ 0x0
  1697                           
  1698     0070                     ??_INT_DefaultInterruptHandler:	
  1699                           ; 1 bytes @ 0x0
  1700                           
  1701     0070                     ??_INT_ISR:	
  1702                           ; 1 bytes @ 0x0
  1703                           
  1704     0070                     ??_TMR0_ISR:	
  1705                           ; 1 bytes @ 0x0
  1706                           
  1707     0070                     ??_INT_CallBack:	
  1708                           ; 1 bytes @ 0x0
  1709                           
  1710     0070                     ??_TMR0_Initialize:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713     0070                     ??_TMR0_DefaultOverflowCallback:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716     0070                     ??_toggle_led:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719     0070                     ??_INTERRUPT_InterruptManager:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722     0070                     ??_CLOCK_Initialize:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725     0070                     ??_PIN_MANAGER_Initialize:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728                           
  1729                           ; 1 bytes @ 0x0
  1730     0070                     	ds	1
  1731     0071                     SPI1_BufferWrite@bufferSize:
  1732                           
  1733                           ; 2 bytes @ 0x1
  1734     0071                     	ds	1
  1735     0072                     ___wmul@multiplicand:
  1736     0072                     ??_INT_SetInterruptHandler:	
  1737                           ; 2 bytes @ 0x2
  1738                           
  1739     0072                     ??_INTERRUPT_Initialize:	
  1740                           ; 1 bytes @ 0x2
  1741                           
  1742     0072                     ??_SYSTEM_Initialize:	
  1743                           ; 1 bytes @ 0x2
  1744                           
  1745                           
  1746                           ; 1 bytes @ 0x2
  1747     0072                     	ds	1
  1748     0073                     SPI1_BufferWrite@bufferInputSize:
  1749     0073                     ??_SPI1_BufferWrite:	
  1750                           ; 2 bytes @ 0x3
  1751                           
  1752                           
  1753                           ; 1 bytes @ 0x3
  1754     0073                     	ds	1
  1755     0074                     ___wmul@product:
  1756     0074                     ??___wmul:	
  1757                           ; 2 bytes @ 0x4
  1758                           
  1759                           
  1760                           ; 1 bytes @ 0x4
  1761     0074                     	ds	1
  1762     0075                     SPI1_BufferWrite@bufferInput:
  1763                           
  1764                           ; 1 bytes @ 0x5
  1765     0075                     	ds	1
  1766     0076                     ?_SPI1_Open:
  1767     0076                     SPI1_Open@spiConfigIndex:	
  1768                           ; 1 bytes @ 0x6
  1769                           
  1770                           
  1771                           ; 1 bytes @ 0x6
  1772     0076                     	ds	1
  1773     0077                     ??_SPI1_Open:
  1774                           
  1775                           ; 1 bytes @ 0x7
  1776     0077                     	ds	2
  1777     0079                     SPI1_Open@returnValue:
  1778                           
  1779                           ; 1 bytes @ 0x9
  1780     0079                     	ds	1
  1781     007A                     ?_spi_send_data:
  1782     007A                     spi_send_data@data:	
  1783                           ; 1 bytes @ 0xA
  1784                           
  1785                           
  1786                           ; 1 bytes @ 0xA
  1787     007A                     	ds	1
  1788     007B                     main@spiData:
  1789     007B                     ??_spi_send_data:	
  1790                           ; 1 bytes @ 0xB
  1791                           
  1792     007B                     ??_main:	
  1793                           ; 1 bytes @ 0xB
  1794                           
  1795                           
  1796                           ; 1 bytes @ 0xB
  1797     007B                     	ds	1
  1798                           
  1799                           	psect	maintext
  1800     013D                     __pmaintext:	
  1801 ;;
  1802 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1803 ;;
  1804 ;; *************** function _main *****************
  1805 ;; Defined at:
  1806 ;;		line 45 in file "main.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  spiData         1   11[COMMON] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  2  379[None  ] int 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : B3F/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1820 ;;      Params:         0       0       0       0       0       0       0       0
  1821 ;;      Locals:         1       0       0       0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0
  1823 ;;      Totals:         1       0       0       0       0       0       0       0
  1824 ;;Total ram usage:        1 bytes
  1825 ;; Hardware stack levels required when called: 7
  1826 ;; This function calls:
  1827 ;;		_SYSTEM_Initialize
  1828 ;;		_spi_send_data
  1829 ;;		_toggle_led
  1830 ;; This function is called by:
  1831 ;;		Startup code after reset
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835     013D                     _main:	
  1836                           ;psect for function _main
  1837                           
  1838     013D                     l1370:	
  1839                           ;incstack = 0
  1840                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1841                           
  1842                           
  1843                           ;main.c: 46:     SYSTEM_Initialize();
  1844     013D  3181  21D5  3181   	fcall	_SYSTEM_Initialize
  1845     0140                     l1372:
  1846                           
  1847                           ;main.c: 52:     (INTCONbits.GIE = 1);
  1848     0140  178B               	bsf	11,7	;volatile
  1849     0141                     l1374:
  1850                           
  1851                           ;main.c: 58:     (INTCONbits.PEIE = 1);
  1852     0141  170B               	bsf	11,6	;volatile
  1853     0142                     l1376:
  1854                           
  1855                           ;main.c: 62:     uint8_t spiData={0x29,0x67,0x77,0x64};
  1856     0142  3029               	movlw	41
  1857     0143  00FB               	movwf	main@spiData
  1858     0144                     l1378:
  1859                           
  1860                           ;main.c: 65:         if (timerOverflow) {
  1861     0144  0140               	movlb	0	; select bank0
  1862     0145  0825               	movf	_timerOverflow,w
  1863     0146  1903               	btfsc	3,2
  1864     0147  2949               	goto	u471
  1865     0148  294A               	goto	u470
  1866     0149                     u471:
  1867     0149  2944               	goto	l1378
  1868     014A                     u470:
  1869     014A                     l1380:
  1870                           
  1871                           ;main.c: 66:             toggle_led();
  1872     014A  3181  21E5  3181   	fcall	_toggle_led
  1873     014D                     l1382:
  1874                           
  1875                           ;main.c: 67:             timerOverflow = 0;
  1876     014D  0140               	movlb	0	; select bank0
  1877     014E  01A5               	clrf	_timerOverflow
  1878     014F                     l1384:
  1879                           
  1880                           ;main.c: 68:               spi_send_data(&spiData);
  1881     014F  307B               	movlw	(low (main@spiData| 0))& (0+255)
  1882     0150  00FA               	movwf	spi_send_data@data
  1883     0151  3181  21B0  3181   	fcall	_spi_send_data
  1884     0154  2944               	goto	l1378
  1885     0155  3180  2825         	ljmp	start
  1886     0157                     __end_of_main:
  1887                           
  1888                           	psect	text1
  1889     01E5                     __ptext1:	
  1890 ;; *************** function _toggle_led *****************
  1891 ;; Defined at:
  1892 ;;		line 78 in file "main.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1906 ;;      Params:         0       0       0       0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0
  1909 ;;      Totals:         0       0       0       0       0       0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 4
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920     01E5                     _toggle_led:	
  1921                           ;psect for function _toggle_led
  1922                           
  1923     01E5                     l1346:	
  1924                           ;incstack = 0
  1925                           ; Regs used in _toggle_led: [wreg+status,2+status,0]
  1926                           
  1927                           
  1928                           ;main.c: 79:     led_state = ~led_state;
  1929     01E5  0140               	movlb	0	; select bank0
  1930     01E6  0324               	decf	_led_state,w
  1931     01E7  1D03               	btfss	3,2
  1932     01E8  29EA               	goto	u391
  1933     01E9  29EC               	goto	u390
  1934     01EA                     u391:
  1935     01EA  3001               	movlw	1
  1936     01EB  29ED               	goto	u400
  1937     01EC                     u390:
  1938     01EC  3000               	movlw	0
  1939     01ED                     u400:
  1940     01ED  00A4               	movwf	_led_state
  1941     01EE                     l1348:
  1942                           
  1943                           ;main.c: 80:     LATAbits.LATA2 = led_state;
  1944     01EE  0C24               	rrf	_led_state,w
  1945     01EF  1C03               	skipc
  1946     01F0  1118               	bcf	24,2	;volatile
  1947     01F1  1803               	skipnc
  1948     01F2  1518               	bsf	24,2	;volatile
  1949     01F3                     l387:
  1950     01F3  0008               	return
  1951     01F4                     __end_of_toggle_led:
  1952                           
  1953                           	psect	text2
  1954     01B0                     __ptext2:	
  1955 ;; *************** function _spi_send_data *****************
  1956 ;; Defined at:
  1957 ;;		line 83 in file "main.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  data            1   10[COMMON] PTR unsigned char 
  1960 ;;		 -> main@spiData(1), 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1972 ;;      Params:         1       0       0       0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0
  1975 ;;      Totals:         1       0       0       0       0       0       0       0
  1976 ;;Total ram usage:        1 bytes
  1977 ;; Hardware stack levels used: 1
  1978 ;; Hardware stack levels required when called: 6
  1979 ;; This function calls:
  1980 ;;		_SPI1_BufferWrite
  1981 ;;		_SPI1_Open
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987     01B0                     _spi_send_data:	
  1988                           ;psect for function _spi_send_data
  1989                           
  1990     01B0                     l1350:	
  1991                           ;incstack = 0
  1992                           ; Regs used in _spi_send_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1993                           
  1994                           
  1995                           ;main.c: 86:     if (SPI1_Open(0)) {
  1996     01B0  01F6               	clrf	SPI1_Open@spiConfigIndex
  1997     01B1  3180  2038  3181   	fcall	_SPI1_Open
  1998     01B4  3A00               	xorlw	0
  1999     01B5  1903               	skipnz
  2000     01B6  29B8               	goto	u411
  2001     01B7  29B9               	goto	u410
  2002     01B8                     u411:
  2003     01B8  29C2               	goto	l394
  2004     01B9                     u410:
  2005     01B9                     l1354:
  2006                           
  2007                           ;main.c: 88:         SPI1_BufferWrite(&data,4);
  2008     01B9  307A               	movlw	(low (spi_send_data@data| 0))& (0+255)
  2009     01BA  00F0               	movwf	SPI1_BufferWrite@bufferData
  2010     01BB  3004               	movlw	4
  2011     01BC  00F1               	movwf	SPI1_BufferWrite@bufferSize
  2012     01BD  3000               	movlw	0
  2013     01BE  00F2               	movwf	SPI1_BufferWrite@bufferSize+1
  2014     01BF  3180  20E2  3181   	fcall	_SPI1_BufferWrite
  2015     01C2                     l394:
  2016     01C2  0008               	return
  2017     01C3                     __end_of_spi_send_data:
  2018                           
  2019                           	psect	text3
  2020     0038                     __ptext3:	
  2021 ;; *************** function _SPI1_Open *****************
  2022 ;; Defined at:
  2023 ;;		line 84 in file "mcc_generated_files/spi/src/mssp1.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  spiConfigInd    1    6[COMMON] unsigned char 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  returnValue     1    9[COMMON] _Bool 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      _Bool 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2037 ;;      Params:         1       0       0       0       0       0       0       0
  2038 ;;      Locals:         1       0       0       0       0       0       0       0
  2039 ;;      Temps:          2       0       0       0       0       0       0       0
  2040 ;;      Totals:         4       0       0       0       0       0       0       0
  2041 ;;Total ram usage:        4 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 5
  2044 ;; This function calls:
  2045 ;;		___wmul
  2046 ;; This function is called by:
  2047 ;;		_spi_send_data
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051     0038                     _SPI1_Open:	
  2052                           ;psect for function _SPI1_Open
  2053                           
  2054     0038                     l1222:	
  2055                           ;incstack = 0
  2056                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2057                           
  2058     0038                     l1224:
  2059                           
  2060                           ;mcc_generated_files/spi/src/mssp1.c: 87:     if (SSP1CON1bits.SSPEN == 0)
  2061     0038  0143               	movlb	3	; select bank3
  2062     0039  1A90               	btfsc	16,5	;volatile
  2063     003A  283C               	goto	u331
  2064     003B  283D               	goto	u330
  2065     003C                     u331:
  2066     003C  28A1               	goto	l1232
  2067     003D                     u330:
  2068     003D                     l1226:
  2069                           
  2070                           ;mcc_generated_files/spi/src/mssp1.c: 88:     {;mcc_generated_files/spi/src/mssp1.c: 89:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
  2071     003D  0876               	movf	SPI1_Open@spiConfigIndex,w
  2072     003E  00F7               	movwf	??_SPI1_Open
  2073     003F  01F8               	clrf	??_SPI1_Open+1
  2074     0040  0877               	movf	??_SPI1_Open,w
  2075     0041  00F0               	movwf	___wmul@multiplier
  2076     0042  0878               	movf	??_SPI1_Open+1,w
  2077     0043  00F1               	movwf	___wmul@multiplier+1
  2078     0044  3005               	movlw	5
  2079     0045  00F2               	movwf	___wmul@multiplicand
  2080     0046  3000               	movlw	0
  2081     0047  00F3               	movwf	___wmul@multiplicand+1
  2082     0048  3181  2102  3180   	fcall	___wmul
  2083     004B  3057               	movlw	low _spi1_configuration
  2084     004C  0770               	addwf	?___wmul,w
  2085     004D  0084               	movwf	4
  2086     004E  3001               	movlw	high _spi1_configuration
  2087     004F  3D71               	addwfc	?___wmul+1,w
  2088     0050  3880               	iorlw	128
  2089     0051  0085               	movwf	5
  2090     0052  0800               	movf	0,w	;code access
  2091     0053  0143               	movlb	3	; select bank3
  2092     0054  008F               	movwf	15	;volatile
  2093                           
  2094                           ;mcc_generated_files/spi/src/mssp1.c: 90:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
  2095     0055  0876               	movf	SPI1_Open@spiConfigIndex,w
  2096     0056  00F7               	movwf	??_SPI1_Open
  2097     0057  01F8               	clrf	??_SPI1_Open+1
  2098     0058  0877               	movf	??_SPI1_Open,w
  2099     0059  00F0               	movwf	___wmul@multiplier
  2100     005A  0878               	movf	??_SPI1_Open+1,w
  2101     005B  00F1               	movwf	___wmul@multiplier+1
  2102     005C  3005               	movlw	5
  2103     005D  00F2               	movwf	___wmul@multiplicand
  2104     005E  3000               	movlw	0
  2105     005F  00F3               	movwf	___wmul@multiplicand+1
  2106     0060  3181  2102  3180   	fcall	___wmul
  2107     0063  3058               	movlw	low (_spi1_configuration+1)
  2108     0064  0770               	addwf	?___wmul,w
  2109     0065  0084               	movwf	4
  2110     0066  3001               	movlw	high (_spi1_configuration+1)
  2111     0067  3D71               	addwfc	?___wmul+1,w
  2112     0068  3880               	iorlw	128
  2113     0069  0085               	movwf	5
  2114     006A  0800               	movf	0,w	;code access
  2115     006B  0143               	movlb	3	; select bank3
  2116     006C  0090               	movwf	16	;volatile
  2117                           
  2118                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
  2119     006D  0876               	movf	SPI1_Open@spiConfigIndex,w
  2120     006E  00F7               	movwf	??_SPI1_Open
  2121     006F  01F8               	clrf	??_SPI1_Open+1
  2122     0070  0877               	movf	??_SPI1_Open,w
  2123     0071  00F0               	movwf	___wmul@multiplier
  2124     0072  0878               	movf	??_SPI1_Open+1,w
  2125     0073  00F1               	movwf	___wmul@multiplier+1
  2126     0074  3005               	movlw	5
  2127     0075  00F2               	movwf	___wmul@multiplicand
  2128     0076  3000               	movlw	0
  2129     0077  00F3               	movwf	___wmul@multiplicand+1
  2130     0078  3181  2102  3180   	fcall	___wmul
  2131     007B  3059               	movlw	low (_spi1_configuration+2)
  2132     007C  0770               	addwf	?___wmul,w
  2133     007D  0084               	movwf	4
  2134     007E  3001               	movlw	high (_spi1_configuration+2)
  2135     007F  3D71               	addwfc	?___wmul+1,w
  2136     0080  3880               	iorlw	128
  2137     0081  0085               	movwf	5
  2138     0082  0800               	movf	0,w	;code access
  2139     0083  0143               	movlb	3	; select bank3
  2140     0084  0092               	movwf	18	;volatile
  2141                           
  2142                           ;mcc_generated_files/spi/src/mssp1.c: 92:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
  2143     0085  0876               	movf	SPI1_Open@spiConfigIndex,w
  2144     0086  00F7               	movwf	??_SPI1_Open
  2145     0087  01F8               	clrf	??_SPI1_Open+1
  2146     0088  0877               	movf	??_SPI1_Open,w
  2147     0089  00F0               	movwf	___wmul@multiplier
  2148     008A  0878               	movf	??_SPI1_Open+1,w
  2149     008B  00F1               	movwf	___wmul@multiplier+1
  2150     008C  3005               	movlw	5
  2151     008D  00F2               	movwf	___wmul@multiplicand
  2152     008E  3000               	movlw	0
  2153     008F  00F3               	movwf	___wmul@multiplicand+1
  2154     0090  3181  2102  3180   	fcall	___wmul
  2155     0093  305A               	movlw	low (_spi1_configuration+3)
  2156     0094  0770               	addwf	?___wmul,w
  2157     0095  0084               	movwf	4
  2158     0096  3001               	movlw	high (_spi1_configuration+3)
  2159     0097  3D71               	addwfc	?___wmul+1,w
  2160     0098  3880               	iorlw	128
  2161     0099  0085               	movwf	5
  2162     009A  0800               	movf	0,w	;code access
  2163     009B  0143               	movlb	3	; select bank3
  2164     009C  008D               	movwf	13	;volatile
  2165     009D                     l1228:
  2166                           
  2167                           ;mcc_generated_files/spi/src/mssp1.c: 94:         SSP1CON1bits.SSPEN = 1;
  2168     009D  1690               	bsf	16,5	;volatile
  2169     009E                     l1230:
  2170                           
  2171                           ;mcc_generated_files/spi/src/mssp1.c: 96:         returnValue = 1;
  2172     009E  3001               	movlw	1
  2173     009F  00F9               	movwf	SPI1_Open@returnValue
  2174                           
  2175                           ;mcc_generated_files/spi/src/mssp1.c: 97:     }
  2176     00A0  28A2               	goto	l1234
  2177     00A1                     l1232:
  2178                           
  2179                           ;mcc_generated_files/spi/src/mssp1.c: 99:     {;mcc_generated_files/spi/src/mssp1.c: 100
      +                          :         returnValue = 0;
  2180     00A1  01F9               	clrf	SPI1_Open@returnValue
  2181     00A2                     l1234:
  2182                           
  2183                           ;mcc_generated_files/spi/src/mssp1.c: 102:     return returnValue;
  2184     00A2  0879               	movf	SPI1_Open@returnValue,w
  2185     00A3                     l55:
  2186     00A3  0008               	return
  2187     00A4                     __end_of_SPI1_Open:
  2188                           
  2189                           	psect	text4
  2190     0102                     __ptext4:	
  2191 ;; *************** function ___wmul *****************
  2192 ;; Defined at:
  2193 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  multiplier      2    0[COMMON] unsigned int 
  2196 ;;  multiplicand    2    2[COMMON] unsigned int 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  product         2    4[COMMON] unsigned int 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  2    0[COMMON] unsigned int 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2208 ;;      Params:         4       0       0       0       0       0       0       0
  2209 ;;      Locals:         2       0       0       0       0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0
  2211 ;;      Totals:         6       0       0       0       0       0       0       0
  2212 ;;Total ram usage:        6 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 4
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_SPI1_Open
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222     0102                     ___wmul:	
  2223                           ;psect for function ___wmul
  2224                           
  2225     0102                     l1204:	
  2226                           ;incstack = 0
  2227                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2228                           
  2229     0102  01F4               	clrf	___wmul@product
  2230     0103  01F5               	clrf	___wmul@product+1
  2231     0104                     l1206:
  2232     0104  1C70               	btfss	___wmul@multiplier,0
  2233     0105  2907               	goto	u291
  2234     0106  2908               	goto	u290
  2235     0107                     u291:
  2236     0107  290C               	goto	l462
  2237     0108                     u290:
  2238     0108                     l1208:
  2239     0108  0872               	movf	___wmul@multiplicand,w
  2240     0109  07F4               	addwf	___wmul@product,f
  2241     010A  0873               	movf	___wmul@multiplicand+1,w
  2242     010B  3DF5               	addwfc	___wmul@product+1,f
  2243     010C                     l462:
  2244     010C  3001               	movlw	1
  2245     010D                     u305:
  2246     010D  35F2               	lslf	___wmul@multiplicand,f
  2247     010E  0DF3               	rlf	___wmul@multiplicand+1,f
  2248     010F  0B89               	decfsz	9,f
  2249     0110  290D               	goto	u305
  2250     0111                     l1210:
  2251     0111  3001               	movlw	1
  2252     0112                     u315:
  2253     0112  36F1               	lsrf	___wmul@multiplier+1,f
  2254     0113  0CF0               	rrf	___wmul@multiplier,f
  2255     0114  0B89               	decfsz	9,f
  2256     0115  2912               	goto	u315
  2257     0116                     l1212:
  2258     0116  0870               	movf	___wmul@multiplier,w
  2259     0117  0471               	iorwf	___wmul@multiplier+1,w
  2260     0118  1D03               	btfss	3,2
  2261     0119  291B               	goto	u321
  2262     011A  291C               	goto	u320
  2263     011B                     u321:
  2264     011B  2904               	goto	l1206
  2265     011C                     u320:
  2266     011C                     l1214:
  2267     011C  0875               	movf	___wmul@product+1,w
  2268     011D  00F1               	movwf	?___wmul+1
  2269     011E  0874               	movf	___wmul@product,w
  2270     011F  00F0               	movwf	?___wmul
  2271     0120                     l464:
  2272     0120  0008               	return
  2273     0121                     __end_of___wmul:
  2274                           
  2275                           	psect	text5
  2276     00E2                     __ptext5:	
  2277 ;; *************** function _SPI1_BufferWrite *****************
  2278 ;; Defined at:
  2279 ;;		line 128 in file "mcc_generated_files/spi/src/mssp1.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  bufferData      1    0[COMMON] PTR unsigned char 
  2282 ;;		 -> spi_send_data@data(1), 
  2283 ;;  bufferSize      2    1[COMMON] unsigned int 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  bufferInputS    2    3[COMMON] unsigned int 
  2286 ;;  bufferInput     1    5[COMMON] PTR unsigned char 
  2287 ;;		 -> spi_send_data@data(1), 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2297 ;;      Params:         3       0       0       0       0       0       0       0
  2298 ;;      Locals:         3       0       0       0       0       0       0       0
  2299 ;;      Temps:          0       0       0       0       0       0       0       0
  2300 ;;      Totals:         6       0       0       0       0       0       0       0
  2301 ;;Total ram usage:        6 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 4
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		_spi_send_data
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311     00E2                     _SPI1_BufferWrite:	
  2312                           ;psect for function _SPI1_BufferWrite
  2313                           
  2314     00E2                     l1238:	
  2315                           ;incstack = 0
  2316                           ; Regs used in _SPI1_BufferWrite: [wreg+fsr1l+fsr1h+status,2+status,0]
  2317                           
  2318                           
  2319                           ;mcc_generated_files/spi/src/mssp1.c: 128: void SPI1_BufferWrite(uint8_t *bufferData, si
      +                          ze_t bufferSize);mcc_generated_files/spi/src/mssp1.c: 129: {;mcc_generated_files/spi/src
      +                          /mssp1.c: 130:     uint8_t *bufferInput = bufferData;
  2320     00E2  0870               	movf	SPI1_BufferWrite@bufferData,w
  2321     00E3  00F5               	movwf	SPI1_BufferWrite@bufferInput
  2322                           
  2323                           ;mcc_generated_files/spi/src/mssp1.c: 131:     size_t bufferInputSize = bufferSize;
  2324     00E4  0872               	movf	SPI1_BufferWrite@bufferSize+1,w
  2325     00E5  00F4               	movwf	SPI1_BufferWrite@bufferInputSize+1
  2326     00E6  0871               	movf	SPI1_BufferWrite@bufferSize,w
  2327     00E7  00F3               	movwf	SPI1_BufferWrite@bufferInputSize
  2328                           
  2329                           ;mcc_generated_files/spi/src/mssp1.c: 132:     while (0U != bufferInputSize)
  2330     00E8  28FB               	goto	l1246
  2331     00E9                     l1240:
  2332                           
  2333                           ;mcc_generated_files/spi/src/mssp1.c: 133:     {;mcc_generated_files/spi/src/mssp1.c: 13
      +                          4:         SSP1BUF = *bufferInput;
  2334     00E9  0875               	movf	SPI1_BufferWrite@bufferInput,w
  2335     00EA  0086               	movwf	6
  2336     00EB  0187               	clrf	7
  2337     00EC  0801               	movf	1,w
  2338     00ED  0143               	movlb	3	; select bank3
  2339     00EE  008C               	movwf	12	;volatile
  2340     00EF                     l72:	
  2341                           ;mcc_generated_files/spi/src/mssp1.c: 136:         {;mcc_generated_files/spi/src/mssp1.c
      +                          : 138:         }
  2342                           
  2343                           
  2344                           ;mcc_generated_files/spi/src/mssp1.c: 135:         while (!PIR1bits.SSP1IF)
  2345     00EF  014E               	movlb	14	; select bank14
  2346     00F0  1C8D               	btfss	13,1	;volatile
  2347     00F1  28F3               	goto	u341
  2348     00F2  28F4               	goto	u340
  2349     00F3                     u341:
  2350     00F3  28EF               	goto	l72
  2351     00F4                     u340:
  2352     00F4                     l74:
  2353                           
  2354                           ;mcc_generated_files/spi/src/mssp1.c: 139:         PIR1bits.SSP1IF = 0;
  2355     00F4  108D               	bcf	13,1	;volatile
  2356     00F5                     l1242:
  2357                           
  2358                           ;mcc_generated_files/spi/src/mssp1.c: 140:         bufferInput++;
  2359     00F5  3001               	movlw	1
  2360     00F6  07F5               	addwf	SPI1_BufferWrite@bufferInput,f
  2361     00F7                     l1244:
  2362                           
  2363                           ;mcc_generated_files/spi/src/mssp1.c: 141:         bufferInputSize--;
  2364     00F7  3001               	movlw	1
  2365     00F8  02F3               	subwf	SPI1_BufferWrite@bufferInputSize,f
  2366     00F9  3000               	movlw	0
  2367     00FA  3BF4               	subwfb	SPI1_BufferWrite@bufferInputSize+1,f
  2368     00FB                     l1246:
  2369                           
  2370                           ;mcc_generated_files/spi/src/mssp1.c: 132:     while (0U != bufferInputSize)
  2371     00FB  0873               	movf	SPI1_BufferWrite@bufferInputSize,w
  2372     00FC  0474               	iorwf	SPI1_BufferWrite@bufferInputSize+1,w
  2373     00FD  1D03               	btfss	3,2
  2374     00FE  2900               	goto	u351
  2375     00FF  2901               	goto	u350
  2376     0100                     u351:
  2377     0100  28E9               	goto	l1240
  2378     0101                     u350:
  2379     0101                     l76:
  2380     0101  0008               	return
  2381     0102                     __end_of_SPI1_BufferWrite:
  2382                           
  2383                           	psect	text6
  2384     01D5                     __ptext6:	
  2385 ;; *************** function _SYSTEM_Initialize *****************
  2386 ;; Defined at:
  2387 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2401 ;;      Params:         0       0       0       0       0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0
  2404 ;;      Totals:         0       0       0       0       0       0       0       0
  2405 ;;Total ram usage:        0 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 6
  2408 ;; This function calls:
  2409 ;;		_CLOCK_Initialize
  2410 ;;		_INTERRUPT_Initialize
  2411 ;;		_PIN_MANAGER_Initialize
  2412 ;;		_SPI1_Initialize
  2413 ;;		_TMR0_Initialize
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419     01D5                     _SYSTEM_Initialize:	
  2420                           ;psect for function _SYSTEM_Initialize
  2421                           
  2422     01D5                     l1340:	
  2423                           ;incstack = 0
  2424                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2425                           
  2426                           
  2427                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  2428     01D5  3182  221D  3181   	fcall	_CLOCK_Initialize
  2429                           
  2430                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  2431     01D8  3180  20A4  3181   	fcall	_PIN_MANAGER_Initialize
  2432     01DB                     l1342:
  2433                           
  2434                           ;mcc_generated_files/system/src/system.c: 44:     TMR0_Initialize();
  2435     01DB  3181  2186  3181   	fcall	_TMR0_Initialize
  2436     01DE                     l1344:
  2437                           
  2438                           ;mcc_generated_files/system/src/system.c: 45:     SPI1_Initialize();
  2439     01DE  3182  220E  3181   	fcall	_SPI1_Initialize
  2440                           
  2441                           ;mcc_generated_files/system/src/system.c: 46:     INTERRUPT_Initialize();
  2442     01E1  3181  21F4  3181   	fcall	_INTERRUPT_Initialize
  2443     01E4                     l267:
  2444     01E4  0008               	return
  2445     01E5                     __end_of_SYSTEM_Initialize:
  2446                           
  2447                           	psect	text7
  2448     0186                     __ptext7:	
  2449 ;; *************** function _TMR0_Initialize *****************
  2450 ;; Defined at:
  2451 ;;		line 60 in file "mcc_generated_files/timer/src/tmr0.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2465 ;;      Params:         0       0       0       0       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0
  2468 ;;      Totals:         0       0       0       0       0       0       0       0
  2469 ;;Total ram usage:        0 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 4
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_SYSTEM_Initialize
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479     0186                     _TMR0_Initialize:	
  2480                           ;psect for function _TMR0_Initialize
  2481                           
  2482     0186                     l1302:	
  2483                           ;incstack = 0
  2484                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  2485                           
  2486                           
  2487                           ;mcc_generated_files/timer/src/tmr0.c: 61:     TMR0H = 0xFF;
  2488     0186  30FF               	movlw	255
  2489     0187  014B               	movlb	11	; select bank11
  2490     0188  009D               	movwf	29	;volatile
  2491     0189                     l1304:
  2492                           
  2493                           ;mcc_generated_files/timer/src/tmr0.c: 62:     TMR0L = 0x0;
  2494     0189  019C               	clrf	28	;volatile
  2495     018A                     l1306:
  2496                           
  2497                           ;mcc_generated_files/timer/src/tmr0.c: 64:     T0CON1 = (3 << 0x5)
  2498     018A  3070               	movlw	112
  2499     018B  009F               	movwf	31	;volatile
  2500     018C                     l1308:
  2501                           
  2502                           ;mcc_generated_files/timer/src/tmr0.c: 68:     tmr0PeriodCount = ((uint16_t) TMR0H << 8)
      +                           | TMR0L;
  2503     018C  081D               	movf	29,w	;volatile
  2504     018D  00FD               	movwf	_tmr0PeriodCount+1	;volatile
  2505     018E  081C               	movf	28,w	;volatile
  2506     018F  00FC               	movwf	_tmr0PeriodCount	;volatile
  2507     0190                     l1310:
  2508                           
  2509                           ;mcc_generated_files/timer/src/tmr0.c: 70:     TMR0_OverflowCallback = TMR0_DefaultOverf
      +                          lowCallback;
  2510     0190  30C3               	movlw	low _TMR0_DefaultOverflowCallback
  2511     0191  0140               	movlb	0	; select bank0
  2512     0192  00A0               	movwf	_TMR0_OverflowCallback
  2513     0193  3001               	movlw	high _TMR0_DefaultOverflowCallback
  2514     0194  00A1               	movwf	_TMR0_OverflowCallback+1
  2515     0195                     l1312:
  2516                           
  2517                           ;mcc_generated_files/timer/src/tmr0.c: 72:     PIR0bits.TMR0IF = 0;
  2518     0195  014E               	movlb	14	; select bank14
  2519     0196  128C               	bcf	12,5	;volatile
  2520     0197                     l1314:
  2521                           
  2522                           ;mcc_generated_files/timer/src/tmr0.c: 73:     PIE0bits.TMR0IE = 1;
  2523     0197  1696               	bsf	22,5	;volatile
  2524     0198                     l1316:
  2525                           
  2526                           ;mcc_generated_files/timer/src/tmr0.c: 75:     T0CON0 = (0 << 0x0)
  2527     0198  3090               	movlw	144
  2528     0199  014B               	movlb	11	; select bank11
  2529     019A  009E               	movwf	30	;volatile
  2530     019B                     l316:
  2531     019B  0008               	return
  2532     019C                     __end_of_TMR0_Initialize:
  2533                           
  2534                           	psect	text8
  2535     020E                     __ptext8:	
  2536 ;; *************** function _SPI1_Initialize *****************
  2537 ;; Defined at:
  2538 ;;		line 63 in file "mcc_generated_files/spi/src/mssp1.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		status,2
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2552 ;;      Params:         0       0       0       0       0       0       0       0
  2553 ;;      Locals:         0       0       0       0       0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0
  2555 ;;      Totals:         0       0       0       0       0       0       0       0
  2556 ;;Total ram usage:        0 bytes
  2557 ;; Hardware stack levels used: 1
  2558 ;; Hardware stack levels required when called: 4
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_SYSTEM_Initialize
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566     020E                     _SPI1_Initialize:	
  2567                           ;psect for function _SPI1_Initialize
  2568                           
  2569     020E                     l1218:	
  2570                           ;incstack = 0
  2571                           ; Regs used in _SPI1_Initialize: [status,2]
  2572                           
  2573                           
  2574                           ;mcc_generated_files/spi/src/mssp1.c: 66:     PIE1bits.SSP1IE = 0;
  2575     020E  014E               	movlb	14	; select bank14
  2576     020F  1097               	bcf	23,1	;volatile
  2577                           
  2578                           ;mcc_generated_files/spi/src/mssp1.c: 67:     PIR1bits.SSP1IF = 0;
  2579     0210  108D               	bcf	13,1	;volatile
  2580     0211                     l1220:
  2581                           
  2582                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1STAT = 0x00;
  2583     0211  0143               	movlb	3	; select bank3
  2584     0212  018F               	clrf	15	;volatile
  2585                           
  2586                           ;mcc_generated_files/spi/src/mssp1.c: 70:     SSP1CON1 = 0x00;
  2587     0213  0190               	clrf	16	;volatile
  2588                           
  2589                           ;mcc_generated_files/spi/src/mssp1.c: 71:     SSP1CON3 = 0x00;
  2590     0214  0192               	clrf	18	;volatile
  2591                           
  2592                           ;mcc_generated_files/spi/src/mssp1.c: 72:     SSP1ADD = 0x00;
  2593     0215  018D               	clrf	13	;volatile
  2594     0216                     l47:
  2595     0216  0008               	return
  2596     0217                     __end_of_SPI1_Initialize:
  2597                           
  2598                           	psect	text9
  2599     00A4                     __ptext9:	
  2600 ;; *************** function _PIN_MANAGER_Initialize *****************
  2601 ;; Defined at:
  2602 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		status,2
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2616 ;;      Params:         0       0       0       0       0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0
  2619 ;;      Totals:         0       0       0       0       0       0       0       0
  2620 ;;Total ram usage:        0 bytes
  2621 ;; Hardware stack levels used: 1
  2622 ;; Hardware stack levels required when called: 4
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_SYSTEM_Initialize
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630     00A4                     _PIN_MANAGER_Initialize:	
  2631                           ;psect for function _PIN_MANAGER_Initialize
  2632                           
  2633     00A4                     l1262:	
  2634                           ;incstack = 0
  2635                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2636                           
  2637                           
  2638                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  2639     00A4  0140               	movlb	0	; select bank0
  2640     00A5  0198               	clrf	24	;volatile
  2641                           
  2642                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  2643     00A6  0199               	clrf	25	;volatile
  2644                           
  2645                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  2646     00A7  019A               	clrf	26	;volatile
  2647     00A8                     l1264:
  2648                           
  2649                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3B;
  2650     00A8  303B               	movlw	59
  2651     00A9  0092               	movwf	18	;volatile
  2652     00AA                     l1266:
  2653                           
  2654                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x70;
  2655     00AA  3070               	movlw	112
  2656     00AB  0093               	movwf	19	;volatile
  2657     00AC                     l1268:
  2658                           
  2659                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xFF;
  2660     00AC  30FF               	movlw	255
  2661     00AD  0094               	movwf	20	;volatile
  2662     00AE                     l1270:
  2663                           
  2664                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x33;
  2665     00AE  3033               	movlw	51
  2666     00AF  017E               	movlb	62	; select bank62
  2667     00B0  00B8               	movwf	56	;volatile
  2668     00B1                     l1272:
  2669                           
  2670                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x20;
  2671     00B1  3020               	movlw	32
  2672     00B2  00C3               	movwf	67	;volatile
  2673     00B3                     l1274:
  2674                           
  2675                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xBB;
  2676     00B3  30BB               	movlw	187
  2677     00B4  00CE               	movwf	78	;volatile
  2678                           
  2679                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
  2680     00B5  01B9               	clrf	57	;volatile
  2681                           
  2682                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
  2683     00B6  01C4               	clrf	68	;volatile
  2684                           
  2685                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
  2686     00B7  01CF               	clrf	79	;volatile
  2687     00B8                     l1276:
  2688                           
  2689                           ;mcc_generated_files/system/src/pins.c: 67:     WPUCbits.WPUC2=1;
  2690     00B8  154F               	bsf	79,2	;volatile
  2691                           
  2692                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  2693     00B9  01BA               	clrf	58	;volatile
  2694                           
  2695                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  2696     00BA  01C5               	clrf	69	;volatile
  2697                           
  2698                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  2699     00BB  01D0               	clrf	80	;volatile
  2700     00BC                     l1278:
  2701                           
  2702                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x37;
  2703     00BC  3037               	movlw	55
  2704     00BD  00BB               	movwf	59	;volatile
  2705     00BE                     l1280:
  2706                           
  2707                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  2708     00BE  30F0               	movlw	240
  2709     00BF  00C6               	movwf	70	;volatile
  2710     00C0                     l1282:
  2711                           
  2712                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  2713     00C0  30FF               	movlw	255
  2714     00C1  00D1               	movwf	81	;volatile
  2715     00C2                     l1284:
  2716                           
  2717                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  2718     00C2  303F               	movlw	63
  2719     00C3  00BC               	movwf	60	;volatile
  2720     00C4                     l1286:
  2721                           
  2722                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  2723     00C4  30F0               	movlw	240
  2724     00C5  00C7               	movwf	71	;volatile
  2725     00C6                     l1288:
  2726                           
  2727                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  2728     00C6  30FF               	movlw	255
  2729     00C7  00D2               	movwf	82	;volatile
  2730     00C8                     l1290:
  2731                           
  2732                           ;mcc_generated_files/system/src/pins.c: 92:     SSP1DATPPS = 0xE;
  2733     00C8  300E               	movlw	14
  2734     00C9  017D               	movlb	61	; select bank61
  2735     00CA  00C6               	movwf	70	;volatile
  2736     00CB                     l1292:
  2737                           
  2738                           ;mcc_generated_files/system/src/pins.c: 93:     SSP1SSPPS = 0x16;
  2739     00CB  3016               	movlw	22
  2740     00CC  00C7               	movwf	71	;volatile
  2741     00CD                     l1294:
  2742                           
  2743                           ;mcc_generated_files/system/src/pins.c: 94:     INTPPS = 0x12;
  2744     00CD  3012               	movlw	18
  2745     00CE  0090               	movwf	16	;volatile
  2746     00CF                     l1296:
  2747                           
  2748                           ;mcc_generated_files/system/src/pins.c: 95:     RB7PPS = 0x08;
  2749     00CF  3008               	movlw	8
  2750     00D0  017E               	movlb	62	; select bank62
  2751     00D1  009F               	movwf	31	;volatile
  2752     00D2                     l1298:
  2753                           
  2754                           ;mcc_generated_files/system/src/pins.c: 96:     SSP1CLKPPS = 0xC;
  2755     00D2  300C               	movlw	12
  2756     00D3  017D               	movlb	61	; select bank61
  2757     00D4  00C5               	movwf	69	;volatile
  2758     00D5                     l1300:
  2759                           
  2760                           ;mcc_generated_files/system/src/pins.c: 97:     RB4PPS = 0x07;
  2761     00D5  3007               	movlw	7
  2762     00D6  017E               	movlb	62	; select bank62
  2763     00D7  009C               	movwf	28	;volatile
  2764                           
  2765                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
  2766     00D8  01BD               	clrf	61	;volatile
  2767                           
  2768                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
  2769     00D9  01BE               	clrf	62	;volatile
  2770                           
  2771                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
  2772     00DA  01BF               	clrf	63	;volatile
  2773                           
  2774                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
  2775     00DB  01C8               	clrf	72	;volatile
  2776                           
  2777                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
  2778     00DC  01C9               	clrf	73	;volatile
  2779                           
  2780                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
  2781     00DD  01CA               	clrf	74	;volatile
  2782                           
  2783                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
  2784     00DE  01D3               	clrf	83	;volatile
  2785                           
  2786                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
  2787     00DF  01D4               	clrf	84	;volatile
  2788                           
  2789                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
  2790     00E0  01D5               	clrf	85	;volatile
  2791     00E1                     l245:
  2792     00E1  0008               	return
  2793     00E2                     __end_of_PIN_MANAGER_Initialize:
  2794                           
  2795                           	psect	text10
  2796     01F4                     __ptext10:	
  2797 ;; *************** function _INTERRUPT_Initialize *****************
  2798 ;; Defined at:
  2799 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0, pclath, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2813 ;;      Params:         0       0       0       0       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0       0       0       0
  2816 ;;      Totals:         0       0       0       0       0       0       0       0
  2817 ;;Total ram usage:        0 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; Hardware stack levels required when called: 5
  2820 ;; This function calls:
  2821 ;;		_INT_SetInterruptHandler
  2822 ;; This function is called by:
  2823 ;;		_SYSTEM_Initialize
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827     01F4                     _INTERRUPT_Initialize:	
  2828                           ;psect for function _INTERRUPT_Initialize
  2829                           
  2830     01F4                     l1248:	
  2831                           ;incstack = 0
  2832                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2833                           
  2834                           
  2835                           ;mcc_generated_files/system/src/interrupt.c: 43:     (PIR0bits.INTF = 0);
  2836     01F4  014E               	movlb	14	; select bank14
  2837     01F5  100C               	bcf	12,0	;volatile
  2838                           
  2839                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTEDG = 0);
  2840     01F6  100B               	bcf	11,0	;volatile
  2841     01F7                     l1250:
  2842                           
  2843                           ;mcc_generated_files/system/src/interrupt.c: 46:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  2844     01F7  3029               	movlw	low _INT_DefaultInterruptHandler
  2845     01F8  00F0               	movwf	INT_SetInterruptHandler@InterruptHandler
  2846     01F9  3002               	movlw	high _INT_DefaultInterruptHandler
  2847     01FA  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2848     01FB  3182  2217  3181   	fcall	_INT_SetInterruptHandler
  2849     01FE                     l1252:
  2850                           
  2851                           ;mcc_generated_files/system/src/interrupt.c: 47:     (PIE0bits.INTE = 1);
  2852     01FE  014E               	movlb	14	; select bank14
  2853     01FF  1416               	bsf	22,0	;volatile
  2854     0200                     l135:
  2855     0200  0008               	return
  2856     0201                     __end_of_INTERRUPT_Initialize:
  2857                           
  2858                           	psect	text11
  2859     0217                     __ptext11:	
  2860 ;; *************** function _INT_SetInterruptHandler *****************
  2861 ;; Defined at:
  2862 ;;		line 89 in file "mcc_generated_files/system/src/interrupt.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  2865 ;;		 -> INT_DefaultInterruptHandler(1), 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;		None
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2877 ;;      Params:         2       0       0       0       0       0       0       0
  2878 ;;      Locals:         0       0       0       0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0
  2880 ;;      Totals:         2       0       0       0       0       0       0       0
  2881 ;;Total ram usage:        2 bytes
  2882 ;; Hardware stack levels used: 1
  2883 ;; Hardware stack levels required when called: 4
  2884 ;; This function calls:
  2885 ;;		Nothing
  2886 ;; This function is called by:
  2887 ;;		_INTERRUPT_Initialize
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891     0217                     _INT_SetInterruptHandler:	
  2892                           ;psect for function _INT_SetInterruptHandler
  2893                           
  2894     0217                     l1200:	
  2895                           ;incstack = 0
  2896                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  2897                           
  2898                           
  2899                           ;mcc_generated_files/system/src/interrupt.c: 90:     INT_InterruptHandler = InterruptHan
      +                          dler;
  2900     0217  0871               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  2901     0218  0140               	movlb	0	; select bank0
  2902     0219  00A3               	movwf	_INT_InterruptHandler+1
  2903     021A  0870               	movf	INT_SetInterruptHandler@InterruptHandler,w
  2904     021B  00A2               	movwf	_INT_InterruptHandler
  2905     021C                     l156:
  2906     021C  0008               	return
  2907     021D                     __end_of_INT_SetInterruptHandler:
  2908                           
  2909                           	psect	text12
  2910     021D                     __ptext12:	
  2911 ;; *************** function _CLOCK_Initialize *****************
  2912 ;; Defined at:
  2913 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		status,2
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2927 ;;      Params:         0       0       0       0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0
  2930 ;;      Totals:         0       0       0       0       0       0       0       0
  2931 ;;Total ram usage:        0 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 4
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_SYSTEM_Initialize
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941     021D                     _CLOCK_Initialize:	
  2942                           ;psect for function _CLOCK_Initialize
  2943                           
  2944     021D                     l1258:	
  2945                           ;incstack = 0
  2946                           ; Regs used in _CLOCK_Initialize: [status,2]
  2947                           
  2948                           
  2949                           ;mcc_generated_files/system/src/clock.c: 41:     OSCEN = (0 << 0x6)
  2950     021D  0151               	movlb	17	; select bank17
  2951     021E  0191               	clrf	17	;volatile
  2952     021F                     l1260:
  2953                           
  2954                           ;mcc_generated_files/system/src/clock.c: 45:     OSCFRQ = (5 << 0x0);
  2955     021F  3005               	movlw	5
  2956     0220  0093               	movwf	19	;volatile
  2957                           
  2958                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  2959     0221  0192               	clrf	18	;volatile
  2960     0222                     l168:
  2961     0222  0008               	return
  2962     0223                     __end_of_CLOCK_Initialize:
  2963                           
  2964                           	psect	intentry
  2965     0004                     __pintentry:	
  2966 ;; *************** function _INTERRUPT_InterruptManager *****************
  2967 ;; Defined at:
  2968 ;;		line 58 in file "mcc_generated_files/system/src/interrupt.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0, pclath, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2982 ;;      Params:         0       0       0       0       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0       0       0       0
  2985 ;;      Totals:         0       0       0       0       0       0       0       0
  2986 ;;Total ram usage:        0 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 3
  2989 ;; This function calls:
  2990 ;;		_INT_ISR
  2991 ;;		_TMR0_ISR
  2992 ;; This function is called by:
  2993 ;;		Interrupt level 1
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997     0004                     _INTERRUPT_InterruptManager:
  2998                           
  2999                           ;incstack = 0
  3000     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3001                           
  3002                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3003     0005  3180               	pagesel	$
  3004     0006                     i1l1356:
  3005                           
  3006                           ;mcc_generated_files/system/src/interrupt.c: 60:     if (PIE0bits.INTE == 1 && PIR0bits.
      +                          INTF == 1) {
  3007     0006  014E               	movlb	14	; select bank14
  3008     0007  1C16               	btfss	22,0	;volatile
  3009     0008  280A               	goto	u42_21
  3010     0009  280B               	goto	u42_20
  3011     000A                     u42_21:
  3012     000A  2813               	goto	i1l140
  3013     000B                     u42_20:
  3014     000B                     i1l1358:
  3015     000B  1C0C               	btfss	12,0	;volatile
  3016     000C  280E               	goto	u43_21
  3017     000D  280F               	goto	u43_20
  3018     000E                     u43_21:
  3019     000E  2813               	goto	i1l140
  3020     000F                     u43_20:
  3021     000F                     i1l1360:
  3022                           
  3023                           ;mcc_generated_files/system/src/interrupt.c: 61:         INT_ISR();
  3024     000F  3182  2223  3180   	fcall	_INT_ISR
  3025                           
  3026                           ;mcc_generated_files/system/src/interrupt.c: 62:     } else if (INTCONbits.PEIE == 1) {
  3027     0012  2823               	goto	i1l146
  3028     0013                     i1l140:
  3029     0013  1F0B               	btfss	11,6	;volatile
  3030     0014  2816               	goto	u44_21
  3031     0015  2817               	goto	u44_20
  3032     0016                     u44_21:
  3033     0016  2823               	goto	i1l146
  3034     0017                     u44_20:
  3035     0017                     i1l1362:
  3036                           
  3037                           ;mcc_generated_files/system/src/interrupt.c: 63:         if (PIE0bits.TMR0IE == 1 && PIR
      +                          0bits.TMR0IF == 1) {
  3038     0017  1E96               	btfss	22,5	;volatile
  3039     0018  281A               	goto	u45_21
  3040     0019  281B               	goto	u45_20
  3041     001A                     u45_21:
  3042     001A  2823               	goto	i1l145
  3043     001B                     u45_20:
  3044     001B                     i1l1364:
  3045     001B  1E8C               	btfss	12,5	;volatile
  3046     001C  281E               	goto	u46_21
  3047     001D  281F               	goto	u46_20
  3048     001E                     u46_21:
  3049     001E  2823               	goto	i1l145
  3050     001F                     u46_20:
  3051     001F                     i1l1366:
  3052                           
  3053                           ;mcc_generated_files/system/src/interrupt.c: 64:             TMR0_ISR();
  3054     001F  3181  219C  3180   	fcall	_TMR0_ISR
  3055                           
  3056                           ;mcc_generated_files/system/src/interrupt.c: 65:         }
  3057     0022  2823               	goto	i1l146
  3058     0023                     i1l145:	
  3059                           ;mcc_generated_files/system/src/interrupt.c: 72:     }
  3060                           
  3061     0023                     i1l146:
  3062     0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3063     0024  0009               	retfie
  3064     0025                     __end_of_INTERRUPT_InterruptManager:
  3065                           
  3066                           	psect	text14
  3067     019C                     __ptext14:	
  3068 ;; *************** function _TMR0_ISR *****************
  3069 ;; Defined at:
  3070 ;;		line 132 in file "mcc_generated_files/timer/src/tmr0.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3084 ;;      Params:         0       0       0       0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0
  3087 ;;      Totals:         0       0       0       0       0       0       0       0
  3088 ;;Total ram usage:        0 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 1
  3091 ;; This function calls:
  3092 ;;		NULL
  3093 ;;		_TMR0_DefaultOverflowCallback
  3094 ;; This function is called by:
  3095 ;;		_INTERRUPT_InterruptManager
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099     019C                     _TMR0_ISR:	
  3100                           ;psect for function _TMR0_ISR
  3101                           
  3102     019C                     i1l1330:	
  3103                           ;incstack = 0
  3104                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3105                           
  3106                           
  3107                           ;mcc_generated_files/timer/src/tmr0.c: 133:     TMR0H = (uint8_t) (tmr0PeriodCount >> 8)
      +                          ;
  3108     019C  087D               	movf	_tmr0PeriodCount+1,w	;volatile
  3109     019D  014B               	movlb	11	; select bank11
  3110     019E  009D               	movwf	29	;volatile
  3111     019F                     i1l1332:
  3112                           
  3113                           ;mcc_generated_files/timer/src/tmr0.c: 134:     TMR0L = (uint8_t) (tmr0PeriodCount);
  3114     019F  087C               	movf	_tmr0PeriodCount,w	;volatile
  3115     01A0  009C               	movwf	28	;volatile
  3116     01A1                     i1l1334:
  3117                           
  3118                           ;mcc_generated_files/timer/src/tmr0.c: 136:     if (((void*)0) != TMR0_OverflowCallback)
      +                           {
  3119     01A1  0140               	movlb	0	; select bank0
  3120     01A2  0820               	movf	_TMR0_OverflowCallback,w
  3121     01A3  0421               	iorwf	_TMR0_OverflowCallback+1,w
  3122     01A4  1903               	btfsc	3,2
  3123     01A5  29A7               	goto	u38_21
  3124     01A6  29A8               	goto	u38_20
  3125     01A7                     u38_21:
  3126     01A7  29AD               	goto	i1l1338
  3127     01A8                     u38_20:
  3128     01A8                     i1l1336:
  3129                           
  3130                           ;mcc_generated_files/timer/src/tmr0.c: 137:         TMR0_OverflowCallback();
  3131     01A8  0821               	movf	_TMR0_OverflowCallback+1,w
  3132     01A9  008A               	movwf	10
  3133     01AA  0820               	movf	_TMR0_OverflowCallback,w
  3134     01AB  000A               	callw
  3135     01AC  3181               	pagesel	$
  3136     01AD                     i1l1338:
  3137                           
  3138                           ;mcc_generated_files/timer/src/tmr0.c: 139:     PIR0bits.TMR0IF = 0;
  3139     01AD  014E               	movlb	14	; select bank14
  3140     01AE  128C               	bcf	12,5	;volatile
  3141     01AF                     i1l344:
  3142     01AF  0008               	return
  3143     01B0                     __end_of_TMR0_ISR:
  3144                           
  3145                           	psect	text15
  3146     01C3                     __ptext15:	
  3147 ;; *************** function _TMR0_DefaultOverflowCallback *****************
  3148 ;; Defined at:
  3149 ;;		line 146 in file "mcc_generated_files/timer/src/tmr0.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;		None
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3163 ;;      Params:         0       0       0       0       0       0       0       0
  3164 ;;      Locals:         0       0       0       0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0
  3166 ;;      Totals:         0       0       0       0       0       0       0       0
  3167 ;;Total ram usage:        0 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_TMR0_Initialize
  3173 ;;		_TMR0_ISR
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177     01C3                     _TMR0_DefaultOverflowCallback:	
  3178                           ;psect for function _TMR0_DefaultOverflowCallback
  3179                           
  3180     01C3                     i1l1318:	
  3181                           ;incstack = 0
  3182                           ; Regs used in _TMR0_DefaultOverflowCallback: [wreg+status,2+status,0]
  3183                           
  3184                           
  3185                           ;mcc_generated_files/timer/src/tmr0.c: 148:     divider--;
  3186     01C3  3001               	movlw	1
  3187     01C4  0140               	movlb	0	; select bank0
  3188     01C5  02A7               	subwf	_divider,f
  3189     01C6  3000               	movlw	0
  3190     01C7  3BA8               	subwfb	_divider+1,f
  3191     01C8                     i1l1320:
  3192                           
  3193                           ;mcc_generated_files/timer/src/tmr0.c: 149:     if (divider == 0)
  3194     01C8  0827               	movf	_divider,w
  3195     01C9  0428               	iorwf	_divider+1,w
  3196     01CA  1D03               	btfss	3,2
  3197     01CB  29CD               	goto	u37_21
  3198     01CC  29CE               	goto	u37_20
  3199     01CD                     u37_21:
  3200     01CD  29D4               	goto	i1l351
  3201     01CE                     u37_20:
  3202     01CE                     i1l1322:
  3203                           
  3204                           ;mcc_generated_files/timer/src/tmr0.c: 150:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          151:         timerOverflow = 1;
  3205     01CE  3001               	movlw	1
  3206     01CF  00A5               	movwf	_timerOverflow
  3207     01D0                     i1l1324:
  3208                           
  3209                           ;mcc_generated_files/timer/src/tmr0.c: 152:         divider = 0xFFFF;
  3210     01D0  30FF               	movlw	255
  3211     01D1  00A7               	movwf	_divider
  3212     01D2  30FF               	movlw	255
  3213     01D3  00A8               	movwf	_divider+1
  3214     01D4                     i1l351:
  3215     01D4  0008               	return
  3216     01D5                     __end_of_TMR0_DefaultOverflowCallback:
  3217                           
  3218                           	psect	text16
  3219     0223                     __ptext16:	
  3220 ;; *************** function _INT_ISR *****************
  3221 ;; Defined at:
  3222 ;;		line 75 in file "mcc_generated_files/system/src/interrupt.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0, pclath, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3236 ;;      Params:         0       0       0       0       0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0
  3239 ;;      Totals:         0       0       0       0       0       0       0       0
  3240 ;;Total ram usage:        0 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 2
  3243 ;; This function calls:
  3244 ;;		_INT_CallBack
  3245 ;; This function is called by:
  3246 ;;		_INTERRUPT_InterruptManager
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250     0223                     _INT_ISR:	
  3251                           ;psect for function _INT_ISR
  3252                           
  3253     0223                     i1l1326:	
  3254                           ;incstack = 0
  3255                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  3256                           
  3257                           
  3258                           ;mcc_generated_files/system/src/interrupt.c: 76:     (PIR0bits.INTF = 0);
  3259     0223  014E               	movlb	14	; select bank14
  3260     0224  100C               	bcf	12,0	;volatile
  3261     0225                     i1l1328:
  3262                           
  3263                           ;mcc_generated_files/system/src/interrupt.c: 79:     INT_CallBack();
  3264     0225  3182  2201  3182   	fcall	_INT_CallBack
  3265     0228                     i1l149:
  3266     0228  0008               	return
  3267     0229                     __end_of_INT_ISR:
  3268                           
  3269                           	psect	text17
  3270     0201                     __ptext17:	
  3271 ;; *************** function _INT_CallBack *****************
  3272 ;; Defined at:
  3273 ;;		line 82 in file "mcc_generated_files/system/src/interrupt.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;		None
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;		None
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, status,2, status,0, pclath, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3287 ;;      Params:         0       0       0       0       0       0       0       0
  3288 ;;      Locals:         0       0       0       0       0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0       0       0       0
  3290 ;;      Totals:         0       0       0       0       0       0       0       0
  3291 ;;Total ram usage:        0 bytes
  3292 ;; Hardware stack levels used: 1
  3293 ;; Hardware stack levels required when called: 1
  3294 ;; This function calls:
  3295 ;;		NULL
  3296 ;;		_INT_DefaultInterruptHandler
  3297 ;; This function is called by:
  3298 ;;		_INT_ISR
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302     0201                     _INT_CallBack:	
  3303                           ;psect for function _INT_CallBack
  3304                           
  3305     0201                     i1l1254:	
  3306                           ;incstack = 0
  3307                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3308                           
  3309                           
  3310                           ;mcc_generated_files/system/src/interrupt.c: 84:     if (INT_InterruptHandler) {
  3311     0201  0140               	movlb	0	; select bank0
  3312     0202  0822               	movf	_INT_InterruptHandler,w
  3313     0203  0423               	iorwf	_INT_InterruptHandler+1,w
  3314     0204  1903               	btfsc	3,2
  3315     0205  2A07               	goto	u36_21
  3316     0206  2A08               	goto	u36_20
  3317     0207                     u36_21:
  3318     0207  2A0D               	goto	i1l153
  3319     0208                     u36_20:
  3320     0208                     i1l1256:
  3321                           
  3322                           ;mcc_generated_files/system/src/interrupt.c: 85:         INT_InterruptHandler();
  3323     0208  0823               	movf	_INT_InterruptHandler+1,w
  3324     0209  008A               	movwf	10
  3325     020A  0822               	movf	_INT_InterruptHandler,w
  3326     020B  000A               	callw
  3327     020C  3182               	pagesel	$
  3328     020D                     i1l153:
  3329     020D  0008               	return
  3330     020E                     __end_of_INT_CallBack:
  3331                           
  3332                           	psect	text18
  3333     0229                     __ptext18:	
  3334 ;; *************** function _INT_DefaultInterruptHandler *****************
  3335 ;; Defined at:
  3336 ;;		line 93 in file "mcc_generated_files/system/src/interrupt.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		None
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3350 ;;      Params:         0       0       0       0       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0       0       0       0
  3353 ;;      Totals:         0       0       0       0       0       0       0       0
  3354 ;;Total ram usage:        0 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_INTERRUPT_Initialize
  3360 ;;		_INT_CallBack
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364     0229                     _INT_DefaultInterruptHandler:	
  3365                           ;psect for function _INT_DefaultInterruptHandler
  3366                           
  3367     0229                     i1l1202:	
  3368                           ;incstack = 0
  3369                           ; Regs used in _INT_DefaultInterruptHandler: []
  3370                           
  3371                           
  3372                           ;mcc_generated_files/system/src/interrupt.c: 96:     pushed = 1;
  3373     0229  3001               	movlw	1
  3374     022A  0140               	movlb	0	; select bank0
  3375     022B  00A6               	movwf	_pushed
  3376     022C                     i1l159:
  3377     022C  0008               	return
  3378     022D                     __end_of_INT_DefaultInterruptHandler:
  3379     0001                     ___latbits      equ	1
  3380     007E                     btemp           set	126	;btemp
  3381     007E                     int$flags       set	126
  3382     007E                     wtemp0          set	126
  3383                           
  3384                           	psect	config
  3385                           
  3386                           ;Config register CONFIG1 @ 0x8007
  3387                           ;	External Oscillator Mode Selection bits
  3388                           ;	FEXTOSC = ECH, EC (external clock) 16 MHz and above
  3389                           ;	Power-up Default Value for COSC bits
  3390                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  3391                           ;	Clock Out Enable bit
  3392                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  3393                           ;	VDD Range Analog Calibration Selection bit
  3394                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  3395     8007                     	org	32775
  3396     8007  3FCF               	dw	16335
  3397                           
  3398                           ;Config register CONFIG2 @ 0x8008
  3399                           ;	Master Clear Enable bit
  3400                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  3401                           ;	Power-up Timer Selection bits
  3402                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3403                           ;	WDT Operating Mode bits
  3404                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  3405                           ;	Brown-out Reset Enable bits
  3406                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  3407                           ;	Brown-out Reset Voltage Selection bit
  3408                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  3409                           ;	PPSLOCKED One-Way Set Enable bit
  3410                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  3411                           ;	Stack Overflow/Underflow Reset Enable bit
  3412                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  3413     8008                     	org	32776
  3414     8008  3FE7               	dw	16359
  3415                           
  3416                           ;Config register CONFIG4 @ 0x800A
  3417                           ;	Boot Block Size Selection bits
  3418                           ;	BBSIZE = BB512, 512 words boot block size
  3419                           ;	Boot Block Enable bit
  3420                           ;	BBEN = OFF, Boot Block is disabled
  3421                           ;	SAF Enable bit
  3422                           ;	SAFEN = OFF, SAF is disabled
  3423                           ;	Application Block Write Protection bit
  3424                           ;	WRTAPP = OFF, Application Block is not write-protected
  3425                           ;	Boot Block Write Protection bit
  3426                           ;	WRTB = OFF, Boot Block is not write-protected
  3427                           ;	Configuration Registers Write Protection bit
  3428                           ;	WRTC = OFF, Configuration Registers are not write-protected
  3429                           ;	Storage Area Flash (SAF) Write Protection bit
  3430                           ;	WRTSAF = OFF, SAF is not write-protected
  3431                           ;	Low Voltage Programming Enable bit
  3432                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  3433     800A                     	org	32778
  3434     800A  3FFF               	dw	16383
  3435                           
  3436                           ;Config register CONFIG5 @ 0x800B
  3437                           ;	User Program Flash Memory Code Protection bit
  3438                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  3439     800B                     	org	32779
  3440     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    75
    Data        2
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0       9
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    NULL$0	PTR FTN()void  size(2) Largest target is 0

    S38$4$0	PTR void  size(2) Largest target is 0

    S38$5$0	PTR void  size(2) Largest target is 0

    S38$6$0	PTR void  size(1) Largest target is 1
		 -> spi_send_data@data(COMMON[1]), 

    S38SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S38SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S38SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S38SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S38SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S38SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S38SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S38SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S38SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S38SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S38SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S38SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S38SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S38SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S517$9$0	PTR FTN()void  size(2) Largest target is 0

    S517TIMER_INTERFACE$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    S517TIMER_INTERFACE$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    S517TIMER_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    S517TIMER_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    S517TIMER_INTERFACE$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    S517TIMER_INTERFACE$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    S517TIMER_INTERFACE$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    S517TIMER_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    S517TIMER_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    S517TIMER_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S517TIMER_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    SPI1_BufferWrite@bufferData	PTR unsigned char  size(1) Largest target is 1
		 -> spi_send_data@data(COMMON[1]), 

    SPI1_BufferWrite@bufferInput	PTR unsigned char  size(1) Largest target is 1
		 -> spi_send_data@data(COMMON[1]), 

    SPI1_Client$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_Client$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_Client$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_Client$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_Client$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_Client$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_Client$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_Client$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_Client$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_Client$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_Client$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_Client$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_Client$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SPI1_Client$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    spi_send_data@data	PTR unsigned char  size(1) Largest target is 1
		 -> main@spiData(COMMON[1]), 

    Timer0$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    Timer0$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    Timer0$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    Timer0$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    Timer0$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    Timer0$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    Timer0$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    Timer0$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    Timer0$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), NULL(), 


Critical Paths under _main in COMMON

    _main->_spi_send_data
    _spi_send_data->_SPI1_Open
    _SPI1_Open->___wmul
    _INTERRUPT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     378
                                             11 COMMON     1     1      0
                  _SYSTEM_Initialize
                      _spi_send_data
                         _toggle_led
 ---------------------------------------------------------------------------------
 (1) _toggle_led                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_send_data                                        1     0      1     332
                                             10 COMMON     1     0      1
                   _SPI1_BufferWrite
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     214
                                              6 COMMON     4     3      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     100
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI1_BufferWrite                                     6     3      3      94
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                            _INT_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                                NULL *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
   _spi_send_data
     _SPI1_BufferWrite
     _SPI1_Open
       ___wmul
   _toggle_led

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       NULL(Fake) *
       _INT_DefaultInterruptHandler *
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     12      14    100.0%
BANK0               80      0       9     11.2%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      23      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Jan 18 21:30:25 2025

                      _SPI1_ByteExchange 0000                           ?_spi_send_data 007A  
                                     l47 0216                                       l55 00A3  
                                     l72 00EF                                       l74 00F4  
                                     l76 0101                      ___wmul@multiplicand 0072  
                                    l135 0200                                      l156 021C  
                                    l316 019B                                      l245 00E1  
                                    l168 0222                                      l267 01E4  
                                    l462 010C                                      l464 0120  
                                    l394 01C2                                      l387 01F3  
                                    u320 011C                                      u400 01ED  
                                    u321 011B                                      u305 010D  
                                    u330 003D                                      u410 01B9  
                                    u315 0112                                      u331 003C  
                                    u411 01B8                                      u340 00F4  
                                    u341 00F3                                      u350 0101  
                                    u351 0100                                      u290 0108  
                                    u291 0107                                      u390 01EC  
                                    u470 014A                                      u391 01EA  
                                    u471 0149                                      wreg 0009  
                                   l1200 0217                                     l1210 0111  
                                   l1300 00D5                                     l1220 0211  
                                   l1212 0116                                     l1204 0102  
                                   l1310 0190                                     l1302 0186  
                                   l1214 011C                                     l1206 0104  
                                   l1230 009E                                     l1222 0038  
                                   l1312 0195                                     l1304 0189  
                                   l1240 00E9                                     l1208 0108  
                                   l1232 00A1                                     l1224 0038  
                                   l1250 01F7                                     l1218 020E  
                                   l1314 0197                                     l1306 018A  
                                   l1242 00F5                                     l1234 00A2  
                                   l1226 003D                                     l1260 021F  
                                   l1252 01FE                                     l1316 0198  
                                   l1308 018C                                     l1340 01D5  
                                   l1244 00F7                                     l1228 009D  
                                   l1270 00AE                                     l1262 00A4  
                                   l1342 01DB                                     l1246 00FB  
                                   l1238 00E2                                     l1350 01B0  
                                   l1248 01F4                                     l1280 00BE  
                                   l1272 00B1                                     l1264 00A8  
                                   l1344 01DE                                     l1258 021D  
                                   l1290 00C8                                     l1282 00C0  
                                   l1274 00B3                                     l1266 00AA  
                                   l1354 01B9                                     l1346 01E5  
                                   l1370 013D                                     l1292 00CB  
                                   l1284 00C2                                     l1276 00B8  
                                   l1268 00AC                                     l1348 01EE  
                                   l1380 014A                                     l1372 0140  
                                   l1294 00CD                                     l1286 00C4  
                                   l1278 00BC                                     l1382 014D  
                                   l1374 0141                                     l1296 00CF  
                                   l1288 00C6                                     l1384 014F  
                                   l1376 0142                                     l1298 00D2  
                                   l1378 0144                                     _LATA 0018  
                                   _LATB 0019                          __end_of_INT_ISR 0229  
                                   _LATC 001A                                     _WPUA 1F39  
                                   _WPUB 1F44                                     _WPUC 1F4F  
                                   _main 013D                              main@spiData 007B  
                                   fsr0h 0005                                     fsr1h 0007  
                                   indf0 0000                                     fsr0l 0004  
                                   indf1 0001                                     fsr1l 0006  
                                   btemp 007E      __end_of_INT_DefaultInterruptHandler 022D  
            _INT_DefaultInterruptHandler 0229                                     start 0025  
        __end_of_INT_SetInterruptHandler 021D                  __end_of_TMR0_Initialize 019C  
                                  ?_main 0070                                    _IOCAF 1F3F  
                                  _IOCBF 1F4A                                    _IOCCF 1F55  
                                  _IOCAN 1F3E                                    _IOCAP 1F3D  
                                  _IOCBN 1F49                                    _IOCBP 1F48  
                                  _IOCCN 1F54                                    _IOCCP 1F53  
                                  i1l140 0013                                    i1l153 020D  
                                  i1l145 0023                                    i1l146 0023  
                                  i1l149 0228                                    i1l159 022C  
                                  i1l351 01D4                                    i1l344 01AF  
                                  _OSCEN 0891                                    _TMR0H 059D  
                                  _TMR0L 059C                                    u42_20 000B  
                                  u42_21 000A                                    u43_20 000F  
                                  u43_21 000E                                    u36_20 0208  
                                  u44_20 0017                                    u36_21 0207  
                                  u44_21 0016                                    u37_20 01CE  
                                  u45_20 001B                                    u37_21 01CD  
                                  u45_21 001A                                    u38_20 01A8  
                                  u46_20 001F                                    u38_21 01A7  
                                  u46_21 001E                                    _TRISA 0012  
                                  _TRISB 0013                                    _TRISC 0014  
                       __end_of_TMR0_ISR 01B0                                    pclath 000A  
                        _tmr0PeriodCount 007C          SPI1_BufferWrite@bufferInputSize 0073  
                                  status 0003                                    wtemp0 007E  
                        __initialization 0027                          ??_spi_send_data 007B  
                           __end_of_main 0157              ?_INTERRUPT_InterruptManager 0070  
                                 ??_main 007B                                ??_INT_ISR 0070  
               __end_of_SPI1_BufferWrite 0102                                   _ANSELA 1F38  
                                 _ANSELB 1F43                                   _ANSELC 1F4E  
                                 _T0CON0 059E                                   _T0CON1 059F  
                                 _RB4PPS 1F1C                                   i1l1202 0229  
                                 i1l1320 01C8                                   i1l1322 01CE  
                                 i1l1330 019C                                   _RB7PPS 1F1F  
                                 i1l1324 01D0                                   i1l1332 019F  
                                 i1l1254 0201                                   i1l1326 0223  
                                 i1l1318 01C3                                   i1l1334 01A1  
                                 i1l1256 0208                                   i1l1328 0225  
                                 i1l1336 01A8                                   i1l1360 000F  
                                 _ODCONA 1F3A                                   i1l1338 01AD  
                                 i1l1362 0017                                   _ODCONB 1F45  
                                 _ODCONC 1F50                                   i1l1364 001B  
                                 i1l1356 0006                                   i1l1366 001F  
                                 i1l1358 000B                                   _INLVLA 1F3C  
                                 _INLVLB 1F47                                   _INLVLC 1F52  
                                 _INTPPS 1E90                                   _OSCFRQ 0893  
                      __end_of_SPI1_Open 00A4                                   _Timer0 0170  
                                 ___wmul 0102                         ?_TMR0_Initialize 0070  
                                 _pushed 0026                        ?_CLOCK_Initialize 0070  
                          ?_INT_CallBack 0070                       ??_CLOCK_Initialize 0070  
INT_SetInterruptHandler@InterruptHandler 0070                           _SPI1_IsRxReady 0000  
                         _SPI1_IsTxReady 0000                        _SYSTEM_Initialize 01D5  
                __end_of__initialization 0034                           _SPI1_ByteWrite 0000  
                     ?_SYSTEM_Initialize 0070                           __pcstackCOMMON 0070  
                           __pidataBANK0 022D                      ??_SYSTEM_Initialize 0072  
                              ?_TMR0_ISR 0070                        ??_SPI1_Initialize 0070  
                         ??_INT_CallBack 0070                       _spi1_configuration 0157  
              __end_of_SYSTEM_Initialize 01E5                               __pbssBANK0 0024  
                  _TMR0_OverflowCallback 0020              SPI1_BufferWrite@bufferInput 0075  
                             __pmaintext 013D                                  ?___wmul 0070  
                             ??_TMR0_ISR 0070                               __pintentry 0004  
                                _INT_ISR 0223                                  _OSCTUNE 0892  
                                _SSP1ADD 018D                                  _SLRCONA 1F3B  
                                _SLRCONB 1F46                                  _SLRCONC 1F51  
                                _SSP1BUF 018C                                  __ptext1 01E5  
                                __ptext2 01B0                                  __ptext3 0038  
                                __ptext4 0102                                  __ptext5 00E2  
                                __ptext6 01D5                                  __ptext7 0186  
                                __ptext8 020E                                  __ptext9 00A4  
                                _divider 0027                 ??_PIN_MANAGER_Initialize 0070  
                _INT_SetInterruptHandler 0217                     end_of_initialization 0034  
                      ?_SPI1_BufferWrite 0070                       ??_SPI1_BufferWrite 0073  
                   __end_of_INT_CallBack 020E                          _SPI1_BufferRead 0000  
                  __end_of_spi_send_data 01C3                                _SPI1_Open 0038  
                              _SSP1SSPPS 1EC7                                _TMR0_Stop 0000  
                    _SPI1_BufferExchange 0000            _TMR0_OverflowCallbackRegister 0000  
                         _TMR0_PeriodGet 0000                           _TMR0_PeriodSet 0000  
                             _toggle_led 01E5                        _TMR0_Deinitialize 0000  
                        _SPI1_Initialize 020E     __end_of_TMR0_DefaultOverflowCallback 01D5  
           _TMR0_DefaultOverflowCallback 01C3                           __end_of_Timer0 0186  
           __end_of_INTERRUPT_Initialize 0201                               ?_SPI1_Open 0076  
                         __end_of___wmul 0121                ??_INT_SetInterruptHandler 0072  
                    start_initialization 0027             ?_INT_DefaultInterruptHandler 0070  
          ?_TMR0_DefaultOverflowCallback 0070                        spi_send_data@data 007A  
                               ??___wmul 0074                              __pdataBANK0 0027  
                          _SPI1_ByteRead 0000                              __pbssCOMMON 007C  
                            ?_toggle_led 0070                                ___latbits 0001  
                               ?_INT_ISR 0070                  __end_of_SPI1_Initialize 0217  
                              __pnvBANK0 0020               SPI1_BufferWrite@bufferData 0070  
                 _PIN_MANAGER_Initialize 00A4               SPI1_BufferWrite@bufferSize 0071  
                   SPI1_Open@returnValue 0079            ??_INT_DefaultInterruptHandler 0070  
                            ??_SPI1_Open 0077             ??_INTERRUPT_InterruptManager 0070  
                           _INT_CallBack 0201                                _led_state 0024  
                   _INTERRUPT_Initialize 01F4                         _CLOCK_Initialize 021D  
                      ??_TMR0_Initialize 0070                           ___wmul@product 0074  
                               _LATAbits 0018                                 _PIE0bits 0716  
                               _PIE1bits 0717                                 _PIR0bits 070C  
                               _PIR1bits 070D                                 _SSP1CON1 0190  
                               _SSP1CON3 0192                                 _TMR0_ISR 019C  
                               _SSP1STAT 018F           ??_TMR0_DefaultOverflowCallback 0070  
                      _SPI1_Deinitialize 0000                        ___wmul@multiplier 0070  
                               _WPUCbits 1F4F                         ?_SPI1_Initialize 0070  
                  ?_INTERRUPT_Initialize 0070                      __end_of_SPI1_Client 013D  
                             _T0CON0bits 059E                                 __ptext10 01F4  
                               __ptext11 0217                                 __ptext12 021D  
                               __ptext14 019C                                 __ptext15 01C3  
                               __ptext16 0223                                 __ptext17 0201  
                               __ptext18 0229                             _SSP1CON1bits 0190  
                       _TMR0_MaxCountGet 0000                            _timerOverflow 0025  
                               int$flags 007E       __end_of_INTERRUPT_InterruptManager 0025  
             _INTERRUPT_InterruptManager 0004                               _INTCONbits 000B  
                           ??_toggle_led 0070                     _INT_InterruptHandler 0022  
                            _SPI1_Client 0121                   ??_INTERRUPT_Initialize 0072  
                               intlevel1 0000                  ?_PIN_MANAGER_Initialize 0070  
                     __end_of_toggle_led 01F4                          _TMR0_CounterGet 0000  
                        _TMR0_CounterSet 0000                         _SPI1_BufferWrite 00E2  
               ?_INT_SetInterruptHandler 0070                            _spi_send_data 01B0  
               __end_of_CLOCK_Initialize 0223                            __pstringtext1 0121  
                          __pstringtext2 0157                            __pstringtext3 0170  
                             _SPI1_Close 0000                               _SSP1DATPPS 1EC6  
                             _SSP1CLKPPS 1EC5                          _TMR0_Initialize 0186  
                             _TMR0_Start 0000           __end_of_PIN_MANAGER_Initialize 00E2  
                SPI1_Open@spiConfigIndex 0076               __end_of_spi1_configuration 0170  
