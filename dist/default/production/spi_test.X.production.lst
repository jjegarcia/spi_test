

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Jan 19 18:39:19 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,space=0,delta=2
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Generated 25/01/2024 GMT
    42                           ; 
    43                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F15244 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0008                     bsr             equ	8
    76     0005                     fsr0h           equ	5
    77     0004                     fsr0l           equ	4
    78     0007                     fsr1h           equ	7
    79     0006                     fsr1l           equ	6
    80     0000                     indf            equ	0
    81     0000                     indf0           equ	0
    82     0001                     indf1           equ	1
    83     000B                     intcon          equ	11
    84     0002                     pc              equ	2
    85     0002                     pcl             equ	2
    86     000A                     pclath          equ	10
    87     0003                     status          equ	3
    88     0009                     wreg            equ	9
    89     0000                     INDF0           equ	0	;# 
    90     0001                     INDF1           equ	1	;# 
    91     0002                     PCL             equ	2	;# 
    92     0003                     STATUS          equ	3	;# 
    93     0004                     FSR0L           equ	4	;# 
    94     0005                     FSR0H           equ	5	;# 
    95     0006                     FSR1L           equ	6	;# 
    96     0007                     FSR1H           equ	7	;# 
    97     0008                     BSR             equ	8	;# 
    98     0009                     WREG            equ	9	;# 
    99     000A                     PCLATH          equ	10	;# 
   100     000B                     INTCON          equ	11	;# 
   101     000C                     PORTA           equ	12	;# 
   102     000D                     PORTB           equ	13	;# 
   103     000E                     PORTC           equ	14	;# 
   104     0012                     TRISA           equ	18	;# 
   105     0013                     TRISB           equ	19	;# 
   106     0014                     TRISC           equ	20	;# 
   107     0018                     LATA            equ	24	;# 
   108     0019                     LATB            equ	25	;# 
   109     001A                     LATC            equ	26	;# 
   110     009A                     CPCON           equ	154	;# 
   111     009B                     ADRES           equ	155	;# 
   112     009B                     ADRESL          equ	155	;# 
   113     009C                     ADRESH          equ	156	;# 
   114     009D                     ADCON0          equ	157	;# 
   115     009E                     ADCON1          equ	158	;# 
   116     009F                     ADACT           equ	159	;# 
   117     010C                     RB4I2C          equ	268	;# 
   118     010D                     RB6I2C          equ	269	;# 
   119     0119                     RC1REG          equ	281	;# 
   120     011A                     TX1REG          equ	282	;# 
   121     011B                     SP1BRG          equ	283	;# 
   122     011B                     SP1BRGL         equ	283	;# 
   123     011C                     SP1BRGH         equ	284	;# 
   124     011D                     RC1STA          equ	285	;# 
   125     011E                     TX1STA          equ	286	;# 
   126     011F                     BAUD1CON        equ	287	;# 
   127     018C                     SSP1BUF         equ	396	;# 
   128     018D                     SSP1ADD         equ	397	;# 
   129     018E                     SSP1MSK         equ	398	;# 
   130     018F                     SSP1STAT        equ	399	;# 
   131     0190                     SSP1CON1        equ	400	;# 
   132     0191                     SSP1CON2        equ	401	;# 
   133     0192                     SSP1CON3        equ	402	;# 
   134     020C                     TMR1            equ	524	;# 
   135     020C                     TMR1L           equ	524	;# 
   136     020D                     TMR1H           equ	525	;# 
   137     020E                     T1CON           equ	526	;# 
   138     020E                     TMR1CON         equ	526	;# 
   139     020F                     T1GCON          equ	527	;# 
   140     020F                     TMR1GCON        equ	527	;# 
   141     0210                     T1GATE          equ	528	;# 
   142     0210                     TMR1GATE        equ	528	;# 
   143     0211                     T1CLK           equ	529	;# 
   144     0211                     TMR1CLK         equ	529	;# 
   145     0211                     PR1             equ	529	;# 
   146     028C                     T2TMR           equ	652	;# 
   147     028C                     TMR2            equ	652	;# 
   148     028D                     T2PR            equ	653	;# 
   149     028D                     PR2             equ	653	;# 
   150     028E                     T2CON           equ	654	;# 
   151     028F                     T2HLT           equ	655	;# 
   152     0290                     T2CLKCON        equ	656	;# 
   153     0291                     T2RST           equ	657	;# 
   154     030C                     CCPR1           equ	780	;# 
   155     030C                     CCPR1L          equ	780	;# 
   156     030D                     CCPR1H          equ	781	;# 
   157     030E                     CCP1CON         equ	782	;# 
   158     030F                     CCP1CAP         equ	783	;# 
   159     0310                     CCPR2           equ	784	;# 
   160     0310                     CCPR2L          equ	784	;# 
   161     0311                     CCPR2H          equ	785	;# 
   162     0312                     CCP2CON         equ	786	;# 
   163     0313                     CCP2CAP         equ	787	;# 
   164     0314                     PWM3DC          equ	788	;# 
   165     0314                     PWM3DCL         equ	788	;# 
   166     0315                     PWM3DCH         equ	789	;# 
   167     0316                     PWM3CON         equ	790	;# 
   168     0318                     PWM4DC          equ	792	;# 
   169     0318                     PWM4DCL         equ	792	;# 
   170     0319                     PWM4DCH         equ	793	;# 
   171     031A                     PWM4CON         equ	794	;# 
   172     059C                     TMR0L           equ	1436	;# 
   173     059C                     TMR0            equ	1436	;# 
   174     059D                     TMR0H           equ	1437	;# 
   175     059D                     PR0             equ	1437	;# 
   176     059E                     T0CON0          equ	1438	;# 
   177     059F                     T0CON1          equ	1439	;# 
   178     070C                     PIR0            equ	1804	;# 
   179     070D                     PIR1            equ	1805	;# 
   180     070E                     PIR2            equ	1806	;# 
   181     0716                     PIE0            equ	1814	;# 
   182     0717                     PIE1            equ	1815	;# 
   183     0718                     PIE2            equ	1816	;# 
   184     080C                     WDTCON          equ	2060	;# 
   185     0811                     BORCON          equ	2065	;# 
   186     0813                     PCON0           equ	2067	;# 
   187     0814                     PCON1           equ	2068	;# 
   188     081A                     NVMADR          equ	2074	;# 
   189     081A                     NVMADRL         equ	2074	;# 
   190     081B                     NVMADRH         equ	2075	;# 
   191     081C                     NVMDAT          equ	2076	;# 
   192     081C                     NVMDATL         equ	2076	;# 
   193     081D                     NVMDATH         equ	2077	;# 
   194     081E                     NVMCON1         equ	2078	;# 
   195     081F                     NVMCON2         equ	2079	;# 
   196     088E                     OSCCON          equ	2190	;# 
   197     0890                     OSCSTAT         equ	2192	;# 
   198     0891                     OSCEN           equ	2193	;# 
   199     0892                     OSCTUNE         equ	2194	;# 
   200     0893                     OSCFRQ          equ	2195	;# 
   201     090C                     FVRCON          equ	2316	;# 
   202     1E8F                     PPSLOCK         equ	7823	;# 
   203     1E90                     INTPPS          equ	7824	;# 
   204     1E91                     T0CKIPPS        equ	7825	;# 
   205     1E92                     T1CKIPPS        equ	7826	;# 
   206     1E93                     T1GPPS          equ	7827	;# 
   207     1E9C                     T2INPPS         equ	7836	;# 
   208     1EA1                     CCP1PPS         equ	7841	;# 
   209     1EA2                     CCP2PPS         equ	7842	;# 
   210     1EC3                     ADACTPPS        equ	7875	;# 
   211     1EC5                     SSP1CLKPPS      equ	7877	;# 
   212     1EC6                     SSP1DATPPS      equ	7878	;# 
   213     1EC7                     SSP1SSPPS       equ	7879	;# 
   214     1ECB                     RX1PPS          equ	7883	;# 
   215     1ECB                     RX1DTPPS        equ	7883	;# 
   216     1ECB                     RXPPS           equ	7883	;# 
   217     1ECC                     CK1PPS          equ	7884	;# 
   218     1ECC                     TX1CKPPS        equ	7884	;# 
   219     1ECC                     CKPPS           equ	7884	;# 
   220     1F10                     RA0PPS          equ	7952	;# 
   221     1F11                     RA1PPS          equ	7953	;# 
   222     1F12                     RA2PPS          equ	7954	;# 
   223     1F14                     RA4PPS          equ	7956	;# 
   224     1F15                     RA5PPS          equ	7957	;# 
   225     1F1C                     RB4PPS          equ	7964	;# 
   226     1F1D                     RB5PPS          equ	7965	;# 
   227     1F1E                     RB6PPS          equ	7966	;# 
   228     1F1F                     RB7PPS          equ	7967	;# 
   229     1F20                     RC0PPS          equ	7968	;# 
   230     1F21                     RC1PPS          equ	7969	;# 
   231     1F22                     RC2PPS          equ	7970	;# 
   232     1F23                     RC3PPS          equ	7971	;# 
   233     1F24                     RC4PPS          equ	7972	;# 
   234     1F25                     RC5PPS          equ	7973	;# 
   235     1F26                     RC6PPS          equ	7974	;# 
   236     1F27                     RC7PPS          equ	7975	;# 
   237     1F38                     ANSELA          equ	7992	;# 
   238     1F39                     WPUA            equ	7993	;# 
   239     1F3A                     ODCONA          equ	7994	;# 
   240     1F3B                     SLRCONA         equ	7995	;# 
   241     1F3C                     INLVLA          equ	7996	;# 
   242     1F3D                     IOCAP           equ	7997	;# 
   243     1F3E                     IOCAN           equ	7998	;# 
   244     1F3F                     IOCAF           equ	7999	;# 
   245     1F43                     ANSELB          equ	8003	;# 
   246     1F44                     WPUB            equ	8004	;# 
   247     1F45                     ODCONB          equ	8005	;# 
   248     1F46                     SLRCONB         equ	8006	;# 
   249     1F47                     INLVLB          equ	8007	;# 
   250     1F48                     IOCBP           equ	8008	;# 
   251     1F49                     IOCBN           equ	8009	;# 
   252     1F4A                     IOCBF           equ	8010	;# 
   253     1F4E                     ANSELC          equ	8014	;# 
   254     1F4F                     WPUC            equ	8015	;# 
   255     1F50                     ODCONC          equ	8016	;# 
   256     1F51                     SLRCONC         equ	8017	;# 
   257     1F52                     INLVLC          equ	8018	;# 
   258     1F53                     IOCCP           equ	8019	;# 
   259     1F54                     IOCCN           equ	8020	;# 
   260     1F55                     IOCCF           equ	8021	;# 
   261     1FE4                     STATUS_SHAD     equ	8164	;# 
   262     1FE5                     WREG_SHAD       equ	8165	;# 
   263     1FE6                     BSR_SHAD        equ	8166	;# 
   264     1FE7                     PCLATH_SHAD     equ	8167	;# 
   265     1FE8                     FSR0_SHAD       equ	8168	;# 
   266     1FE8                     FSR0L_SHAD      equ	8168	;# 
   267     1FE9                     FSR0H_SHAD      equ	8169	;# 
   268     1FEA                     FSR1L_SHAD      equ	8170	;# 
   269     1FEB                     FSR1H_SHAD      equ	8171	;# 
   270     1FED                     STKPTR          equ	8173	;# 
   271     1FEE                     TOSL            equ	8174	;# 
   272     1FEF                     TOSH            equ	8175	;# 
   273     0000                     INDF0           equ	0	;# 
   274     0001                     INDF1           equ	1	;# 
   275     0002                     PCL             equ	2	;# 
   276     0003                     STATUS          equ	3	;# 
   277     0004                     FSR0L           equ	4	;# 
   278     0005                     FSR0H           equ	5	;# 
   279     0006                     FSR1L           equ	6	;# 
   280     0007                     FSR1H           equ	7	;# 
   281     0008                     BSR             equ	8	;# 
   282     0009                     WREG            equ	9	;# 
   283     000A                     PCLATH          equ	10	;# 
   284     000B                     INTCON          equ	11	;# 
   285     000C                     PORTA           equ	12	;# 
   286     000D                     PORTB           equ	13	;# 
   287     000E                     PORTC           equ	14	;# 
   288     0012                     TRISA           equ	18	;# 
   289     0013                     TRISB           equ	19	;# 
   290     0014                     TRISC           equ	20	;# 
   291     0018                     LATA            equ	24	;# 
   292     0019                     LATB            equ	25	;# 
   293     001A                     LATC            equ	26	;# 
   294     009A                     CPCON           equ	154	;# 
   295     009B                     ADRES           equ	155	;# 
   296     009B                     ADRESL          equ	155	;# 
   297     009C                     ADRESH          equ	156	;# 
   298     009D                     ADCON0          equ	157	;# 
   299     009E                     ADCON1          equ	158	;# 
   300     009F                     ADACT           equ	159	;# 
   301     010C                     RB4I2C          equ	268	;# 
   302     010D                     RB6I2C          equ	269	;# 
   303     0119                     RC1REG          equ	281	;# 
   304     011A                     TX1REG          equ	282	;# 
   305     011B                     SP1BRG          equ	283	;# 
   306     011B                     SP1BRGL         equ	283	;# 
   307     011C                     SP1BRGH         equ	284	;# 
   308     011D                     RC1STA          equ	285	;# 
   309     011E                     TX1STA          equ	286	;# 
   310     011F                     BAUD1CON        equ	287	;# 
   311     018C                     SSP1BUF         equ	396	;# 
   312     018D                     SSP1ADD         equ	397	;# 
   313     018E                     SSP1MSK         equ	398	;# 
   314     018F                     SSP1STAT        equ	399	;# 
   315     0190                     SSP1CON1        equ	400	;# 
   316     0191                     SSP1CON2        equ	401	;# 
   317     0192                     SSP1CON3        equ	402	;# 
   318     020C                     TMR1            equ	524	;# 
   319     020C                     TMR1L           equ	524	;# 
   320     020D                     TMR1H           equ	525	;# 
   321     020E                     T1CON           equ	526	;# 
   322     020E                     TMR1CON         equ	526	;# 
   323     020F                     T1GCON          equ	527	;# 
   324     020F                     TMR1GCON        equ	527	;# 
   325     0210                     T1GATE          equ	528	;# 
   326     0210                     TMR1GATE        equ	528	;# 
   327     0211                     T1CLK           equ	529	;# 
   328     0211                     TMR1CLK         equ	529	;# 
   329     0211                     PR1             equ	529	;# 
   330     028C                     T2TMR           equ	652	;# 
   331     028C                     TMR2            equ	652	;# 
   332     028D                     T2PR            equ	653	;# 
   333     028D                     PR2             equ	653	;# 
   334     028E                     T2CON           equ	654	;# 
   335     028F                     T2HLT           equ	655	;# 
   336     0290                     T2CLKCON        equ	656	;# 
   337     0291                     T2RST           equ	657	;# 
   338     030C                     CCPR1           equ	780	;# 
   339     030C                     CCPR1L          equ	780	;# 
   340     030D                     CCPR1H          equ	781	;# 
   341     030E                     CCP1CON         equ	782	;# 
   342     030F                     CCP1CAP         equ	783	;# 
   343     0310                     CCPR2           equ	784	;# 
   344     0310                     CCPR2L          equ	784	;# 
   345     0311                     CCPR2H          equ	785	;# 
   346     0312                     CCP2CON         equ	786	;# 
   347     0313                     CCP2CAP         equ	787	;# 
   348     0314                     PWM3DC          equ	788	;# 
   349     0314                     PWM3DCL         equ	788	;# 
   350     0315                     PWM3DCH         equ	789	;# 
   351     0316                     PWM3CON         equ	790	;# 
   352     0318                     PWM4DC          equ	792	;# 
   353     0318                     PWM4DCL         equ	792	;# 
   354     0319                     PWM4DCH         equ	793	;# 
   355     031A                     PWM4CON         equ	794	;# 
   356     059C                     TMR0L           equ	1436	;# 
   357     059C                     TMR0            equ	1436	;# 
   358     059D                     TMR0H           equ	1437	;# 
   359     059D                     PR0             equ	1437	;# 
   360     059E                     T0CON0          equ	1438	;# 
   361     059F                     T0CON1          equ	1439	;# 
   362     070C                     PIR0            equ	1804	;# 
   363     070D                     PIR1            equ	1805	;# 
   364     070E                     PIR2            equ	1806	;# 
   365     0716                     PIE0            equ	1814	;# 
   366     0717                     PIE1            equ	1815	;# 
   367     0718                     PIE2            equ	1816	;# 
   368     080C                     WDTCON          equ	2060	;# 
   369     0811                     BORCON          equ	2065	;# 
   370     0813                     PCON0           equ	2067	;# 
   371     0814                     PCON1           equ	2068	;# 
   372     081A                     NVMADR          equ	2074	;# 
   373     081A                     NVMADRL         equ	2074	;# 
   374     081B                     NVMADRH         equ	2075	;# 
   375     081C                     NVMDAT          equ	2076	;# 
   376     081C                     NVMDATL         equ	2076	;# 
   377     081D                     NVMDATH         equ	2077	;# 
   378     081E                     NVMCON1         equ	2078	;# 
   379     081F                     NVMCON2         equ	2079	;# 
   380     088E                     OSCCON          equ	2190	;# 
   381     0890                     OSCSTAT         equ	2192	;# 
   382     0891                     OSCEN           equ	2193	;# 
   383     0892                     OSCTUNE         equ	2194	;# 
   384     0893                     OSCFRQ          equ	2195	;# 
   385     090C                     FVRCON          equ	2316	;# 
   386     1E8F                     PPSLOCK         equ	7823	;# 
   387     1E90                     INTPPS          equ	7824	;# 
   388     1E91                     T0CKIPPS        equ	7825	;# 
   389     1E92                     T1CKIPPS        equ	7826	;# 
   390     1E93                     T1GPPS          equ	7827	;# 
   391     1E9C                     T2INPPS         equ	7836	;# 
   392     1EA1                     CCP1PPS         equ	7841	;# 
   393     1EA2                     CCP2PPS         equ	7842	;# 
   394     1EC3                     ADACTPPS        equ	7875	;# 
   395     1EC5                     SSP1CLKPPS      equ	7877	;# 
   396     1EC6                     SSP1DATPPS      equ	7878	;# 
   397     1EC7                     SSP1SSPPS       equ	7879	;# 
   398     1ECB                     RX1PPS          equ	7883	;# 
   399     1ECB                     RX1DTPPS        equ	7883	;# 
   400     1ECB                     RXPPS           equ	7883	;# 
   401     1ECC                     CK1PPS          equ	7884	;# 
   402     1ECC                     TX1CKPPS        equ	7884	;# 
   403     1ECC                     CKPPS           equ	7884	;# 
   404     1F10                     RA0PPS          equ	7952	;# 
   405     1F11                     RA1PPS          equ	7953	;# 
   406     1F12                     RA2PPS          equ	7954	;# 
   407     1F14                     RA4PPS          equ	7956	;# 
   408     1F15                     RA5PPS          equ	7957	;# 
   409     1F1C                     RB4PPS          equ	7964	;# 
   410     1F1D                     RB5PPS          equ	7965	;# 
   411     1F1E                     RB6PPS          equ	7966	;# 
   412     1F1F                     RB7PPS          equ	7967	;# 
   413     1F20                     RC0PPS          equ	7968	;# 
   414     1F21                     RC1PPS          equ	7969	;# 
   415     1F22                     RC2PPS          equ	7970	;# 
   416     1F23                     RC3PPS          equ	7971	;# 
   417     1F24                     RC4PPS          equ	7972	;# 
   418     1F25                     RC5PPS          equ	7973	;# 
   419     1F26                     RC6PPS          equ	7974	;# 
   420     1F27                     RC7PPS          equ	7975	;# 
   421     1F38                     ANSELA          equ	7992	;# 
   422     1F39                     WPUA            equ	7993	;# 
   423     1F3A                     ODCONA          equ	7994	;# 
   424     1F3B                     SLRCONA         equ	7995	;# 
   425     1F3C                     INLVLA          equ	7996	;# 
   426     1F3D                     IOCAP           equ	7997	;# 
   427     1F3E                     IOCAN           equ	7998	;# 
   428     1F3F                     IOCAF           equ	7999	;# 
   429     1F43                     ANSELB          equ	8003	;# 
   430     1F44                     WPUB            equ	8004	;# 
   431     1F45                     ODCONB          equ	8005	;# 
   432     1F46                     SLRCONB         equ	8006	;# 
   433     1F47                     INLVLB          equ	8007	;# 
   434     1F48                     IOCBP           equ	8008	;# 
   435     1F49                     IOCBN           equ	8009	;# 
   436     1F4A                     IOCBF           equ	8010	;# 
   437     1F4E                     ANSELC          equ	8014	;# 
   438     1F4F                     WPUC            equ	8015	;# 
   439     1F50                     ODCONC          equ	8016	;# 
   440     1F51                     SLRCONC         equ	8017	;# 
   441     1F52                     INLVLC          equ	8018	;# 
   442     1F53                     IOCCP           equ	8019	;# 
   443     1F54                     IOCCN           equ	8020	;# 
   444     1F55                     IOCCF           equ	8021	;# 
   445     1FE4                     STATUS_SHAD     equ	8164	;# 
   446     1FE5                     WREG_SHAD       equ	8165	;# 
   447     1FE6                     BSR_SHAD        equ	8166	;# 
   448     1FE7                     PCLATH_SHAD     equ	8167	;# 
   449     1FE8                     FSR0_SHAD       equ	8168	;# 
   450     1FE8                     FSR0L_SHAD      equ	8168	;# 
   451     1FE9                     FSR0H_SHAD      equ	8169	;# 
   452     1FEA                     FSR1L_SHAD      equ	8170	;# 
   453     1FEB                     FSR1H_SHAD      equ	8171	;# 
   454     1FED                     STKPTR          equ	8173	;# 
   455     1FEE                     TOSL            equ	8174	;# 
   456     1FEF                     TOSH            equ	8175	;# 
   457     0000                     INDF0           equ	0	;# 
   458     0001                     INDF1           equ	1	;# 
   459     0002                     PCL             equ	2	;# 
   460     0003                     STATUS          equ	3	;# 
   461     0004                     FSR0L           equ	4	;# 
   462     0005                     FSR0H           equ	5	;# 
   463     0006                     FSR1L           equ	6	;# 
   464     0007                     FSR1H           equ	7	;# 
   465     0008                     BSR             equ	8	;# 
   466     0009                     WREG            equ	9	;# 
   467     000A                     PCLATH          equ	10	;# 
   468     000B                     INTCON          equ	11	;# 
   469     000C                     PORTA           equ	12	;# 
   470     000D                     PORTB           equ	13	;# 
   471     000E                     PORTC           equ	14	;# 
   472     0012                     TRISA           equ	18	;# 
   473     0013                     TRISB           equ	19	;# 
   474     0014                     TRISC           equ	20	;# 
   475     0018                     LATA            equ	24	;# 
   476     0019                     LATB            equ	25	;# 
   477     001A                     LATC            equ	26	;# 
   478     009A                     CPCON           equ	154	;# 
   479     009B                     ADRES           equ	155	;# 
   480     009B                     ADRESL          equ	155	;# 
   481     009C                     ADRESH          equ	156	;# 
   482     009D                     ADCON0          equ	157	;# 
   483     009E                     ADCON1          equ	158	;# 
   484     009F                     ADACT           equ	159	;# 
   485     010C                     RB4I2C          equ	268	;# 
   486     010D                     RB6I2C          equ	269	;# 
   487     0119                     RC1REG          equ	281	;# 
   488     011A                     TX1REG          equ	282	;# 
   489     011B                     SP1BRG          equ	283	;# 
   490     011B                     SP1BRGL         equ	283	;# 
   491     011C                     SP1BRGH         equ	284	;# 
   492     011D                     RC1STA          equ	285	;# 
   493     011E                     TX1STA          equ	286	;# 
   494     011F                     BAUD1CON        equ	287	;# 
   495     018C                     SSP1BUF         equ	396	;# 
   496     018D                     SSP1ADD         equ	397	;# 
   497     018E                     SSP1MSK         equ	398	;# 
   498     018F                     SSP1STAT        equ	399	;# 
   499     0190                     SSP1CON1        equ	400	;# 
   500     0191                     SSP1CON2        equ	401	;# 
   501     0192                     SSP1CON3        equ	402	;# 
   502     020C                     TMR1            equ	524	;# 
   503     020C                     TMR1L           equ	524	;# 
   504     020D                     TMR1H           equ	525	;# 
   505     020E                     T1CON           equ	526	;# 
   506     020E                     TMR1CON         equ	526	;# 
   507     020F                     T1GCON          equ	527	;# 
   508     020F                     TMR1GCON        equ	527	;# 
   509     0210                     T1GATE          equ	528	;# 
   510     0210                     TMR1GATE        equ	528	;# 
   511     0211                     T1CLK           equ	529	;# 
   512     0211                     TMR1CLK         equ	529	;# 
   513     0211                     PR1             equ	529	;# 
   514     028C                     T2TMR           equ	652	;# 
   515     028C                     TMR2            equ	652	;# 
   516     028D                     T2PR            equ	653	;# 
   517     028D                     PR2             equ	653	;# 
   518     028E                     T2CON           equ	654	;# 
   519     028F                     T2HLT           equ	655	;# 
   520     0290                     T2CLKCON        equ	656	;# 
   521     0291                     T2RST           equ	657	;# 
   522     030C                     CCPR1           equ	780	;# 
   523     030C                     CCPR1L          equ	780	;# 
   524     030D                     CCPR1H          equ	781	;# 
   525     030E                     CCP1CON         equ	782	;# 
   526     030F                     CCP1CAP         equ	783	;# 
   527     0310                     CCPR2           equ	784	;# 
   528     0310                     CCPR2L          equ	784	;# 
   529     0311                     CCPR2H          equ	785	;# 
   530     0312                     CCP2CON         equ	786	;# 
   531     0313                     CCP2CAP         equ	787	;# 
   532     0314                     PWM3DC          equ	788	;# 
   533     0314                     PWM3DCL         equ	788	;# 
   534     0315                     PWM3DCH         equ	789	;# 
   535     0316                     PWM3CON         equ	790	;# 
   536     0318                     PWM4DC          equ	792	;# 
   537     0318                     PWM4DCL         equ	792	;# 
   538     0319                     PWM4DCH         equ	793	;# 
   539     031A                     PWM4CON         equ	794	;# 
   540     059C                     TMR0L           equ	1436	;# 
   541     059C                     TMR0            equ	1436	;# 
   542     059D                     TMR0H           equ	1437	;# 
   543     059D                     PR0             equ	1437	;# 
   544     059E                     T0CON0          equ	1438	;# 
   545     059F                     T0CON1          equ	1439	;# 
   546     070C                     PIR0            equ	1804	;# 
   547     070D                     PIR1            equ	1805	;# 
   548     070E                     PIR2            equ	1806	;# 
   549     0716                     PIE0            equ	1814	;# 
   550     0717                     PIE1            equ	1815	;# 
   551     0718                     PIE2            equ	1816	;# 
   552     080C                     WDTCON          equ	2060	;# 
   553     0811                     BORCON          equ	2065	;# 
   554     0813                     PCON0           equ	2067	;# 
   555     0814                     PCON1           equ	2068	;# 
   556     081A                     NVMADR          equ	2074	;# 
   557     081A                     NVMADRL         equ	2074	;# 
   558     081B                     NVMADRH         equ	2075	;# 
   559     081C                     NVMDAT          equ	2076	;# 
   560     081C                     NVMDATL         equ	2076	;# 
   561     081D                     NVMDATH         equ	2077	;# 
   562     081E                     NVMCON1         equ	2078	;# 
   563     081F                     NVMCON2         equ	2079	;# 
   564     088E                     OSCCON          equ	2190	;# 
   565     0890                     OSCSTAT         equ	2192	;# 
   566     0891                     OSCEN           equ	2193	;# 
   567     0892                     OSCTUNE         equ	2194	;# 
   568     0893                     OSCFRQ          equ	2195	;# 
   569     090C                     FVRCON          equ	2316	;# 
   570     1E8F                     PPSLOCK         equ	7823	;# 
   571     1E90                     INTPPS          equ	7824	;# 
   572     1E91                     T0CKIPPS        equ	7825	;# 
   573     1E92                     T1CKIPPS        equ	7826	;# 
   574     1E93                     T1GPPS          equ	7827	;# 
   575     1E9C                     T2INPPS         equ	7836	;# 
   576     1EA1                     CCP1PPS         equ	7841	;# 
   577     1EA2                     CCP2PPS         equ	7842	;# 
   578     1EC3                     ADACTPPS        equ	7875	;# 
   579     1EC5                     SSP1CLKPPS      equ	7877	;# 
   580     1EC6                     SSP1DATPPS      equ	7878	;# 
   581     1EC7                     SSP1SSPPS       equ	7879	;# 
   582     1ECB                     RX1PPS          equ	7883	;# 
   583     1ECB                     RX1DTPPS        equ	7883	;# 
   584     1ECB                     RXPPS           equ	7883	;# 
   585     1ECC                     CK1PPS          equ	7884	;# 
   586     1ECC                     TX1CKPPS        equ	7884	;# 
   587     1ECC                     CKPPS           equ	7884	;# 
   588     1F10                     RA0PPS          equ	7952	;# 
   589     1F11                     RA1PPS          equ	7953	;# 
   590     1F12                     RA2PPS          equ	7954	;# 
   591     1F14                     RA4PPS          equ	7956	;# 
   592     1F15                     RA5PPS          equ	7957	;# 
   593     1F1C                     RB4PPS          equ	7964	;# 
   594     1F1D                     RB5PPS          equ	7965	;# 
   595     1F1E                     RB6PPS          equ	7966	;# 
   596     1F1F                     RB7PPS          equ	7967	;# 
   597     1F20                     RC0PPS          equ	7968	;# 
   598     1F21                     RC1PPS          equ	7969	;# 
   599     1F22                     RC2PPS          equ	7970	;# 
   600     1F23                     RC3PPS          equ	7971	;# 
   601     1F24                     RC4PPS          equ	7972	;# 
   602     1F25                     RC5PPS          equ	7973	;# 
   603     1F26                     RC6PPS          equ	7974	;# 
   604     1F27                     RC7PPS          equ	7975	;# 
   605     1F38                     ANSELA          equ	7992	;# 
   606     1F39                     WPUA            equ	7993	;# 
   607     1F3A                     ODCONA          equ	7994	;# 
   608     1F3B                     SLRCONA         equ	7995	;# 
   609     1F3C                     INLVLA          equ	7996	;# 
   610     1F3D                     IOCAP           equ	7997	;# 
   611     1F3E                     IOCAN           equ	7998	;# 
   612     1F3F                     IOCAF           equ	7999	;# 
   613     1F43                     ANSELB          equ	8003	;# 
   614     1F44                     WPUB            equ	8004	;# 
   615     1F45                     ODCONB          equ	8005	;# 
   616     1F46                     SLRCONB         equ	8006	;# 
   617     1F47                     INLVLB          equ	8007	;# 
   618     1F48                     IOCBP           equ	8008	;# 
   619     1F49                     IOCBN           equ	8009	;# 
   620     1F4A                     IOCBF           equ	8010	;# 
   621     1F4E                     ANSELC          equ	8014	;# 
   622     1F4F                     WPUC            equ	8015	;# 
   623     1F50                     ODCONC          equ	8016	;# 
   624     1F51                     SLRCONC         equ	8017	;# 
   625     1F52                     INLVLC          equ	8018	;# 
   626     1F53                     IOCCP           equ	8019	;# 
   627     1F54                     IOCCN           equ	8020	;# 
   628     1F55                     IOCCF           equ	8021	;# 
   629     1FE4                     STATUS_SHAD     equ	8164	;# 
   630     1FE5                     WREG_SHAD       equ	8165	;# 
   631     1FE6                     BSR_SHAD        equ	8166	;# 
   632     1FE7                     PCLATH_SHAD     equ	8167	;# 
   633     1FE8                     FSR0_SHAD       equ	8168	;# 
   634     1FE8                     FSR0L_SHAD      equ	8168	;# 
   635     1FE9                     FSR0H_SHAD      equ	8169	;# 
   636     1FEA                     FSR1L_SHAD      equ	8170	;# 
   637     1FEB                     FSR1H_SHAD      equ	8171	;# 
   638     1FED                     STKPTR          equ	8173	;# 
   639     1FEE                     TOSL            equ	8174	;# 
   640     1FEF                     TOSH            equ	8175	;# 
   641     0000                     INDF0           equ	0	;# 
   642     0001                     INDF1           equ	1	;# 
   643     0002                     PCL             equ	2	;# 
   644     0003                     STATUS          equ	3	;# 
   645     0004                     FSR0L           equ	4	;# 
   646     0005                     FSR0H           equ	5	;# 
   647     0006                     FSR1L           equ	6	;# 
   648     0007                     FSR1H           equ	7	;# 
   649     0008                     BSR             equ	8	;# 
   650     0009                     WREG            equ	9	;# 
   651     000A                     PCLATH          equ	10	;# 
   652     000B                     INTCON          equ	11	;# 
   653     000C                     PORTA           equ	12	;# 
   654     000D                     PORTB           equ	13	;# 
   655     000E                     PORTC           equ	14	;# 
   656     0012                     TRISA           equ	18	;# 
   657     0013                     TRISB           equ	19	;# 
   658     0014                     TRISC           equ	20	;# 
   659     0018                     LATA            equ	24	;# 
   660     0019                     LATB            equ	25	;# 
   661     001A                     LATC            equ	26	;# 
   662     009A                     CPCON           equ	154	;# 
   663     009B                     ADRES           equ	155	;# 
   664     009B                     ADRESL          equ	155	;# 
   665     009C                     ADRESH          equ	156	;# 
   666     009D                     ADCON0          equ	157	;# 
   667     009E                     ADCON1          equ	158	;# 
   668     009F                     ADACT           equ	159	;# 
   669     010C                     RB4I2C          equ	268	;# 
   670     010D                     RB6I2C          equ	269	;# 
   671     0119                     RC1REG          equ	281	;# 
   672     011A                     TX1REG          equ	282	;# 
   673     011B                     SP1BRG          equ	283	;# 
   674     011B                     SP1BRGL         equ	283	;# 
   675     011C                     SP1BRGH         equ	284	;# 
   676     011D                     RC1STA          equ	285	;# 
   677     011E                     TX1STA          equ	286	;# 
   678     011F                     BAUD1CON        equ	287	;# 
   679     018C                     SSP1BUF         equ	396	;# 
   680     018D                     SSP1ADD         equ	397	;# 
   681     018E                     SSP1MSK         equ	398	;# 
   682     018F                     SSP1STAT        equ	399	;# 
   683     0190                     SSP1CON1        equ	400	;# 
   684     0191                     SSP1CON2        equ	401	;# 
   685     0192                     SSP1CON3        equ	402	;# 
   686     020C                     TMR1            equ	524	;# 
   687     020C                     TMR1L           equ	524	;# 
   688     020D                     TMR1H           equ	525	;# 
   689     020E                     T1CON           equ	526	;# 
   690     020E                     TMR1CON         equ	526	;# 
   691     020F                     T1GCON          equ	527	;# 
   692     020F                     TMR1GCON        equ	527	;# 
   693     0210                     T1GATE          equ	528	;# 
   694     0210                     TMR1GATE        equ	528	;# 
   695     0211                     T1CLK           equ	529	;# 
   696     0211                     TMR1CLK         equ	529	;# 
   697     0211                     PR1             equ	529	;# 
   698     028C                     T2TMR           equ	652	;# 
   699     028C                     TMR2            equ	652	;# 
   700     028D                     T2PR            equ	653	;# 
   701     028D                     PR2             equ	653	;# 
   702     028E                     T2CON           equ	654	;# 
   703     028F                     T2HLT           equ	655	;# 
   704     0290                     T2CLKCON        equ	656	;# 
   705     0291                     T2RST           equ	657	;# 
   706     030C                     CCPR1           equ	780	;# 
   707     030C                     CCPR1L          equ	780	;# 
   708     030D                     CCPR1H          equ	781	;# 
   709     030E                     CCP1CON         equ	782	;# 
   710     030F                     CCP1CAP         equ	783	;# 
   711     0310                     CCPR2           equ	784	;# 
   712     0310                     CCPR2L          equ	784	;# 
   713     0311                     CCPR2H          equ	785	;# 
   714     0312                     CCP2CON         equ	786	;# 
   715     0313                     CCP2CAP         equ	787	;# 
   716     0314                     PWM3DC          equ	788	;# 
   717     0314                     PWM3DCL         equ	788	;# 
   718     0315                     PWM3DCH         equ	789	;# 
   719     0316                     PWM3CON         equ	790	;# 
   720     0318                     PWM4DC          equ	792	;# 
   721     0318                     PWM4DCL         equ	792	;# 
   722     0319                     PWM4DCH         equ	793	;# 
   723     031A                     PWM4CON         equ	794	;# 
   724     059C                     TMR0L           equ	1436	;# 
   725     059C                     TMR0            equ	1436	;# 
   726     059D                     TMR0H           equ	1437	;# 
   727     059D                     PR0             equ	1437	;# 
   728     059E                     T0CON0          equ	1438	;# 
   729     059F                     T0CON1          equ	1439	;# 
   730     070C                     PIR0            equ	1804	;# 
   731     070D                     PIR1            equ	1805	;# 
   732     070E                     PIR2            equ	1806	;# 
   733     0716                     PIE0            equ	1814	;# 
   734     0717                     PIE1            equ	1815	;# 
   735     0718                     PIE2            equ	1816	;# 
   736     080C                     WDTCON          equ	2060	;# 
   737     0811                     BORCON          equ	2065	;# 
   738     0813                     PCON0           equ	2067	;# 
   739     0814                     PCON1           equ	2068	;# 
   740     081A                     NVMADR          equ	2074	;# 
   741     081A                     NVMADRL         equ	2074	;# 
   742     081B                     NVMADRH         equ	2075	;# 
   743     081C                     NVMDAT          equ	2076	;# 
   744     081C                     NVMDATL         equ	2076	;# 
   745     081D                     NVMDATH         equ	2077	;# 
   746     081E                     NVMCON1         equ	2078	;# 
   747     081F                     NVMCON2         equ	2079	;# 
   748     088E                     OSCCON          equ	2190	;# 
   749     0890                     OSCSTAT         equ	2192	;# 
   750     0891                     OSCEN           equ	2193	;# 
   751     0892                     OSCTUNE         equ	2194	;# 
   752     0893                     OSCFRQ          equ	2195	;# 
   753     090C                     FVRCON          equ	2316	;# 
   754     1E8F                     PPSLOCK         equ	7823	;# 
   755     1E90                     INTPPS          equ	7824	;# 
   756     1E91                     T0CKIPPS        equ	7825	;# 
   757     1E92                     T1CKIPPS        equ	7826	;# 
   758     1E93                     T1GPPS          equ	7827	;# 
   759     1E9C                     T2INPPS         equ	7836	;# 
   760     1EA1                     CCP1PPS         equ	7841	;# 
   761     1EA2                     CCP2PPS         equ	7842	;# 
   762     1EC3                     ADACTPPS        equ	7875	;# 
   763     1EC5                     SSP1CLKPPS      equ	7877	;# 
   764     1EC6                     SSP1DATPPS      equ	7878	;# 
   765     1EC7                     SSP1SSPPS       equ	7879	;# 
   766     1ECB                     RX1PPS          equ	7883	;# 
   767     1ECB                     RX1DTPPS        equ	7883	;# 
   768     1ECB                     RXPPS           equ	7883	;# 
   769     1ECC                     CK1PPS          equ	7884	;# 
   770     1ECC                     TX1CKPPS        equ	7884	;# 
   771     1ECC                     CKPPS           equ	7884	;# 
   772     1F10                     RA0PPS          equ	7952	;# 
   773     1F11                     RA1PPS          equ	7953	;# 
   774     1F12                     RA2PPS          equ	7954	;# 
   775     1F14                     RA4PPS          equ	7956	;# 
   776     1F15                     RA5PPS          equ	7957	;# 
   777     1F1C                     RB4PPS          equ	7964	;# 
   778     1F1D                     RB5PPS          equ	7965	;# 
   779     1F1E                     RB6PPS          equ	7966	;# 
   780     1F1F                     RB7PPS          equ	7967	;# 
   781     1F20                     RC0PPS          equ	7968	;# 
   782     1F21                     RC1PPS          equ	7969	;# 
   783     1F22                     RC2PPS          equ	7970	;# 
   784     1F23                     RC3PPS          equ	7971	;# 
   785     1F24                     RC4PPS          equ	7972	;# 
   786     1F25                     RC5PPS          equ	7973	;# 
   787     1F26                     RC6PPS          equ	7974	;# 
   788     1F27                     RC7PPS          equ	7975	;# 
   789     1F38                     ANSELA          equ	7992	;# 
   790     1F39                     WPUA            equ	7993	;# 
   791     1F3A                     ODCONA          equ	7994	;# 
   792     1F3B                     SLRCONA         equ	7995	;# 
   793     1F3C                     INLVLA          equ	7996	;# 
   794     1F3D                     IOCAP           equ	7997	;# 
   795     1F3E                     IOCAN           equ	7998	;# 
   796     1F3F                     IOCAF           equ	7999	;# 
   797     1F43                     ANSELB          equ	8003	;# 
   798     1F44                     WPUB            equ	8004	;# 
   799     1F45                     ODCONB          equ	8005	;# 
   800     1F46                     SLRCONB         equ	8006	;# 
   801     1F47                     INLVLB          equ	8007	;# 
   802     1F48                     IOCBP           equ	8008	;# 
   803     1F49                     IOCBN           equ	8009	;# 
   804     1F4A                     IOCBF           equ	8010	;# 
   805     1F4E                     ANSELC          equ	8014	;# 
   806     1F4F                     WPUC            equ	8015	;# 
   807     1F50                     ODCONC          equ	8016	;# 
   808     1F51                     SLRCONC         equ	8017	;# 
   809     1F52                     INLVLC          equ	8018	;# 
   810     1F53                     IOCCP           equ	8019	;# 
   811     1F54                     IOCCN           equ	8020	;# 
   812     1F55                     IOCCF           equ	8021	;# 
   813     1FE4                     STATUS_SHAD     equ	8164	;# 
   814     1FE5                     WREG_SHAD       equ	8165	;# 
   815     1FE6                     BSR_SHAD        equ	8166	;# 
   816     1FE7                     PCLATH_SHAD     equ	8167	;# 
   817     1FE8                     FSR0_SHAD       equ	8168	;# 
   818     1FE8                     FSR0L_SHAD      equ	8168	;# 
   819     1FE9                     FSR0H_SHAD      equ	8169	;# 
   820     1FEA                     FSR1L_SHAD      equ	8170	;# 
   821     1FEB                     FSR1H_SHAD      equ	8171	;# 
   822     1FED                     STKPTR          equ	8173	;# 
   823     1FEE                     TOSL            equ	8174	;# 
   824     1FEF                     TOSH            equ	8175	;# 
   825     0000                     INDF0           equ	0	;# 
   826     0001                     INDF1           equ	1	;# 
   827     0002                     PCL             equ	2	;# 
   828     0003                     STATUS          equ	3	;# 
   829     0004                     FSR0L           equ	4	;# 
   830     0005                     FSR0H           equ	5	;# 
   831     0006                     FSR1L           equ	6	;# 
   832     0007                     FSR1H           equ	7	;# 
   833     0008                     BSR             equ	8	;# 
   834     0009                     WREG            equ	9	;# 
   835     000A                     PCLATH          equ	10	;# 
   836     000B                     INTCON          equ	11	;# 
   837     000C                     PORTA           equ	12	;# 
   838     000D                     PORTB           equ	13	;# 
   839     000E                     PORTC           equ	14	;# 
   840     0012                     TRISA           equ	18	;# 
   841     0013                     TRISB           equ	19	;# 
   842     0014                     TRISC           equ	20	;# 
   843     0018                     LATA            equ	24	;# 
   844     0019                     LATB            equ	25	;# 
   845     001A                     LATC            equ	26	;# 
   846     009A                     CPCON           equ	154	;# 
   847     009B                     ADRES           equ	155	;# 
   848     009B                     ADRESL          equ	155	;# 
   849     009C                     ADRESH          equ	156	;# 
   850     009D                     ADCON0          equ	157	;# 
   851     009E                     ADCON1          equ	158	;# 
   852     009F                     ADACT           equ	159	;# 
   853     010C                     RB4I2C          equ	268	;# 
   854     010D                     RB6I2C          equ	269	;# 
   855     0119                     RC1REG          equ	281	;# 
   856     011A                     TX1REG          equ	282	;# 
   857     011B                     SP1BRG          equ	283	;# 
   858     011B                     SP1BRGL         equ	283	;# 
   859     011C                     SP1BRGH         equ	284	;# 
   860     011D                     RC1STA          equ	285	;# 
   861     011E                     TX1STA          equ	286	;# 
   862     011F                     BAUD1CON        equ	287	;# 
   863     018C                     SSP1BUF         equ	396	;# 
   864     018D                     SSP1ADD         equ	397	;# 
   865     018E                     SSP1MSK         equ	398	;# 
   866     018F                     SSP1STAT        equ	399	;# 
   867     0190                     SSP1CON1        equ	400	;# 
   868     0191                     SSP1CON2        equ	401	;# 
   869     0192                     SSP1CON3        equ	402	;# 
   870     020C                     TMR1            equ	524	;# 
   871     020C                     TMR1L           equ	524	;# 
   872     020D                     TMR1H           equ	525	;# 
   873     020E                     T1CON           equ	526	;# 
   874     020E                     TMR1CON         equ	526	;# 
   875     020F                     T1GCON          equ	527	;# 
   876     020F                     TMR1GCON        equ	527	;# 
   877     0210                     T1GATE          equ	528	;# 
   878     0210                     TMR1GATE        equ	528	;# 
   879     0211                     T1CLK           equ	529	;# 
   880     0211                     TMR1CLK         equ	529	;# 
   881     0211                     PR1             equ	529	;# 
   882     028C                     T2TMR           equ	652	;# 
   883     028C                     TMR2            equ	652	;# 
   884     028D                     T2PR            equ	653	;# 
   885     028D                     PR2             equ	653	;# 
   886     028E                     T2CON           equ	654	;# 
   887     028F                     T2HLT           equ	655	;# 
   888     0290                     T2CLKCON        equ	656	;# 
   889     0291                     T2RST           equ	657	;# 
   890     030C                     CCPR1           equ	780	;# 
   891     030C                     CCPR1L          equ	780	;# 
   892     030D                     CCPR1H          equ	781	;# 
   893     030E                     CCP1CON         equ	782	;# 
   894     030F                     CCP1CAP         equ	783	;# 
   895     0310                     CCPR2           equ	784	;# 
   896     0310                     CCPR2L          equ	784	;# 
   897     0311                     CCPR2H          equ	785	;# 
   898     0312                     CCP2CON         equ	786	;# 
   899     0313                     CCP2CAP         equ	787	;# 
   900     0314                     PWM3DC          equ	788	;# 
   901     0314                     PWM3DCL         equ	788	;# 
   902     0315                     PWM3DCH         equ	789	;# 
   903     0316                     PWM3CON         equ	790	;# 
   904     0318                     PWM4DC          equ	792	;# 
   905     0318                     PWM4DCL         equ	792	;# 
   906     0319                     PWM4DCH         equ	793	;# 
   907     031A                     PWM4CON         equ	794	;# 
   908     059C                     TMR0L           equ	1436	;# 
   909     059C                     TMR0            equ	1436	;# 
   910     059D                     TMR0H           equ	1437	;# 
   911     059D                     PR0             equ	1437	;# 
   912     059E                     T0CON0          equ	1438	;# 
   913     059F                     T0CON1          equ	1439	;# 
   914     070C                     PIR0            equ	1804	;# 
   915     070D                     PIR1            equ	1805	;# 
   916     070E                     PIR2            equ	1806	;# 
   917     0716                     PIE0            equ	1814	;# 
   918     0717                     PIE1            equ	1815	;# 
   919     0718                     PIE2            equ	1816	;# 
   920     080C                     WDTCON          equ	2060	;# 
   921     0811                     BORCON          equ	2065	;# 
   922     0813                     PCON0           equ	2067	;# 
   923     0814                     PCON1           equ	2068	;# 
   924     081A                     NVMADR          equ	2074	;# 
   925     081A                     NVMADRL         equ	2074	;# 
   926     081B                     NVMADRH         equ	2075	;# 
   927     081C                     NVMDAT          equ	2076	;# 
   928     081C                     NVMDATL         equ	2076	;# 
   929     081D                     NVMDATH         equ	2077	;# 
   930     081E                     NVMCON1         equ	2078	;# 
   931     081F                     NVMCON2         equ	2079	;# 
   932     088E                     OSCCON          equ	2190	;# 
   933     0890                     OSCSTAT         equ	2192	;# 
   934     0891                     OSCEN           equ	2193	;# 
   935     0892                     OSCTUNE         equ	2194	;# 
   936     0893                     OSCFRQ          equ	2195	;# 
   937     090C                     FVRCON          equ	2316	;# 
   938     1E8F                     PPSLOCK         equ	7823	;# 
   939     1E90                     INTPPS          equ	7824	;# 
   940     1E91                     T0CKIPPS        equ	7825	;# 
   941     1E92                     T1CKIPPS        equ	7826	;# 
   942     1E93                     T1GPPS          equ	7827	;# 
   943     1E9C                     T2INPPS         equ	7836	;# 
   944     1EA1                     CCP1PPS         equ	7841	;# 
   945     1EA2                     CCP2PPS         equ	7842	;# 
   946     1EC3                     ADACTPPS        equ	7875	;# 
   947     1EC5                     SSP1CLKPPS      equ	7877	;# 
   948     1EC6                     SSP1DATPPS      equ	7878	;# 
   949     1EC7                     SSP1SSPPS       equ	7879	;# 
   950     1ECB                     RX1PPS          equ	7883	;# 
   951     1ECB                     RX1DTPPS        equ	7883	;# 
   952     1ECB                     RXPPS           equ	7883	;# 
   953     1ECC                     CK1PPS          equ	7884	;# 
   954     1ECC                     TX1CKPPS        equ	7884	;# 
   955     1ECC                     CKPPS           equ	7884	;# 
   956     1F10                     RA0PPS          equ	7952	;# 
   957     1F11                     RA1PPS          equ	7953	;# 
   958     1F12                     RA2PPS          equ	7954	;# 
   959     1F14                     RA4PPS          equ	7956	;# 
   960     1F15                     RA5PPS          equ	7957	;# 
   961     1F1C                     RB4PPS          equ	7964	;# 
   962     1F1D                     RB5PPS          equ	7965	;# 
   963     1F1E                     RB6PPS          equ	7966	;# 
   964     1F1F                     RB7PPS          equ	7967	;# 
   965     1F20                     RC0PPS          equ	7968	;# 
   966     1F21                     RC1PPS          equ	7969	;# 
   967     1F22                     RC2PPS          equ	7970	;# 
   968     1F23                     RC3PPS          equ	7971	;# 
   969     1F24                     RC4PPS          equ	7972	;# 
   970     1F25                     RC5PPS          equ	7973	;# 
   971     1F26                     RC6PPS          equ	7974	;# 
   972     1F27                     RC7PPS          equ	7975	;# 
   973     1F38                     ANSELA          equ	7992	;# 
   974     1F39                     WPUA            equ	7993	;# 
   975     1F3A                     ODCONA          equ	7994	;# 
   976     1F3B                     SLRCONA         equ	7995	;# 
   977     1F3C                     INLVLA          equ	7996	;# 
   978     1F3D                     IOCAP           equ	7997	;# 
   979     1F3E                     IOCAN           equ	7998	;# 
   980     1F3F                     IOCAF           equ	7999	;# 
   981     1F43                     ANSELB          equ	8003	;# 
   982     1F44                     WPUB            equ	8004	;# 
   983     1F45                     ODCONB          equ	8005	;# 
   984     1F46                     SLRCONB         equ	8006	;# 
   985     1F47                     INLVLB          equ	8007	;# 
   986     1F48                     IOCBP           equ	8008	;# 
   987     1F49                     IOCBN           equ	8009	;# 
   988     1F4A                     IOCBF           equ	8010	;# 
   989     1F4E                     ANSELC          equ	8014	;# 
   990     1F4F                     WPUC            equ	8015	;# 
   991     1F50                     ODCONC          equ	8016	;# 
   992     1F51                     SLRCONC         equ	8017	;# 
   993     1F52                     INLVLC          equ	8018	;# 
   994     1F53                     IOCCP           equ	8019	;# 
   995     1F54                     IOCCN           equ	8020	;# 
   996     1F55                     IOCCF           equ	8021	;# 
   997     1FE4                     STATUS_SHAD     equ	8164	;# 
   998     1FE5                     WREG_SHAD       equ	8165	;# 
   999     1FE6                     BSR_SHAD        equ	8166	;# 
  1000     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1001     1FE8                     FSR0_SHAD       equ	8168	;# 
  1002     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1003     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1004     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1005     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1006     1FED                     STKPTR          equ	8173	;# 
  1007     1FEE                     TOSL            equ	8174	;# 
  1008     1FEF                     TOSH            equ	8175	;# 
  1009     0000                     INDF0           equ	0	;# 
  1010     0001                     INDF1           equ	1	;# 
  1011     0002                     PCL             equ	2	;# 
  1012     0003                     STATUS          equ	3	;# 
  1013     0004                     FSR0L           equ	4	;# 
  1014     0005                     FSR0H           equ	5	;# 
  1015     0006                     FSR1L           equ	6	;# 
  1016     0007                     FSR1H           equ	7	;# 
  1017     0008                     BSR             equ	8	;# 
  1018     0009                     WREG            equ	9	;# 
  1019     000A                     PCLATH          equ	10	;# 
  1020     000B                     INTCON          equ	11	;# 
  1021     000C                     PORTA           equ	12	;# 
  1022     000D                     PORTB           equ	13	;# 
  1023     000E                     PORTC           equ	14	;# 
  1024     0012                     TRISA           equ	18	;# 
  1025     0013                     TRISB           equ	19	;# 
  1026     0014                     TRISC           equ	20	;# 
  1027     0018                     LATA            equ	24	;# 
  1028     0019                     LATB            equ	25	;# 
  1029     001A                     LATC            equ	26	;# 
  1030     009A                     CPCON           equ	154	;# 
  1031     009B                     ADRES           equ	155	;# 
  1032     009B                     ADRESL          equ	155	;# 
  1033     009C                     ADRESH          equ	156	;# 
  1034     009D                     ADCON0          equ	157	;# 
  1035     009E                     ADCON1          equ	158	;# 
  1036     009F                     ADACT           equ	159	;# 
  1037     010C                     RB4I2C          equ	268	;# 
  1038     010D                     RB6I2C          equ	269	;# 
  1039     0119                     RC1REG          equ	281	;# 
  1040     011A                     TX1REG          equ	282	;# 
  1041     011B                     SP1BRG          equ	283	;# 
  1042     011B                     SP1BRGL         equ	283	;# 
  1043     011C                     SP1BRGH         equ	284	;# 
  1044     011D                     RC1STA          equ	285	;# 
  1045     011E                     TX1STA          equ	286	;# 
  1046     011F                     BAUD1CON        equ	287	;# 
  1047     018C                     SSP1BUF         equ	396	;# 
  1048     018D                     SSP1ADD         equ	397	;# 
  1049     018E                     SSP1MSK         equ	398	;# 
  1050     018F                     SSP1STAT        equ	399	;# 
  1051     0190                     SSP1CON1        equ	400	;# 
  1052     0191                     SSP1CON2        equ	401	;# 
  1053     0192                     SSP1CON3        equ	402	;# 
  1054     020C                     TMR1            equ	524	;# 
  1055     020C                     TMR1L           equ	524	;# 
  1056     020D                     TMR1H           equ	525	;# 
  1057     020E                     T1CON           equ	526	;# 
  1058     020E                     TMR1CON         equ	526	;# 
  1059     020F                     T1GCON          equ	527	;# 
  1060     020F                     TMR1GCON        equ	527	;# 
  1061     0210                     T1GATE          equ	528	;# 
  1062     0210                     TMR1GATE        equ	528	;# 
  1063     0211                     T1CLK           equ	529	;# 
  1064     0211                     TMR1CLK         equ	529	;# 
  1065     0211                     PR1             equ	529	;# 
  1066     028C                     T2TMR           equ	652	;# 
  1067     028C                     TMR2            equ	652	;# 
  1068     028D                     T2PR            equ	653	;# 
  1069     028D                     PR2             equ	653	;# 
  1070     028E                     T2CON           equ	654	;# 
  1071     028F                     T2HLT           equ	655	;# 
  1072     0290                     T2CLKCON        equ	656	;# 
  1073     0291                     T2RST           equ	657	;# 
  1074     030C                     CCPR1           equ	780	;# 
  1075     030C                     CCPR1L          equ	780	;# 
  1076     030D                     CCPR1H          equ	781	;# 
  1077     030E                     CCP1CON         equ	782	;# 
  1078     030F                     CCP1CAP         equ	783	;# 
  1079     0310                     CCPR2           equ	784	;# 
  1080     0310                     CCPR2L          equ	784	;# 
  1081     0311                     CCPR2H          equ	785	;# 
  1082     0312                     CCP2CON         equ	786	;# 
  1083     0313                     CCP2CAP         equ	787	;# 
  1084     0314                     PWM3DC          equ	788	;# 
  1085     0314                     PWM3DCL         equ	788	;# 
  1086     0315                     PWM3DCH         equ	789	;# 
  1087     0316                     PWM3CON         equ	790	;# 
  1088     0318                     PWM4DC          equ	792	;# 
  1089     0318                     PWM4DCL         equ	792	;# 
  1090     0319                     PWM4DCH         equ	793	;# 
  1091     031A                     PWM4CON         equ	794	;# 
  1092     059C                     TMR0L           equ	1436	;# 
  1093     059C                     TMR0            equ	1436	;# 
  1094     059D                     TMR0H           equ	1437	;# 
  1095     059D                     PR0             equ	1437	;# 
  1096     059E                     T0CON0          equ	1438	;# 
  1097     059F                     T0CON1          equ	1439	;# 
  1098     070C                     PIR0            equ	1804	;# 
  1099     070D                     PIR1            equ	1805	;# 
  1100     070E                     PIR2            equ	1806	;# 
  1101     0716                     PIE0            equ	1814	;# 
  1102     0717                     PIE1            equ	1815	;# 
  1103     0718                     PIE2            equ	1816	;# 
  1104     080C                     WDTCON          equ	2060	;# 
  1105     0811                     BORCON          equ	2065	;# 
  1106     0813                     PCON0           equ	2067	;# 
  1107     0814                     PCON1           equ	2068	;# 
  1108     081A                     NVMADR          equ	2074	;# 
  1109     081A                     NVMADRL         equ	2074	;# 
  1110     081B                     NVMADRH         equ	2075	;# 
  1111     081C                     NVMDAT          equ	2076	;# 
  1112     081C                     NVMDATL         equ	2076	;# 
  1113     081D                     NVMDATH         equ	2077	;# 
  1114     081E                     NVMCON1         equ	2078	;# 
  1115     081F                     NVMCON2         equ	2079	;# 
  1116     088E                     OSCCON          equ	2190	;# 
  1117     0890                     OSCSTAT         equ	2192	;# 
  1118     0891                     OSCEN           equ	2193	;# 
  1119     0892                     OSCTUNE         equ	2194	;# 
  1120     0893                     OSCFRQ          equ	2195	;# 
  1121     090C                     FVRCON          equ	2316	;# 
  1122     1E8F                     PPSLOCK         equ	7823	;# 
  1123     1E90                     INTPPS          equ	7824	;# 
  1124     1E91                     T0CKIPPS        equ	7825	;# 
  1125     1E92                     T1CKIPPS        equ	7826	;# 
  1126     1E93                     T1GPPS          equ	7827	;# 
  1127     1E9C                     T2INPPS         equ	7836	;# 
  1128     1EA1                     CCP1PPS         equ	7841	;# 
  1129     1EA2                     CCP2PPS         equ	7842	;# 
  1130     1EC3                     ADACTPPS        equ	7875	;# 
  1131     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1132     1EC6                     SSP1DATPPS      equ	7878	;# 
  1133     1EC7                     SSP1SSPPS       equ	7879	;# 
  1134     1ECB                     RX1PPS          equ	7883	;# 
  1135     1ECB                     RX1DTPPS        equ	7883	;# 
  1136     1ECB                     RXPPS           equ	7883	;# 
  1137     1ECC                     CK1PPS          equ	7884	;# 
  1138     1ECC                     TX1CKPPS        equ	7884	;# 
  1139     1ECC                     CKPPS           equ	7884	;# 
  1140     1F10                     RA0PPS          equ	7952	;# 
  1141     1F11                     RA1PPS          equ	7953	;# 
  1142     1F12                     RA2PPS          equ	7954	;# 
  1143     1F14                     RA4PPS          equ	7956	;# 
  1144     1F15                     RA5PPS          equ	7957	;# 
  1145     1F1C                     RB4PPS          equ	7964	;# 
  1146     1F1D                     RB5PPS          equ	7965	;# 
  1147     1F1E                     RB6PPS          equ	7966	;# 
  1148     1F1F                     RB7PPS          equ	7967	;# 
  1149     1F20                     RC0PPS          equ	7968	;# 
  1150     1F21                     RC1PPS          equ	7969	;# 
  1151     1F22                     RC2PPS          equ	7970	;# 
  1152     1F23                     RC3PPS          equ	7971	;# 
  1153     1F24                     RC4PPS          equ	7972	;# 
  1154     1F25                     RC5PPS          equ	7973	;# 
  1155     1F26                     RC6PPS          equ	7974	;# 
  1156     1F27                     RC7PPS          equ	7975	;# 
  1157     1F38                     ANSELA          equ	7992	;# 
  1158     1F39                     WPUA            equ	7993	;# 
  1159     1F3A                     ODCONA          equ	7994	;# 
  1160     1F3B                     SLRCONA         equ	7995	;# 
  1161     1F3C                     INLVLA          equ	7996	;# 
  1162     1F3D                     IOCAP           equ	7997	;# 
  1163     1F3E                     IOCAN           equ	7998	;# 
  1164     1F3F                     IOCAF           equ	7999	;# 
  1165     1F43                     ANSELB          equ	8003	;# 
  1166     1F44                     WPUB            equ	8004	;# 
  1167     1F45                     ODCONB          equ	8005	;# 
  1168     1F46                     SLRCONB         equ	8006	;# 
  1169     1F47                     INLVLB          equ	8007	;# 
  1170     1F48                     IOCBP           equ	8008	;# 
  1171     1F49                     IOCBN           equ	8009	;# 
  1172     1F4A                     IOCBF           equ	8010	;# 
  1173     1F4E                     ANSELC          equ	8014	;# 
  1174     1F4F                     WPUC            equ	8015	;# 
  1175     1F50                     ODCONC          equ	8016	;# 
  1176     1F51                     SLRCONC         equ	8017	;# 
  1177     1F52                     INLVLC          equ	8018	;# 
  1178     1F53                     IOCCP           equ	8019	;# 
  1179     1F54                     IOCCN           equ	8020	;# 
  1180     1F55                     IOCCF           equ	8021	;# 
  1181     1FE4                     STATUS_SHAD     equ	8164	;# 
  1182     1FE5                     WREG_SHAD       equ	8165	;# 
  1183     1FE6                     BSR_SHAD        equ	8166	;# 
  1184     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1185     1FE8                     FSR0_SHAD       equ	8168	;# 
  1186     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1187     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1188     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1189     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1190     1FED                     STKPTR          equ	8173	;# 
  1191     1FEE                     TOSL            equ	8174	;# 
  1192     1FEF                     TOSH            equ	8175	;# 
  1193     0000                     INDF0           equ	0	;# 
  1194     0001                     INDF1           equ	1	;# 
  1195     0002                     PCL             equ	2	;# 
  1196     0003                     STATUS          equ	3	;# 
  1197     0004                     FSR0L           equ	4	;# 
  1198     0005                     FSR0H           equ	5	;# 
  1199     0006                     FSR1L           equ	6	;# 
  1200     0007                     FSR1H           equ	7	;# 
  1201     0008                     BSR             equ	8	;# 
  1202     0009                     WREG            equ	9	;# 
  1203     000A                     PCLATH          equ	10	;# 
  1204     000B                     INTCON          equ	11	;# 
  1205     000C                     PORTA           equ	12	;# 
  1206     000D                     PORTB           equ	13	;# 
  1207     000E                     PORTC           equ	14	;# 
  1208     0012                     TRISA           equ	18	;# 
  1209     0013                     TRISB           equ	19	;# 
  1210     0014                     TRISC           equ	20	;# 
  1211     0018                     LATA            equ	24	;# 
  1212     0019                     LATB            equ	25	;# 
  1213     001A                     LATC            equ	26	;# 
  1214     009A                     CPCON           equ	154	;# 
  1215     009B                     ADRES           equ	155	;# 
  1216     009B                     ADRESL          equ	155	;# 
  1217     009C                     ADRESH          equ	156	;# 
  1218     009D                     ADCON0          equ	157	;# 
  1219     009E                     ADCON1          equ	158	;# 
  1220     009F                     ADACT           equ	159	;# 
  1221     010C                     RB4I2C          equ	268	;# 
  1222     010D                     RB6I2C          equ	269	;# 
  1223     0119                     RC1REG          equ	281	;# 
  1224     011A                     TX1REG          equ	282	;# 
  1225     011B                     SP1BRG          equ	283	;# 
  1226     011B                     SP1BRGL         equ	283	;# 
  1227     011C                     SP1BRGH         equ	284	;# 
  1228     011D                     RC1STA          equ	285	;# 
  1229     011E                     TX1STA          equ	286	;# 
  1230     011F                     BAUD1CON        equ	287	;# 
  1231     018C                     SSP1BUF         equ	396	;# 
  1232     018D                     SSP1ADD         equ	397	;# 
  1233     018E                     SSP1MSK         equ	398	;# 
  1234     018F                     SSP1STAT        equ	399	;# 
  1235     0190                     SSP1CON1        equ	400	;# 
  1236     0191                     SSP1CON2        equ	401	;# 
  1237     0192                     SSP1CON3        equ	402	;# 
  1238     020C                     TMR1            equ	524	;# 
  1239     020C                     TMR1L           equ	524	;# 
  1240     020D                     TMR1H           equ	525	;# 
  1241     020E                     T1CON           equ	526	;# 
  1242     020E                     TMR1CON         equ	526	;# 
  1243     020F                     T1GCON          equ	527	;# 
  1244     020F                     TMR1GCON        equ	527	;# 
  1245     0210                     T1GATE          equ	528	;# 
  1246     0210                     TMR1GATE        equ	528	;# 
  1247     0211                     T1CLK           equ	529	;# 
  1248     0211                     TMR1CLK         equ	529	;# 
  1249     0211                     PR1             equ	529	;# 
  1250     028C                     T2TMR           equ	652	;# 
  1251     028C                     TMR2            equ	652	;# 
  1252     028D                     T2PR            equ	653	;# 
  1253     028D                     PR2             equ	653	;# 
  1254     028E                     T2CON           equ	654	;# 
  1255     028F                     T2HLT           equ	655	;# 
  1256     0290                     T2CLKCON        equ	656	;# 
  1257     0291                     T2RST           equ	657	;# 
  1258     030C                     CCPR1           equ	780	;# 
  1259     030C                     CCPR1L          equ	780	;# 
  1260     030D                     CCPR1H          equ	781	;# 
  1261     030E                     CCP1CON         equ	782	;# 
  1262     030F                     CCP1CAP         equ	783	;# 
  1263     0310                     CCPR2           equ	784	;# 
  1264     0310                     CCPR2L          equ	784	;# 
  1265     0311                     CCPR2H          equ	785	;# 
  1266     0312                     CCP2CON         equ	786	;# 
  1267     0313                     CCP2CAP         equ	787	;# 
  1268     0314                     PWM3DC          equ	788	;# 
  1269     0314                     PWM3DCL         equ	788	;# 
  1270     0315                     PWM3DCH         equ	789	;# 
  1271     0316                     PWM3CON         equ	790	;# 
  1272     0318                     PWM4DC          equ	792	;# 
  1273     0318                     PWM4DCL         equ	792	;# 
  1274     0319                     PWM4DCH         equ	793	;# 
  1275     031A                     PWM4CON         equ	794	;# 
  1276     059C                     TMR0L           equ	1436	;# 
  1277     059C                     TMR0            equ	1436	;# 
  1278     059D                     TMR0H           equ	1437	;# 
  1279     059D                     PR0             equ	1437	;# 
  1280     059E                     T0CON0          equ	1438	;# 
  1281     059F                     T0CON1          equ	1439	;# 
  1282     070C                     PIR0            equ	1804	;# 
  1283     070D                     PIR1            equ	1805	;# 
  1284     070E                     PIR2            equ	1806	;# 
  1285     0716                     PIE0            equ	1814	;# 
  1286     0717                     PIE1            equ	1815	;# 
  1287     0718                     PIE2            equ	1816	;# 
  1288     080C                     WDTCON          equ	2060	;# 
  1289     0811                     BORCON          equ	2065	;# 
  1290     0813                     PCON0           equ	2067	;# 
  1291     0814                     PCON1           equ	2068	;# 
  1292     081A                     NVMADR          equ	2074	;# 
  1293     081A                     NVMADRL         equ	2074	;# 
  1294     081B                     NVMADRH         equ	2075	;# 
  1295     081C                     NVMDAT          equ	2076	;# 
  1296     081C                     NVMDATL         equ	2076	;# 
  1297     081D                     NVMDATH         equ	2077	;# 
  1298     081E                     NVMCON1         equ	2078	;# 
  1299     081F                     NVMCON2         equ	2079	;# 
  1300     088E                     OSCCON          equ	2190	;# 
  1301     0890                     OSCSTAT         equ	2192	;# 
  1302     0891                     OSCEN           equ	2193	;# 
  1303     0892                     OSCTUNE         equ	2194	;# 
  1304     0893                     OSCFRQ          equ	2195	;# 
  1305     090C                     FVRCON          equ	2316	;# 
  1306     1E8F                     PPSLOCK         equ	7823	;# 
  1307     1E90                     INTPPS          equ	7824	;# 
  1308     1E91                     T0CKIPPS        equ	7825	;# 
  1309     1E92                     T1CKIPPS        equ	7826	;# 
  1310     1E93                     T1GPPS          equ	7827	;# 
  1311     1E9C                     T2INPPS         equ	7836	;# 
  1312     1EA1                     CCP1PPS         equ	7841	;# 
  1313     1EA2                     CCP2PPS         equ	7842	;# 
  1314     1EC3                     ADACTPPS        equ	7875	;# 
  1315     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1316     1EC6                     SSP1DATPPS      equ	7878	;# 
  1317     1EC7                     SSP1SSPPS       equ	7879	;# 
  1318     1ECB                     RX1PPS          equ	7883	;# 
  1319     1ECB                     RX1DTPPS        equ	7883	;# 
  1320     1ECB                     RXPPS           equ	7883	;# 
  1321     1ECC                     CK1PPS          equ	7884	;# 
  1322     1ECC                     TX1CKPPS        equ	7884	;# 
  1323     1ECC                     CKPPS           equ	7884	;# 
  1324     1F10                     RA0PPS          equ	7952	;# 
  1325     1F11                     RA1PPS          equ	7953	;# 
  1326     1F12                     RA2PPS          equ	7954	;# 
  1327     1F14                     RA4PPS          equ	7956	;# 
  1328     1F15                     RA5PPS          equ	7957	;# 
  1329     1F1C                     RB4PPS          equ	7964	;# 
  1330     1F1D                     RB5PPS          equ	7965	;# 
  1331     1F1E                     RB6PPS          equ	7966	;# 
  1332     1F1F                     RB7PPS          equ	7967	;# 
  1333     1F20                     RC0PPS          equ	7968	;# 
  1334     1F21                     RC1PPS          equ	7969	;# 
  1335     1F22                     RC2PPS          equ	7970	;# 
  1336     1F23                     RC3PPS          equ	7971	;# 
  1337     1F24                     RC4PPS          equ	7972	;# 
  1338     1F25                     RC5PPS          equ	7973	;# 
  1339     1F26                     RC6PPS          equ	7974	;# 
  1340     1F27                     RC7PPS          equ	7975	;# 
  1341     1F38                     ANSELA          equ	7992	;# 
  1342     1F39                     WPUA            equ	7993	;# 
  1343     1F3A                     ODCONA          equ	7994	;# 
  1344     1F3B                     SLRCONA         equ	7995	;# 
  1345     1F3C                     INLVLA          equ	7996	;# 
  1346     1F3D                     IOCAP           equ	7997	;# 
  1347     1F3E                     IOCAN           equ	7998	;# 
  1348     1F3F                     IOCAF           equ	7999	;# 
  1349     1F43                     ANSELB          equ	8003	;# 
  1350     1F44                     WPUB            equ	8004	;# 
  1351     1F45                     ODCONB          equ	8005	;# 
  1352     1F46                     SLRCONB         equ	8006	;# 
  1353     1F47                     INLVLB          equ	8007	;# 
  1354     1F48                     IOCBP           equ	8008	;# 
  1355     1F49                     IOCBN           equ	8009	;# 
  1356     1F4A                     IOCBF           equ	8010	;# 
  1357     1F4E                     ANSELC          equ	8014	;# 
  1358     1F4F                     WPUC            equ	8015	;# 
  1359     1F50                     ODCONC          equ	8016	;# 
  1360     1F51                     SLRCONC         equ	8017	;# 
  1361     1F52                     INLVLC          equ	8018	;# 
  1362     1F53                     IOCCP           equ	8019	;# 
  1363     1F54                     IOCCN           equ	8020	;# 
  1364     1F55                     IOCCF           equ	8021	;# 
  1365     1FE4                     STATUS_SHAD     equ	8164	;# 
  1366     1FE5                     WREG_SHAD       equ	8165	;# 
  1367     1FE6                     BSR_SHAD        equ	8166	;# 
  1368     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1369     1FE8                     FSR0_SHAD       equ	8168	;# 
  1370     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1371     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1372     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1373     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1374     1FED                     STKPTR          equ	8173	;# 
  1375     1FEE                     TOSL            equ	8174	;# 
  1376     1FEF                     TOSH            equ	8175	;# 
  1377                           
  1378 ;; Function _SPI1_Deinitialize is unused but had its address taken
  1379     0000                     _SPI1_Deinitialize equ	0
  1380                           
  1381 ;; Function _SPI1_BufferExchange is unused but had its address taken
  1382     0000                     _SPI1_BufferExchange equ	0
  1383                           
  1384 ;; Function _SPI1_BufferRead is unused but had its address taken
  1385     0000                     _SPI1_BufferRead equ	0
  1386                           
  1387 ;; Function _SPI1_ByteExchange is unused but had its address taken
  1388     0000                     _SPI1_ByteExchange equ	0
  1389                           
  1390 ;; Function _SPI1_ByteWrite is unused but had its address taken
  1391     0000                     _SPI1_ByteWrite equ	0
  1392                           
  1393 ;; Function _SPI1_ByteRead is unused but had its address taken
  1394     0000                     _SPI1_ByteRead  equ	0
  1395                           
  1396 ;; Function _SPI1_IsRxReady is unused but had its address taken
  1397     0000                     _SPI1_IsRxReady equ	0
  1398                           
  1399 ;; Function _TMR0_Deinitialize is unused but had its address taken
  1400     0000                     _TMR0_Deinitialize equ	0
  1401                           
  1402 ;; Function _TMR0_Start is unused but had its address taken
  1403     0000                     _TMR0_Start     equ	0
  1404                           
  1405 ;; Function _TMR0_Stop is unused but had its address taken
  1406     0000                     _TMR0_Stop      equ	0
  1407                           
  1408 ;; Function _TMR0_CounterGet is unused but had its address taken
  1409     0000                     _TMR0_CounterGet equ	0
  1410                           
  1411 ;; Function _TMR0_CounterSet is unused but had its address taken
  1412     0000                     _TMR0_CounterSet equ	0
  1413                           
  1414 ;; Function _TMR0_PeriodSet is unused but had its address taken
  1415     0000                     _TMR0_PeriodSet equ	0
  1416                           
  1417 ;; Function _TMR0_PeriodGet is unused but had its address taken
  1418     0000                     _TMR0_PeriodGet equ	0
  1419                           
  1420 ;; Function _TMR0_MaxCountGet is unused but had its address taken
  1421     0000                     _TMR0_MaxCountGet equ	0
  1422                           
  1423 ;; Function _TMR0_OverflowCallbackRegister is unused but had its address taken
  1424     0000                     _TMR0_OverflowCallbackRegister equ	0
  1425                           
  1426                           	psect	idataBANK0
  1427     02B4                     __pidataBANK0:
  1428                           
  1429                           ;initializer for main@F3786
  1430     02B4  3429               	retlw	41
  1431     02B5  3467               	retlw	103
  1432     02B6  3477               	retlw	119
  1433     02B7  3464               	retlw	100
  1434                           
  1435                           ;initializer for _divider
  1436     02B8  34FF               	retlw	255
  1437     02B9  34FF               	retlw	255
  1438                           
  1439                           	psect	stringtext1
  1440     01CE                     __pstringtext1:
  1441     01CE                     _SPI1_Client:
  1442     01CE  3455               	retlw	low _SPI1_Initialize
  1443     01CF  3402               	retlw	high _SPI1_Initialize
  1444     01D0  3400               	retlw	0
  1445     01D1  3400               	retlw	0
  1446     01D2  3452               	retlw	low _SPI1_Open
  1447     01D3  3400               	retlw	high _SPI1_Open
  1448     01D4  34AC               	retlw	low _SPI1_Close
  1449     01D5  3402               	retlw	high _SPI1_Close
  1450     01D6  3400               	retlw	0
  1451     01D7  3400               	retlw	0
  1452     01D8  3400               	retlw	0
  1453     01D9  3400               	retlw	0
  1454     01DA  3449               	retlw	low _SPI1_BufferWrite
  1455     01DB  3401               	retlw	high _SPI1_BufferWrite
  1456     01DC  3400               	retlw	0
  1457     01DD  3400               	retlw	0
  1458     01DE  3400               	retlw	0
  1459     01DF  3400               	retlw	0
  1460     01E0  3400               	retlw	0
  1461     01E1  3400               	retlw	0
  1462     01E2  3400               	retlw	0
  1463     01E3  3400               	retlw	0
  1464     01E4  3485               	retlw	low _SPI1_IsTxReady
  1465     01E5  3402               	retlw	high _SPI1_IsTxReady
  1466     01E6  34BA               	retlw	low _SPI1_RxCompleteCallbackRegister
  1467     01E7  3402               	retlw	high _SPI1_RxCompleteCallbackRegister
  1468     01E8  3400               	retlw	0
  1469     01E9  3400               	retlw	0
  1470     01EA                     __end_of_SPI1_Client:
  1471                           
  1472                           	psect	stringtext2
  1473     01EA                     __pstringtext2:
  1474     01EA                     _spi1_configuration:
  1475     01EA  3440               	retlw	64
  1476     01EB  3404               	retlw	4
  1477     01EC  3410               	retlw	16
  1478     01ED  3401               	retlw	1
  1479     01EE  3400               	retlw	0
  1480     01EF  3400               	retlw	0
  1481     01F0  3404               	retlw	4
  1482     01F1  3410               	retlw	16
  1483     01F2  3401               	retlw	1
  1484     01F3  3400               	retlw	0
  1485     01F4  3440               	retlw	64
  1486     01F5  3414               	retlw	20
  1487     01F6  3410               	retlw	16
  1488     01F7  3401               	retlw	1
  1489     01F8  3400               	retlw	0
  1490     01F9  3400               	retlw	0
  1491     01FA  3414               	retlw	20
  1492     01FB  3410               	retlw	16
  1493     01FC  3401               	retlw	1
  1494     01FD  3400               	retlw	0
  1495     01FE  3464               	retlw	100
  1496     01FF  3404               	retlw	4
  1497     0200  3410               	retlw	16
  1498     0201  3400               	retlw	0
  1499     0202  3400               	retlw	0
  1500     0203                     __end_of_spi1_configuration:
  1501                           
  1502                           	psect	stringtext3
  1503     0203                     __pstringtext3:
  1504     0203                     _Timer0:
  1505     0203  3419               	retlw	low _TMR0_Initialize
  1506     0204  3402               	retlw	high _TMR0_Initialize
  1507     0205  3400               	retlw	0
  1508     0206  3400               	retlw	0
  1509     0207  3400               	retlw	0
  1510     0208  3400               	retlw	0
  1511     0209  3400               	retlw	0
  1512     020A  3400               	retlw	0
  1513     020B  3400               	retlw	0
  1514     020C  3400               	retlw	0
  1515     020D  3400               	retlw	0
  1516     020E  3400               	retlw	0
  1517     020F  3400               	retlw	0
  1518     0210  3400               	retlw	0
  1519     0211  3400               	retlw	0
  1520     0212  3400               	retlw	0
  1521     0213  3400               	retlw	0
  1522     0214  3400               	retlw	0
  1523     0215  3400               	retlw	0
  1524     0216  3400               	retlw	0
  1525     0217  3400               	retlw	0
  1526     0218  3400               	retlw	0
  1527     0219                     __end_of_Timer0:
  1528                           
  1529                           	psect	nvBANK0
  1530     0029                     __pnvBANK0:
  1531     0029                     _TMR0_OverflowCallback:
  1532     0029                     	ds	2
  1533     002B                     _INT_InterruptHandler:
  1534     002B                     	ds	2
  1535     002D                     _SPI1_RxCompleteCallback:
  1536     002D                     	ds	2
  1537     0018                     _LATAbits       set	24
  1538     0014                     _TRISC          set	20
  1539     0013                     _TRISB          set	19
  1540     0012                     _TRISA          set	18
  1541     001A                     _LATC           set	26
  1542     0019                     _LATB           set	25
  1543     0018                     _LATA           set	24
  1544     000B                     _INTCONbits     set	11
  1545     018C                     _SSP1BUF        set	396
  1546     0190                     _SSP1CON1bits   set	400
  1547     018D                     _SSP1ADD        set	397
  1548     0192                     _SSP1CON3       set	402
  1549     0190                     _SSP1CON1       set	400
  1550     018F                     _SSP1STAT       set	399
  1551     059E                     _T0CON0bits     set	1438
  1552     059E                     _T0CON0         set	1438
  1553     059F                     _T0CON1         set	1439
  1554     059C                     _TMR0L          set	1436
  1555     059D                     _TMR0H          set	1437
  1556     0716                     _PIE0bits       set	1814
  1557     070C                     _PIR0bits       set	1804
  1558     070D                     _PIR1bits       set	1805
  1559     0717                     _PIE1bits       set	1815
  1560     0892                     _OSCTUNE        set	2194
  1561     0893                     _OSCFRQ         set	2195
  1562     0891                     _OSCEN          set	2193
  1563     1EC5                     _SSP1CLKPPS     set	7877
  1564     1E90                     _INTPPS         set	7824
  1565     1EC7                     _SSP1SSPPS      set	7879
  1566     1EC6                     _SSP1DATPPS     set	7878
  1567     1F55                     _IOCCF          set	8021
  1568     1F54                     _IOCCN          set	8020
  1569     1F53                     _IOCCP          set	8019
  1570     1F4A                     _IOCBF          set	8010
  1571     1F49                     _IOCBN          set	8009
  1572     1F48                     _IOCBP          set	8008
  1573     1F3F                     _IOCAF          set	7999
  1574     1F3E                     _IOCAN          set	7998
  1575     1F3D                     _IOCAP          set	7997
  1576     1F1C                     _RB4PPS         set	7964
  1577     1F1F                     _RB7PPS         set	7967
  1578     1F52                     _INLVLC         set	8018
  1579     1F47                     _INLVLB         set	8007
  1580     1F3C                     _INLVLA         set	7996
  1581     1F51                     _SLRCONC        set	8017
  1582     1F46                     _SLRCONB        set	8006
  1583     1F3B                     _SLRCONA        set	7995
  1584     1F50                     _ODCONC         set	8016
  1585     1F45                     _ODCONB         set	8005
  1586     1F3A                     _ODCONA         set	7994
  1587     1F4F                     _WPUCbits       set	8015
  1588     1F4F                     _WPUC           set	8015
  1589     1F44                     _WPUB           set	8004
  1590     1F39                     _WPUA           set	7993
  1591     1F4E                     _ANSELC         set	8014
  1592     1F43                     _ANSELB         set	8003
  1593     1F38                     _ANSELA         set	7992
  1594                           
  1595                           	psect	cinit
  1596     0033                     start_initialization:	
  1597                           ; #config settings
  1598                           
  1599     0033                     __initialization:
  1600                           
  1601                           ; Initialize objects allocated to BANK0
  1602     0033  30B4               	movlw	low __pidataBANK0
  1603     0034  0084               	movwf	4
  1604     0035  3082               	movlw	(high __pidataBANK0)| (0+128)
  1605     0036  0085               	movwf	5
  1606     0037  0012               	moviw fsr0++
  1607     0038  00AF               	movwf	__pdataBANK0& (0+127)
  1608     0039  0012               	moviw fsr0++
  1609     003A  00B0               	movwf	(__pdataBANK0+1)& (0+127)
  1610     003B  0012               	moviw fsr0++
  1611     003C  00B1               	movwf	(__pdataBANK0+2)& (0+127)
  1612     003D  0012               	moviw fsr0++
  1613     003E  00B2               	movwf	(__pdataBANK0+3)& (0+127)
  1614     003F  0012               	moviw fsr0++
  1615     0040  00B3               	movwf	(__pdataBANK0+4)& (0+127)
  1616     0041  0012               	moviw fsr0++
  1617     0042  00B4               	movwf	(__pdataBANK0+5)& (0+127)
  1618                           
  1619                           ; Clear objects allocated to COMMON
  1620     0043  01FB               	clrf	__pbssCOMMON& (0+127)
  1621     0044  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  1622                           
  1623                           ; Clear objects allocated to BANK0
  1624     0045  01A0               	clrf	__pbssBANK0& (0+127)
  1625     0046  01A1               	clrf	(__pbssBANK0+1)& (0+127)
  1626     0047  01A2               	clrf	(__pbssBANK0+2)& (0+127)
  1627     0048  01A3               	clrf	(__pbssBANK0+3)& (0+127)
  1628     0049  01A4               	clrf	(__pbssBANK0+4)& (0+127)
  1629     004A  01A5               	clrf	(__pbssBANK0+5)& (0+127)
  1630     004B  01A6               	clrf	(__pbssBANK0+6)& (0+127)
  1631     004C  01A7               	clrf	(__pbssBANK0+7)& (0+127)
  1632     004D  01A8               	clrf	(__pbssBANK0+8)& (0+127)
  1633     004E                     end_of_initialization:	
  1634                           ;End of C runtime variable initialization code
  1635                           
  1636     004E                     __end_of__initialization:
  1637     004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1638     004F  0140               	movlb	0
  1639     0050  3181  296E         	ljmp	_main	;jump to C main() function
  1640                           
  1641                           	psect	bssCOMMON
  1642     007B                     __pbssCOMMON:
  1643     007B                     _tmr0PeriodCount:
  1644     007B                     	ds	2
  1645                           
  1646                           	psect	bssBANK0
  1647     0020                     __pbssBANK0:
  1648     0020                     _spi1_descriptor:
  1649     0020                     	ds	6
  1650     0026                     _led_state:
  1651     0026                     	ds	1
  1652     0027                     _timerOverflow:
  1653     0027                     	ds	1
  1654     0028                     _pushed:
  1655     0028                     	ds	1
  1656                           
  1657                           	psect	dataBANK0
  1658     002F                     __pdataBANK0:
  1659     002F                     main@F3786:
  1660     002F                     	ds	4
  1661     0033                     _divider:
  1662     0033                     	ds	2
  1663                           
  1664                           	psect	cstackCOMMON
  1665     0070                     __pcstackCOMMON:
  1666     0070                     ?_SPI1_Initialize:
  1667     0070                     ?_SPI1_Close:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670     0070                     ?_SPI1_IsTxReady:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673     0070                     ?_INT_DefaultInterruptHandler:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676     0070                     ?_INT_ISR:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679     0070                     ?_TMR0_ISR:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682     0070                     ?_INT_CallBack:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685     0070                     ?_TMR0_Initialize:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688     0070                     ?_TMR0_DefaultOverflowCallback:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691     0070                     ?_toggle_led:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694     0070                     ?_SPI1_ISR:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697     0070                     ?_INTERRUPT_Initialize:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700     0070                     ?_INTERRUPT_InterruptManager:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703     0070                     ?_CLOCK_Initialize:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706     0070                     ?_PIN_MANAGER_Initialize:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709     0070                     ?_SYSTEM_Initialize:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712     0070                     ?_main:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715     0070                     SPI1_ISR@dataToWrite:	
  1716                           ; 2 bytes @ 0x0
  1717                           
  1718     0070                     ??_INT_DefaultInterruptHandler:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721     0070                     ??_INT_ISR:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724     0070                     ??_TMR0_ISR:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727     0070                     ??_INT_CallBack:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730     0070                     ??_TMR0_DefaultOverflowCallback:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733     0070                     ??_SPI1_ISR:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736                           
  1737                           ; 1 bytes @ 0x0
  1738     0070                     	ds	1
  1739     0071                     ?_SPI1_BufferWrite:
  1740     0071                     ?_SPI1_RxCompleteCallbackRegister:	
  1741                           ; 1 bytes @ 0x1
  1742                           
  1743     0071                     ?_INT_SetInterruptHandler:	
  1744                           ; 1 bytes @ 0x1
  1745                           
  1746     0071                     ?___wmul:	
  1747                           ; 1 bytes @ 0x1
  1748                           
  1749     0071                     SPI1_BufferWrite@bufferData:	
  1750                           ; 2 bytes @ 0x1
  1751                           
  1752     0071                     SPI1_IsTxReady@returnValue:	
  1753                           ; 1 bytes @ 0x1
  1754                           
  1755     0071                     SPI1_RxCompleteCallbackRegister@CallbackHandler:	
  1756                           ; 1 bytes @ 0x1
  1757                           
  1758     0071                     INT_SetInterruptHandler@InterruptHandler:	
  1759                           ; 2 bytes @ 0x1
  1760                           
  1761     0071                     ___wmul@multiplier:	
  1762                           ; 2 bytes @ 0x1
  1763                           
  1764     0071                     ??_SPI1_Close:	
  1765                           ; 2 bytes @ 0x1
  1766                           
  1767     0071                     ??_SPI1_IsTxReady:	
  1768                           ; 1 bytes @ 0x1
  1769                           
  1770     0071                     ??_TMR0_Initialize:	
  1771                           ; 1 bytes @ 0x1
  1772                           
  1773     0071                     ??_toggle_led:	
  1774                           ; 1 bytes @ 0x1
  1775                           
  1776     0071                     ??_INTERRUPT_InterruptManager:	
  1777                           ; 1 bytes @ 0x1
  1778                           
  1779     0071                     ??_CLOCK_Initialize:	
  1780                           ; 1 bytes @ 0x1
  1781                           
  1782     0071                     ??_PIN_MANAGER_Initialize:	
  1783                           ; 1 bytes @ 0x1
  1784                           
  1785                           
  1786                           ; 1 bytes @ 0x1
  1787     0071                     	ds	1
  1788     0072                     SPI1_BufferWrite@bufferSize:
  1789                           
  1790                           ; 2 bytes @ 0x2
  1791     0072                     	ds	1
  1792     0073                     ___wmul@multiplicand:
  1793     0073                     ??_SPI1_Initialize:	
  1794                           ; 2 bytes @ 0x3
  1795                           
  1796     0073                     ??_SPI1_RxCompleteCallbackRegister:	
  1797                           ; 1 bytes @ 0x3
  1798                           
  1799     0073                     ??_INT_SetInterruptHandler:	
  1800                           ; 1 bytes @ 0x3
  1801                           
  1802     0073                     ??_INTERRUPT_Initialize:	
  1803                           ; 1 bytes @ 0x3
  1804                           
  1805     0073                     ??_SYSTEM_Initialize:	
  1806                           ; 1 bytes @ 0x3
  1807                           
  1808                           
  1809                           ; 1 bytes @ 0x3
  1810     0073                     	ds	1
  1811     0074                     ??_SPI1_BufferWrite:
  1812                           
  1813                           ; 1 bytes @ 0x4
  1814     0074                     	ds	1
  1815     0075                     ___wmul@product:
  1816     0075                     ??___wmul:	
  1817                           ; 2 bytes @ 0x5
  1818                           
  1819                           
  1820                           ; 1 bytes @ 0x5
  1821     0075                     	ds	1
  1822     0076                     SPI1_BufferWrite@bufferInput:
  1823                           
  1824                           ; 1 bytes @ 0x6
  1825     0076                     	ds	1
  1826     0077                     ?_SPI1_Open:
  1827     0077                     SPI1_Open@spiConfigIndex:	
  1828                           ; 1 bytes @ 0x7
  1829                           
  1830                           
  1831                           ; 1 bytes @ 0x7
  1832     0077                     	ds	1
  1833     0078                     ??_SPI1_Open:
  1834                           
  1835                           ; 1 bytes @ 0x8
  1836     0078                     	ds	2
  1837     007A                     SPI1_Open@returnValue:
  1838                           
  1839                           ; 1 bytes @ 0xA
  1840     007A                     	ds	1
  1841     007B                     ??_spi_send_data:
  1842     007B                     ??_main:	
  1843                           ; 1 bytes @ 0xB
  1844                           
  1845                           
  1846                           	psect	cstackBANK0
  1847     0035                     __pcstackBANK0:	
  1848                           ; 1 bytes @ 0xB
  1849                           
  1850     0035                     ?_spi_send_data:
  1851     0035                     spi_send_data@data:	
  1852                           ; 1 bytes @ 0x0
  1853                           
  1854                           
  1855                           ; 1 bytes @ 0x0
  1856     0035                     	ds	1
  1857     0036                     main@spiData:
  1858                           
  1859                           ; 4 bytes @ 0x1
  1860     0036                     	ds	4
  1861                           
  1862                           	psect	maintext
  1863     016E                     __pmaintext:	
  1864 ;;
  1865 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1866 ;;
  1867 ;; *************** function _main *****************
  1868 ;; Defined at:
  1869 ;;		line 44 in file "main.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  spiData         4    1[BANK0 ] unsigned char [4]
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  2  405[None  ] int 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : B3F/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1883 ;;      Params:         0       0       0       0       0       0       0       0
  1884 ;;      Locals:         0       4       0       0       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0       0
  1886 ;;      Totals:         0       4       0       0       0       0       0       0
  1887 ;;Total ram usage:        4 bytes
  1888 ;; Hardware stack levels required when called: 7
  1889 ;; This function calls:
  1890 ;;		_SYSTEM_Initialize
  1891 ;;		_spi_send_data
  1892 ;;		_toggle_led
  1893 ;; This function is called by:
  1894 ;;		Startup code after reset
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898     016E                     _main:	
  1899                           ;psect for function _main
  1900                           
  1901     016E                     l1656:	
  1902                           ;incstack = 0
  1903                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1904                           
  1905                           
  1906                           ;main.c: 45:     SYSTEM_Initialize();
  1907     016E  3182  2266  3181   	fcall	_SYSTEM_Initialize
  1908     0171                     l1658:
  1909                           
  1910                           ;main.c: 51:     (INTCONbits.GIE = 1);
  1911     0171  178B               	bsf	11,7	;volatile
  1912     0172                     l1660:
  1913                           
  1914                           ;main.c: 57:     (INTCONbits.PEIE = 1);
  1915     0172  170B               	bsf	11,6	;volatile
  1916     0173                     l1662:
  1917                           
  1918                           ;main.c: 61:     uint8_t spiData[] = {
  1919     0173  0140               	movlb	0	; select bank0
  1920     0174  0832               	movf	main@F3786+3,w
  1921     0175  00B9               	movwf	main@spiData+3
  1922     0176  0831               	movf	main@F3786+2,w
  1923     0177  00B8               	movwf	main@spiData+2
  1924     0178  0830               	movf	main@F3786+1,w
  1925     0179  00B7               	movwf	main@spiData+1
  1926     017A  082F               	movf	main@F3786,w
  1927     017B  00B6               	movwf	main@spiData
  1928     017C                     l1664:
  1929                           
  1930                           ;main.c: 70:         if (timerOverflow) {
  1931     017C  0827               	movf	_timerOverflow,w
  1932     017D  1903               	btfsc	3,2
  1933     017E  2980               	goto	u761
  1934     017F  2981               	goto	u760
  1935     0180                     u761:
  1936     0180  2986               	goto	l1670
  1937     0181                     u760:
  1938     0181                     l1666:
  1939                           
  1940                           ;main.c: 71:             toggle_led();
  1941     0181  3182  2276  3181   	fcall	_toggle_led
  1942     0184                     l1668:
  1943                           
  1944                           ;main.c: 72:             timerOverflow = 0;
  1945     0184  0140               	movlb	0	; select bank0
  1946     0185  01A7               	clrf	_timerOverflow
  1947     0186                     l1670:
  1948                           
  1949                           ;main.c: 76:         {;main.c: 77:             spi_send_data(&spiData);
  1950     0186  3036               	movlw	(low (main@spiData| 0))& (0+255)
  1951     0187  00B5               	movwf	spi_send_data@data
  1952     0188  3181  2190  3181   	fcall	_spi_send_data
  1953     018B                     l1672:
  1954                           
  1955                           ;main.c: 78:             pushed = 0;
  1956     018B  0140               	movlb	0	; select bank0
  1957     018C  01A8               	clrf	_pushed
  1958     018D  297C               	goto	l1664
  1959     018E  3180  2831         	ljmp	start
  1960     0190                     __end_of_main:
  1961                           
  1962                           	psect	text1
  1963     0276                     __ptext1:	
  1964 ;; *************** function _toggle_led *****************
  1965 ;; Defined at:
  1966 ;;		line 83 in file "main.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1980 ;;      Params:         0       0       0       0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 4
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994     0276                     _toggle_led:	
  1995                           ;psect for function _toggle_led
  1996                           
  1997     0276                     l1520:	
  1998                           ;incstack = 0
  1999                           ; Regs used in _toggle_led: [wreg+status,2+status,0]
  2000                           
  2001                           
  2002                           ;main.c: 84:     led_state = ~led_state;
  2003     0276  0140               	movlb	0	; select bank0
  2004     0277  0326               	decf	_led_state,w
  2005     0278  1D03               	btfss	3,2
  2006     0279  2A7B               	goto	u531
  2007     027A  2A7D               	goto	u530
  2008     027B                     u531:
  2009     027B  3001               	movlw	1
  2010     027C  2A7E               	goto	u540
  2011     027D                     u530:
  2012     027D  3000               	movlw	0
  2013     027E                     u540:
  2014     027E  00A6               	movwf	_led_state
  2015     027F                     l1522:
  2016                           
  2017                           ;main.c: 85:     LATAbits.LATA2 = led_state;
  2018     027F  0C26               	rrf	_led_state,w
  2019     0280  1C03               	skipc
  2020     0281  1118               	bcf	24,2	;volatile
  2021     0282  1803               	skipnc
  2022     0283  1518               	bsf	24,2	;volatile
  2023     0284                     l415:
  2024     0284  0008               	return
  2025     0285                     __end_of_toggle_led:
  2026                           
  2027                           	psect	text2
  2028     0190                     __ptext2:	
  2029 ;; *************** function _spi_send_data *****************
  2030 ;; Defined at:
  2031 ;;		line 88 in file "main.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  data            1    0[BANK0 ] PTR unsigned char 
  2034 ;;		 -> main@spiData(4), 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2046 ;;      Params:         0       1       0       0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0
  2049 ;;      Totals:         0       1       0       0       0       0       0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 6
  2053 ;; This function calls:
  2054 ;;		_SPI1_BufferWrite
  2055 ;;		_SPI1_Close
  2056 ;;		_SPI1_IsTxReady
  2057 ;;		_SPI1_Open
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063     0190                     _spi_send_data:	
  2064                           ;psect for function _spi_send_data
  2065                           
  2066     0190                     l1646:	
  2067                           ;incstack = 0
  2068                           ; Regs used in _spi_send_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2069                           
  2070                           
  2071                           ;main.c: 91:     if (SPI1_Open(0)) {
  2072     0190  01F7               	clrf	SPI1_Open@spiConfigIndex
  2073     0191  3180  2052  3181   	fcall	_SPI1_Open
  2074     0194  3A00               	xorlw	0
  2075     0195  1903               	skipnz
  2076     0196  2998               	goto	u741
  2077     0197  2999               	goto	u740
  2078     0198                     u741:
  2079     0198  29AE               	goto	l422
  2080     0199                     u740:
  2081     0199                     l1650:
  2082     0199  3182  2285  3181   	fcall	_SPI1_IsTxReady
  2083     019C  3A00               	xorlw	0
  2084     019D  1903               	skipnz
  2085     019E  29A0               	goto	u751
  2086     019F  29A1               	goto	u750
  2087     01A0                     u751:
  2088     01A0  2999               	goto	l1650
  2089     01A1                     u750:
  2090     01A1                     l1652:
  2091                           
  2092                           ;main.c: 93:         SPI1_BufferWrite(data, 4);
  2093     01A1  0140               	movlb	0	; select bank0
  2094     01A2  0835               	movf	spi_send_data@data,w
  2095     01A3  00F1               	movwf	SPI1_BufferWrite@bufferData
  2096     01A4  3004               	movlw	4
  2097     01A5  00F2               	movwf	SPI1_BufferWrite@bufferSize
  2098     01A6  3000               	movlw	0
  2099     01A7  00F3               	movwf	SPI1_BufferWrite@bufferSize+1
  2100     01A8  3181  2149  3181   	fcall	_SPI1_BufferWrite
  2101     01AB                     l1654:
  2102                           
  2103                           ;main.c: 94:         SPI1_Close();
  2104     01AB  3182  22AC  3181   	fcall	_SPI1_Close
  2105     01AE                     l422:
  2106     01AE  0008               	return
  2107     01AF                     __end_of_spi_send_data:
  2108                           
  2109                           	psect	text3
  2110     0052                     __ptext3:	
  2111 ;; *************** function _SPI1_Open *****************
  2112 ;; Defined at:
  2113 ;;		line 99 in file "mcc_generated_files/spi/src/mssp1.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  spiConfigInd    1    7[COMMON] unsigned char 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  returnValue     1   10[COMMON] _Bool 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      _Bool 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2127 ;;      Params:         1       0       0       0       0       0       0       0
  2128 ;;      Locals:         1       0       0       0       0       0       0       0
  2129 ;;      Temps:          2       0       0       0       0       0       0       0
  2130 ;;      Totals:         4       0       0       0       0       0       0       0
  2131 ;;Total ram usage:        4 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 5
  2134 ;; This function calls:
  2135 ;;		___wmul
  2136 ;; This function is called by:
  2137 ;;		_spi_send_data
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141     0052                     _SPI1_Open:	
  2142                           ;psect for function _SPI1_Open
  2143                           
  2144     0052                     l1340:	
  2145                           ;incstack = 0
  2146                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2147                           
  2148     0052                     l1342:
  2149                           
  2150                           ;mcc_generated_files/spi/src/mssp1.c: 102:     if (SSP1CON1bits.SSPEN == 0)
  2151     0052  0143               	movlb	3	; select bank3
  2152     0053  1A90               	btfsc	16,5	;volatile
  2153     0054  2856               	goto	u421
  2154     0055  2857               	goto	u420
  2155     0056                     u421:
  2156     0056  28C0               	goto	l1354
  2157     0057                     u420:
  2158     0057                     l1344:
  2159                           
  2160                           ;mcc_generated_files/spi/src/mssp1.c: 103:     {;mcc_generated_files/spi/src/mssp1.c: 10
      +                          4:         spi1_descriptor.status = SPI_IDLE;
  2161     0057  3081               	movlw	129
  2162     0058  0140               	movlb	0	; select bank0
  2163     0059  00A5               	movwf	_spi1_descriptor+5	;volatile
  2164     005A                     l1346:
  2165                           
  2166                           ;mcc_generated_files/spi/src/mssp1.c: 106:         SSP1STAT = spi1_configuration[spiConf
      +                          igIndex].stat;
  2167     005A  0877               	movf	SPI1_Open@spiConfigIndex,w
  2168     005B  00F8               	movwf	??_SPI1_Open
  2169     005C  01F9               	clrf	??_SPI1_Open+1
  2170     005D  0878               	movf	??_SPI1_Open,w
  2171     005E  00F1               	movwf	___wmul@multiplier
  2172     005F  0879               	movf	??_SPI1_Open+1,w
  2173     0060  00F2               	movwf	___wmul@multiplier+1
  2174     0061  3005               	movlw	5
  2175     0062  00F3               	movwf	___wmul@multiplicand
  2176     0063  3000               	movlw	0
  2177     0064  00F4               	movwf	___wmul@multiplicand+1
  2178     0065  3181  21AF  3180   	fcall	___wmul
  2179     0068  30EA               	movlw	low _spi1_configuration
  2180     0069  0771               	addwf	?___wmul,w
  2181     006A  0084               	movwf	4
  2182     006B  3001               	movlw	high _spi1_configuration
  2183     006C  3D72               	addwfc	?___wmul+1,w
  2184     006D  3880               	iorlw	128
  2185     006E  0085               	movwf	5
  2186     006F  0800               	movf	0,w	;code access
  2187     0070  0143               	movlb	3	; select bank3
  2188     0071  008F               	movwf	15	;volatile
  2189                           
  2190                           ;mcc_generated_files/spi/src/mssp1.c: 107:         SSP1CON1 = spi1_configuration[spiConf
      +                          igIndex].con1;
  2191     0072  0877               	movf	SPI1_Open@spiConfigIndex,w
  2192     0073  00F8               	movwf	??_SPI1_Open
  2193     0074  01F9               	clrf	??_SPI1_Open+1
  2194     0075  0878               	movf	??_SPI1_Open,w
  2195     0076  00F1               	movwf	___wmul@multiplier
  2196     0077  0879               	movf	??_SPI1_Open+1,w
  2197     0078  00F2               	movwf	___wmul@multiplier+1
  2198     0079  3005               	movlw	5
  2199     007A  00F3               	movwf	___wmul@multiplicand
  2200     007B  3000               	movlw	0
  2201     007C  00F4               	movwf	___wmul@multiplicand+1
  2202     007D  3181  21AF  3180   	fcall	___wmul
  2203     0080  30EB               	movlw	low (_spi1_configuration+1)
  2204     0081  0771               	addwf	?___wmul,w
  2205     0082  0084               	movwf	4
  2206     0083  3001               	movlw	high (_spi1_configuration+1)
  2207     0084  3D72               	addwfc	?___wmul+1,w
  2208     0085  3880               	iorlw	128
  2209     0086  0085               	movwf	5
  2210     0087  0800               	movf	0,w	;code access
  2211     0088  0143               	movlb	3	; select bank3
  2212     0089  0090               	movwf	16	;volatile
  2213                           
  2214                           ;mcc_generated_files/spi/src/mssp1.c: 108:         SSP1CON3 = spi1_configuration[spiConf
      +                          igIndex].con3;
  2215     008A  0877               	movf	SPI1_Open@spiConfigIndex,w
  2216     008B  00F8               	movwf	??_SPI1_Open
  2217     008C  01F9               	clrf	??_SPI1_Open+1
  2218     008D  0878               	movf	??_SPI1_Open,w
  2219     008E  00F1               	movwf	___wmul@multiplier
  2220     008F  0879               	movf	??_SPI1_Open+1,w
  2221     0090  00F2               	movwf	___wmul@multiplier+1
  2222     0091  3005               	movlw	5
  2223     0092  00F3               	movwf	___wmul@multiplicand
  2224     0093  3000               	movlw	0
  2225     0094  00F4               	movwf	___wmul@multiplicand+1
  2226     0095  3181  21AF  3180   	fcall	___wmul
  2227     0098  30EC               	movlw	low (_spi1_configuration+2)
  2228     0099  0771               	addwf	?___wmul,w
  2229     009A  0084               	movwf	4
  2230     009B  3001               	movlw	high (_spi1_configuration+2)
  2231     009C  3D72               	addwfc	?___wmul+1,w
  2232     009D  3880               	iorlw	128
  2233     009E  0085               	movwf	5
  2234     009F  0800               	movf	0,w	;code access
  2235     00A0  0143               	movlb	3	; select bank3
  2236     00A1  0092               	movwf	18	;volatile
  2237                           
  2238                           ;mcc_generated_files/spi/src/mssp1.c: 109:         SSP1ADD = spi1_configuration[spiConfi
      +                          gIndex].baud;
  2239     00A2  0877               	movf	SPI1_Open@spiConfigIndex,w
  2240     00A3  00F8               	movwf	??_SPI1_Open
  2241     00A4  01F9               	clrf	??_SPI1_Open+1
  2242     00A5  0878               	movf	??_SPI1_Open,w
  2243     00A6  00F1               	movwf	___wmul@multiplier
  2244     00A7  0879               	movf	??_SPI1_Open+1,w
  2245     00A8  00F2               	movwf	___wmul@multiplier+1
  2246     00A9  3005               	movlw	5
  2247     00AA  00F3               	movwf	___wmul@multiplicand
  2248     00AB  3000               	movlw	0
  2249     00AC  00F4               	movwf	___wmul@multiplicand+1
  2250     00AD  3181  21AF  3180   	fcall	___wmul
  2251     00B0  30ED               	movlw	low (_spi1_configuration+3)
  2252     00B1  0771               	addwf	?___wmul,w
  2253     00B2  0084               	movwf	4
  2254     00B3  3001               	movlw	high (_spi1_configuration+3)
  2255     00B4  3D72               	addwfc	?___wmul+1,w
  2256     00B5  3880               	iorlw	128
  2257     00B6  0085               	movwf	5
  2258     00B7  0800               	movf	0,w	;code access
  2259     00B8  0143               	movlb	3	; select bank3
  2260     00B9  008D               	movwf	13	;volatile
  2261     00BA                     l1348:
  2262                           
  2263                           ;mcc_generated_files/spi/src/mssp1.c: 111:         SSP1CON1bits.SSPEN = 1;
  2264     00BA  1690               	bsf	16,5	;volatile
  2265     00BB                     l1350:
  2266                           
  2267                           ;mcc_generated_files/spi/src/mssp1.c: 112:         PIE1bits.SSP1IE = 0;
  2268     00BB  014E               	movlb	14	; select bank14
  2269     00BC  1097               	bcf	23,1	;volatile
  2270     00BD                     l1352:
  2271                           
  2272                           ;mcc_generated_files/spi/src/mssp1.c: 114:         returnValue = 1;
  2273     00BD  3001               	movlw	1
  2274     00BE  00FA               	movwf	SPI1_Open@returnValue
  2275                           
  2276                           ;mcc_generated_files/spi/src/mssp1.c: 115:     }
  2277     00BF  28C1               	goto	l1356
  2278     00C0                     l1354:
  2279                           
  2280                           ;mcc_generated_files/spi/src/mssp1.c: 117:     {;mcc_generated_files/spi/src/mssp1.c: 11
      +                          8:         returnValue = 0;
  2281     00C0  01FA               	clrf	SPI1_Open@returnValue
  2282     00C1                     l1356:
  2283                           
  2284                           ;mcc_generated_files/spi/src/mssp1.c: 120:     return returnValue;
  2285     00C1  087A               	movf	SPI1_Open@returnValue,w
  2286     00C2                     l61:
  2287     00C2  0008               	return
  2288     00C3                     __end_of_SPI1_Open:
  2289                           
  2290                           	psect	text4
  2291     01AF                     __ptext4:	
  2292 ;; *************** function ___wmul *****************
  2293 ;; Defined at:
  2294 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  multiplier      2    1[COMMON] unsigned int 
  2297 ;;  multiplicand    2    3[COMMON] unsigned int 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  product         2    5[COMMON] unsigned int 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  2    1[COMMON] unsigned int 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2309 ;;      Params:         4       0       0       0       0       0       0       0
  2310 ;;      Locals:         2       0       0       0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0
  2312 ;;      Totals:         6       0       0       0       0       0       0       0
  2313 ;;Total ram usage:        6 bytes
  2314 ;; Hardware stack levels used: 1
  2315 ;; Hardware stack levels required when called: 4
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_SPI1_Open
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323     01AF                     ___wmul:	
  2324                           ;psect for function ___wmul
  2325                           
  2326     01AF                     l1318:	
  2327                           ;incstack = 0
  2328                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2329                           
  2330     01AF  01F5               	clrf	___wmul@product
  2331     01B0  01F6               	clrf	___wmul@product+1
  2332     01B1                     l1320:
  2333     01B1  1C71               	btfss	___wmul@multiplier,0
  2334     01B2  29B4               	goto	u381
  2335     01B3  29B5               	goto	u380
  2336     01B4                     u381:
  2337     01B4  29B9               	goto	l490
  2338     01B5                     u380:
  2339     01B5                     l1322:
  2340     01B5  0873               	movf	___wmul@multiplicand,w
  2341     01B6  07F5               	addwf	___wmul@product,f
  2342     01B7  0874               	movf	___wmul@multiplicand+1,w
  2343     01B8  3DF6               	addwfc	___wmul@product+1,f
  2344     01B9                     l490:
  2345     01B9  3001               	movlw	1
  2346     01BA                     u395:
  2347     01BA  35F3               	lslf	___wmul@multiplicand,f
  2348     01BB  0DF4               	rlf	___wmul@multiplicand+1,f
  2349     01BC  0B89               	decfsz	9,f
  2350     01BD  29BA               	goto	u395
  2351     01BE                     l1324:
  2352     01BE  3001               	movlw	1
  2353     01BF                     u405:
  2354     01BF  36F2               	lsrf	___wmul@multiplier+1,f
  2355     01C0  0CF1               	rrf	___wmul@multiplier,f
  2356     01C1  0B89               	decfsz	9,f
  2357     01C2  29BF               	goto	u405
  2358     01C3                     l1326:
  2359     01C3  0871               	movf	___wmul@multiplier,w
  2360     01C4  0472               	iorwf	___wmul@multiplier+1,w
  2361     01C5  1D03               	btfss	3,2
  2362     01C6  29C8               	goto	u411
  2363     01C7  29C9               	goto	u410
  2364     01C8                     u411:
  2365     01C8  29B1               	goto	l1320
  2366     01C9                     u410:
  2367     01C9                     l1328:
  2368     01C9  0876               	movf	___wmul@product+1,w
  2369     01CA  00F2               	movwf	?___wmul+1
  2370     01CB  0875               	movf	___wmul@product,w
  2371     01CC  00F1               	movwf	?___wmul
  2372     01CD                     l492:
  2373     01CD  0008               	return
  2374     01CE                     __end_of___wmul:
  2375                           
  2376                           	psect	text5
  2377     0285                     __ptext5:	
  2378 ;; *************** function _SPI1_IsTxReady *****************
  2379 ;; Defined at:
  2380 ;;		line 250 in file "mcc_generated_files/spi/src/mssp1.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  returnValue     1    1[COMMON] _Bool 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      _Bool 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2394 ;;      Params:         0       0       0       0       0       0       0       0
  2395 ;;      Locals:         1       0       0       0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0
  2397 ;;      Totals:         1       0       0       0       0       0       0       0
  2398 ;;Total ram usage:        1 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 4
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_spi_send_data
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408     0285                     _SPI1_IsTxReady:	
  2409                           ;psect for function _SPI1_IsTxReady
  2410                           
  2411     0285                     l1380:	
  2412                           ;incstack = 0
  2413                           ; Regs used in _SPI1_IsTxReady: [wreg+status,2+status,0]
  2414                           
  2415     0285                     l1382:
  2416                           
  2417                           ;mcc_generated_files/spi/src/mssp1.c: 253:     if (spi1_descriptor.status == SPI_IDLE)
  2418     0285  3081               	movlw	129
  2419     0286  0140               	movlb	0	; select bank0
  2420     0287  0625               	xorwf	_spi1_descriptor+5,w	;volatile
  2421     0288  1D03               	btfss	3,2
  2422     0289  2A8B               	goto	u441
  2423     028A  2A8C               	goto	u440
  2424     028B                     u441:
  2425     028B  2A8F               	goto	l1386
  2426     028C                     u440:
  2427     028C                     l1384:
  2428                           
  2429                           ;mcc_generated_files/spi/src/mssp1.c: 254:     {;mcc_generated_files/spi/src/mssp1.c: 25
      +                          5:         returnValue = 1;
  2430     028C  3001               	movlw	1
  2431     028D  00F1               	movwf	SPI1_IsTxReady@returnValue
  2432                           
  2433                           ;mcc_generated_files/spi/src/mssp1.c: 256:     }
  2434     028E  2A90               	goto	l1388
  2435     028F                     l1386:
  2436                           
  2437                           ;mcc_generated_files/spi/src/mssp1.c: 258:     {;mcc_generated_files/spi/src/mssp1.c: 25
      +                          9:         returnValue = 0;
  2438     028F  01F1               	clrf	SPI1_IsTxReady@returnValue
  2439     0290                     l1388:
  2440                           
  2441                           ;mcc_generated_files/spi/src/mssp1.c: 261:     return returnValue;
  2442     0290  0871               	movf	SPI1_IsTxReady@returnValue,w
  2443     0291                     l108:
  2444     0291  0008               	return
  2445     0292                     __end_of_SPI1_IsTxReady:
  2446                           
  2447                           	psect	text6
  2448     02AC                     __ptext6:	
  2449 ;; *************** function _SPI1_Close *****************
  2450 ;; Defined at:
  2451 ;;		line 123 in file "mcc_generated_files/spi/src/mssp1.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		status,2
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2465 ;;      Params:         0       0       0       0       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0
  2468 ;;      Totals:         0       0       0       0       0       0       0       0
  2469 ;;Total ram usage:        0 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 4
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_spi_send_data
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479     02AC                     _SPI1_Close:	
  2480                           ;psect for function _SPI1_Close
  2481                           
  2482     02AC                     l1360:	
  2483                           ;incstack = 0
  2484                           ; Regs used in _SPI1_Close: [status,2]
  2485                           
  2486                           
  2487                           ;mcc_generated_files/spi/src/mssp1.c: 125:     SSP1CON1bits.SSPEN = 0;
  2488     02AC  0143               	movlb	3	; select bank3
  2489     02AD  1290               	bcf	16,5	;volatile
  2490                           
  2491                           ;mcc_generated_files/spi/src/mssp1.c: 126:     PIE1bits.SSP1IE = 0;
  2492     02AE  014E               	movlb	14	; select bank14
  2493     02AF  1097               	bcf	23,1	;volatile
  2494                           
  2495                           ;mcc_generated_files/spi/src/mssp1.c: 127:     PIR1bits.SSP1IF = 0;
  2496     02B0  108D               	bcf	13,1	;volatile
  2497     02B1                     l1362:
  2498                           
  2499                           ;mcc_generated_files/spi/src/mssp1.c: 128:     spi1_descriptor.status = SPI_RESET;
  2500     02B1  0140               	movlb	0	; select bank0
  2501     02B2  01A5               	clrf	_spi1_descriptor+5	;volatile
  2502     02B3                     l64:
  2503     02B3  0008               	return
  2504     02B4                     __end_of_SPI1_Close:
  2505                           
  2506                           	psect	text7
  2507     0149                     __ptext7:	
  2508 ;; *************** function _SPI1_BufferWrite *****************
  2509 ;; Defined at:
  2510 ;;		line 150 in file "mcc_generated_files/spi/src/mssp1.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  bufferData      1    1[COMMON] PTR void 
  2513 ;;		 -> main@spiData(4), 
  2514 ;;  bufferSize      2    2[COMMON] unsigned int 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  bufferInput     1    6[COMMON] PTR unsigned char 
  2517 ;;		 -> main@spiData(4), 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2527 ;;      Params:         3       0       0       0       0       0       0       0
  2528 ;;      Locals:         1       0       0       0       0       0       0       0
  2529 ;;      Temps:          2       0       0       0       0       0       0       0
  2530 ;;      Totals:         6       0       0       0       0       0       0       0
  2531 ;;Total ram usage:        6 bytes
  2532 ;; Hardware stack levels used: 1
  2533 ;; Hardware stack levels required when called: 4
  2534 ;; This function calls:
  2535 ;;		Nothing
  2536 ;; This function is called by:
  2537 ;;		_spi_send_data
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541     0149                     _SPI1_BufferWrite:	
  2542                           ;psect for function _SPI1_BufferWrite
  2543                           
  2544     0149                     l1364:	
  2545                           ;incstack = 0
  2546                           ; Regs used in _SPI1_BufferWrite: [wreg+fsr1l+fsr1h+status,2+status,0]
  2547                           
  2548                           
  2549                           ;mcc_generated_files/spi/src/mssp1.c: 150: void SPI1_BufferWrite(void *bufferData, size_
      +                          t bufferSize);mcc_generated_files/spi/src/mssp1.c: 151: {;mcc_generated_files/spi/src/ms
      +                          sp1.c: 152:     uint8_t *bufferInput = bufferData;
  2550     0149  0871               	movf	SPI1_BufferWrite@bufferData,w
  2551     014A  00F6               	movwf	SPI1_BufferWrite@bufferInput
  2552     014B                     l1366:
  2553                           
  2554                           ;mcc_generated_files/spi/src/mssp1.c: 153:     if (spi1_descriptor.status == SPI_IDLE)
  2555     014B  3081               	movlw	129
  2556     014C  0140               	movlb	0	; select bank0
  2557     014D  0625               	xorwf	_spi1_descriptor+5,w	;volatile
  2558     014E  1D03               	btfss	3,2
  2559     014F  2951               	goto	u431
  2560     0150  2952               	goto	u430
  2561     0151                     u431:
  2562     0151  296D               	goto	l73
  2563     0152                     u430:
  2564     0152                     l1368:
  2565                           
  2566                           ;mcc_generated_files/spi/src/mssp1.c: 154:     {;mcc_generated_files/spi/src/mssp1.c: 15
      +                          5:         PIE1bits.SSP1IE = 1;
  2567     0152  014E               	movlb	14	; select bank14
  2568     0153  1497               	bsf	23,1	;volatile
  2569     0154                     l1370:
  2570                           
  2571                           ;mcc_generated_files/spi/src/mssp1.c: 156:         spi1_descriptor.buffer = bufferInput;
  2572     0154  0876               	movf	SPI1_BufferWrite@bufferInput,w
  2573     0155  0140               	movlb	0	; select bank0
  2574     0156  00A0               	movwf	_spi1_descriptor	;volatile
  2575     0157  01A1               	clrf	_spi1_descriptor+1	;volatile
  2576     0158                     l1372:
  2577                           
  2578                           ;mcc_generated_files/spi/src/mssp1.c: 157:         spi1_descriptor.bufferLength = buffer
      +                          Size - (size_t)1U;
  2579     0158  0872               	movf	SPI1_BufferWrite@bufferSize,w
  2580     0159  3EFF               	addlw	255
  2581     015A  00F4               	movwf	??_SPI1_BufferWrite
  2582     015B  30FF               	movlw	255
  2583     015C  3D73               	addwfc	SPI1_BufferWrite@bufferSize+1,w
  2584     015D  00F5               	movwf	??_SPI1_BufferWrite+1
  2585     015E  0874               	movf	??_SPI1_BufferWrite,w
  2586     015F  00A2               	movwf	_spi1_descriptor+2	;volatile
  2587     0160  0875               	movf	??_SPI1_BufferWrite+1,w
  2588     0161  00A3               	movwf	_spi1_descriptor+3	;volatile
  2589     0162                     l1374:
  2590                           
  2591                           ;mcc_generated_files/spi/src/mssp1.c: 158:         spi1_descriptor.transferType = SPI_WR
      +                          ITE;
  2592     0162  3081               	movlw	129
  2593     0163  00A4               	movwf	_spi1_descriptor+4	;volatile
  2594     0164                     l1376:
  2595                           
  2596                           ;mcc_generated_files/spi/src/mssp1.c: 159:         spi1_descriptor.status = SPI_BUSY;
  2597     0164  3042               	movlw	66
  2598     0165  00A5               	movwf	_spi1_descriptor+5	;volatile
  2599     0166                     l1378:
  2600                           
  2601                           ;mcc_generated_files/spi/src/mssp1.c: 161:         SSP1BUF = *spi1_descriptor.buffer;
  2602     0166  0820               	movf	_spi1_descriptor,w	;volatile
  2603     0167  0086               	movwf	6
  2604     0168  0821               	movf	_spi1_descriptor+1,w	;volatile
  2605     0169  0087               	movwf	7
  2606     016A  0801               	movf	1,w
  2607     016B  0143               	movlb	3	; select bank3
  2608     016C  008C               	movwf	12	;volatile
  2609     016D                     l73:
  2610     016D  0008               	return
  2611     016E                     __end_of_SPI1_BufferWrite:
  2612                           
  2613                           	psect	text8
  2614     0266                     __ptext8:	
  2615 ;; *************** function _SYSTEM_Initialize *****************
  2616 ;; Defined at:
  2617 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2631 ;;      Params:         0       0       0       0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0       0
  2634 ;;      Totals:         0       0       0       0       0       0       0       0
  2635 ;;Total ram usage:        0 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; Hardware stack levels required when called: 6
  2638 ;; This function calls:
  2639 ;;		_CLOCK_Initialize
  2640 ;;		_INTERRUPT_Initialize
  2641 ;;		_PIN_MANAGER_Initialize
  2642 ;;		_SPI1_Initialize
  2643 ;;		_TMR0_Initialize
  2644 ;; This function is called by:
  2645 ;;		_main
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649     0266                     _SYSTEM_Initialize:	
  2650                           ;psect for function _SYSTEM_Initialize
  2651                           
  2652     0266                     l1512:	
  2653                           ;incstack = 0
  2654                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2655                           
  2656                           
  2657                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  2658     0266  3182  22C6  3182   	fcall	_CLOCK_Initialize
  2659                           
  2660                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  2661     0269  3181  210B  3182   	fcall	_PIN_MANAGER_Initialize
  2662     026C                     l1514:
  2663                           
  2664                           ;mcc_generated_files/system/src/system.c: 44:     TMR0_Initialize();
  2665     026C  3182  2219  3182   	fcall	_TMR0_Initialize
  2666     026F                     l1516:
  2667                           
  2668                           ;mcc_generated_files/system/src/system.c: 45:     SPI1_Initialize();
  2669     026F  3182  2255  3182   	fcall	_SPI1_Initialize
  2670     0272                     l1518:
  2671                           
  2672                           ;mcc_generated_files/system/src/system.c: 46:     INTERRUPT_Initialize();
  2673     0272  3182  2292  3182   	fcall	_INTERRUPT_Initialize
  2674     0275                     l291:
  2675     0275  0008               	return
  2676     0276                     __end_of_SYSTEM_Initialize:
  2677                           
  2678                           	psect	text9
  2679     0219                     __ptext9:	
  2680 ;; *************** function _TMR0_Initialize *****************
  2681 ;; Defined at:
  2682 ;;		line 60 in file "mcc_generated_files/timer/src/tmr0.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2696 ;;      Params:         0       0       0       0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used: 1
  2702 ;; Hardware stack levels required when called: 4
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_SYSTEM_Initialize
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710     0219                     _TMR0_Initialize:	
  2711                           ;psect for function _TMR0_Initialize
  2712                           
  2713     0219                     l1446:	
  2714                           ;incstack = 0
  2715                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  2716                           
  2717                           
  2718                           ;mcc_generated_files/timer/src/tmr0.c: 61:     TMR0H = 0xFF;
  2719     0219  30FF               	movlw	255
  2720     021A  014B               	movlb	11	; select bank11
  2721     021B  009D               	movwf	29	;volatile
  2722     021C                     l1448:
  2723                           
  2724                           ;mcc_generated_files/timer/src/tmr0.c: 62:     TMR0L = 0x0;
  2725     021C  019C               	clrf	28	;volatile
  2726     021D                     l1450:
  2727                           
  2728                           ;mcc_generated_files/timer/src/tmr0.c: 64:     T0CON1 = (3 << 0x5)
  2729     021D  3070               	movlw	112
  2730     021E  009F               	movwf	31	;volatile
  2731     021F                     l1452:
  2732                           
  2733                           ;mcc_generated_files/timer/src/tmr0.c: 68:     tmr0PeriodCount = ((uint16_t) TMR0H << 8)
      +                           | TMR0L;
  2734     021F  081D               	movf	29,w	;volatile
  2735     0220  00FC               	movwf	_tmr0PeriodCount+1	;volatile
  2736     0221  081C               	movf	28,w	;volatile
  2737     0222  00FB               	movwf	_tmr0PeriodCount	;volatile
  2738     0223                     l1454:
  2739                           
  2740                           ;mcc_generated_files/timer/src/tmr0.c: 70:     TMR0_OverflowCallback = TMR0_DefaultOverf
      +                          lowCallback;
  2741     0223  3043               	movlw	low _TMR0_DefaultOverflowCallback
  2742     0224  0140               	movlb	0	; select bank0
  2743     0225  00A9               	movwf	_TMR0_OverflowCallback
  2744     0226  3002               	movlw	high _TMR0_DefaultOverflowCallback
  2745     0227  00AA               	movwf	_TMR0_OverflowCallback+1
  2746     0228                     l1456:
  2747                           
  2748                           ;mcc_generated_files/timer/src/tmr0.c: 72:     PIR0bits.TMR0IF = 0;
  2749     0228  014E               	movlb	14	; select bank14
  2750     0229  128C               	bcf	12,5	;volatile
  2751     022A                     l1458:
  2752                           
  2753                           ;mcc_generated_files/timer/src/tmr0.c: 73:     PIE0bits.TMR0IE = 1;
  2754     022A  1696               	bsf	22,5	;volatile
  2755     022B                     l1460:
  2756                           
  2757                           ;mcc_generated_files/timer/src/tmr0.c: 75:     T0CON0 = (0 << 0x0)
  2758     022B  3090               	movlw	144
  2759     022C  014B               	movlb	11	; select bank11
  2760     022D  009E               	movwf	30	;volatile
  2761     022E                     l340:
  2762     022E  0008               	return
  2763     022F                     __end_of_TMR0_Initialize:
  2764                           
  2765                           	psect	text10
  2766     0255                     __ptext10:	
  2767 ;; *************** function _SPI1_Initialize *****************
  2768 ;; Defined at:
  2769 ;;		line 71 in file "mcc_generated_files/spi/src/mssp1.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2783 ;;      Params:         0       0       0       0       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0
  2786 ;;      Totals:         0       0       0       0       0       0       0       0
  2787 ;;Total ram usage:        0 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; Hardware stack levels required when called: 5
  2790 ;; This function calls:
  2791 ;;		_SPI1_RxCompleteCallbackRegister
  2792 ;; This function is called by:
  2793 ;;		_SYSTEM_Initialize
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797     0255                     _SPI1_Initialize:	
  2798                           ;psect for function _SPI1_Initialize
  2799                           
  2800     0255                     l1332:	
  2801                           ;incstack = 0
  2802                           ; Regs used in _SPI1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2803                           
  2804                           
  2805                           ;mcc_generated_files/spi/src/mssp1.c: 74:     PIE1bits.SSP1IE = 0;
  2806     0255  014E               	movlb	14	; select bank14
  2807     0256  1097               	bcf	23,1	;volatile
  2808                           
  2809                           ;mcc_generated_files/spi/src/mssp1.c: 75:     PIR1bits.SSP1IF = 0;
  2810     0257  108D               	bcf	13,1	;volatile
  2811     0258                     l1334:
  2812                           
  2813                           ;mcc_generated_files/spi/src/mssp1.c: 77:     SSP1STAT = 0x00;
  2814     0258  0143               	movlb	3	; select bank3
  2815     0259  018F               	clrf	15	;volatile
  2816                           
  2817                           ;mcc_generated_files/spi/src/mssp1.c: 78:     SSP1CON1 = 0x00;
  2818     025A  0190               	clrf	16	;volatile
  2819                           
  2820                           ;mcc_generated_files/spi/src/mssp1.c: 79:     SSP1CON3 = 0x00;
  2821     025B  0192               	clrf	18	;volatile
  2822                           
  2823                           ;mcc_generated_files/spi/src/mssp1.c: 80:     SSP1ADD = 0x00;
  2824     025C  018D               	clrf	13	;volatile
  2825     025D                     l1336:
  2826                           
  2827                           ;mcc_generated_files/spi/src/mssp1.c: 83:     SPI1_RxCompleteCallbackRegister(((void*)0)
      +                          );
  2828     025D  3000               	movlw	0
  2829     025E  00F1               	movwf	SPI1_RxCompleteCallbackRegister@CallbackHandler
  2830     025F  00F2               	movwf	SPI1_RxCompleteCallbackRegister@CallbackHandler+1
  2831     0260  3182  22BA  3182   	fcall	_SPI1_RxCompleteCallbackRegister
  2832     0263                     l1338:
  2833                           
  2834                           ;mcc_generated_files/spi/src/mssp1.c: 85:     spi1_descriptor.status = SPI_RESET;
  2835     0263  0140               	movlb	0	; select bank0
  2836     0264  01A5               	clrf	_spi1_descriptor+5	;volatile
  2837     0265                     l53:
  2838     0265  0008               	return
  2839     0266                     __end_of_SPI1_Initialize:
  2840                           
  2841                           	psect	text11
  2842     02BA                     __ptext11:	
  2843 ;; *************** function _SPI1_RxCompleteCallbackRegister *****************
  2844 ;; Defined at:
  2845 ;;		line 319 in file "mcc_generated_files/spi/src/mssp1.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  CallbackHand    2    1[COMMON] PTR FTN()void 
  2848 ;;		 -> NULL(1), 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2860 ;;      Params:         2       0       0       0       0       0       0       0
  2861 ;;      Locals:         0       0       0       0       0       0       0       0
  2862 ;;      Temps:          0       0       0       0       0       0       0       0
  2863 ;;      Totals:         2       0       0       0       0       0       0       0
  2864 ;;Total ram usage:        2 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 4
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_SPI1_Initialize
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874     02BA                     _SPI1_RxCompleteCallbackRegister:	
  2875                           ;psect for function _SPI1_RxCompleteCallbackRegister
  2876                           
  2877     02BA                     l1312:	
  2878                           ;incstack = 0
  2879                           ; Regs used in _SPI1_RxCompleteCallbackRegister: [wreg]
  2880                           
  2881                           
  2882                           ;mcc_generated_files/spi/src/mssp1.c: 319: void SPI1_RxCompleteCallbackRegister(void (*C
      +                          allbackHandler)(void));mcc_generated_files/spi/src/mssp1.c: 320: {;mcc_generated_files/s
      +                          pi/src/mssp1.c: 321:     SPI1_RxCompleteCallback = CallbackHandler;
  2883     02BA  0872               	movf	SPI1_RxCompleteCallbackRegister@CallbackHandler+1,w
  2884     02BB  0140               	movlb	0	; select bank0
  2885     02BC  00AE               	movwf	_SPI1_RxCompleteCallback+1
  2886     02BD  0871               	movf	SPI1_RxCompleteCallbackRegister@CallbackHandler,w
  2887     02BE  00AD               	movwf	_SPI1_RxCompleteCallback
  2888     02BF                     l124:
  2889     02BF  0008               	return
  2890     02C0                     __end_of_SPI1_RxCompleteCallbackRegister:
  2891                           
  2892                           	psect	text12
  2893     010B                     __ptext12:	
  2894 ;; *************** function _PIN_MANAGER_Initialize *****************
  2895 ;; Defined at:
  2896 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		status,2
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2910 ;;      Params:         0       0       0       0       0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0
  2913 ;;      Totals:         0       0       0       0       0       0       0       0
  2914 ;;Total ram usage:        0 bytes
  2915 ;; Hardware stack levels used: 1
  2916 ;; Hardware stack levels required when called: 4
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_SYSTEM_Initialize
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924     010B                     _PIN_MANAGER_Initialize:	
  2925                           ;psect for function _PIN_MANAGER_Initialize
  2926                           
  2927     010B                     l1406:	
  2928                           ;incstack = 0
  2929                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2930                           
  2931                           
  2932                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  2933     010B  0140               	movlb	0	; select bank0
  2934     010C  0198               	clrf	24	;volatile
  2935                           
  2936                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  2937     010D  0199               	clrf	25	;volatile
  2938                           
  2939                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  2940     010E  019A               	clrf	26	;volatile
  2941     010F                     l1408:
  2942                           
  2943                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3B;
  2944     010F  303B               	movlw	59
  2945     0110  0092               	movwf	18	;volatile
  2946     0111                     l1410:
  2947                           
  2948                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x70;
  2949     0111  3070               	movlw	112
  2950     0112  0093               	movwf	19	;volatile
  2951     0113                     l1412:
  2952                           
  2953                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xFF;
  2954     0113  30FF               	movlw	255
  2955     0114  0094               	movwf	20	;volatile
  2956     0115                     l1414:
  2957                           
  2958                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x33;
  2959     0115  3033               	movlw	51
  2960     0116  017E               	movlb	62	; select bank62
  2961     0117  00B8               	movwf	56	;volatile
  2962     0118                     l1416:
  2963                           
  2964                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x20;
  2965     0118  3020               	movlw	32
  2966     0119  00C3               	movwf	67	;volatile
  2967     011A                     l1418:
  2968                           
  2969                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xBB;
  2970     011A  30BB               	movlw	187
  2971     011B  00CE               	movwf	78	;volatile
  2972                           
  2973                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
  2974     011C  01B9               	clrf	57	;volatile
  2975                           
  2976                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
  2977     011D  01C4               	clrf	68	;volatile
  2978                           
  2979                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
  2980     011E  01CF               	clrf	79	;volatile
  2981     011F                     l1420:
  2982                           
  2983                           ;mcc_generated_files/system/src/pins.c: 67:     WPUCbits.WPUC2=1;
  2984     011F  154F               	bsf	79,2	;volatile
  2985                           
  2986                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  2987     0120  01BA               	clrf	58	;volatile
  2988                           
  2989                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  2990     0121  01C5               	clrf	69	;volatile
  2991                           
  2992                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  2993     0122  01D0               	clrf	80	;volatile
  2994     0123                     l1422:
  2995                           
  2996                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x37;
  2997     0123  3037               	movlw	55
  2998     0124  00BB               	movwf	59	;volatile
  2999     0125                     l1424:
  3000                           
  3001                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  3002     0125  30F0               	movlw	240
  3003     0126  00C6               	movwf	70	;volatile
  3004     0127                     l1426:
  3005                           
  3006                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  3007     0127  30FF               	movlw	255
  3008     0128  00D1               	movwf	81	;volatile
  3009     0129                     l1428:
  3010                           
  3011                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  3012     0129  303F               	movlw	63
  3013     012A  00BC               	movwf	60	;volatile
  3014     012B                     l1430:
  3015                           
  3016                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  3017     012B  30F0               	movlw	240
  3018     012C  00C7               	movwf	71	;volatile
  3019     012D                     l1432:
  3020                           
  3021                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  3022     012D  30FF               	movlw	255
  3023     012E  00D2               	movwf	82	;volatile
  3024     012F                     l1434:
  3025                           
  3026                           ;mcc_generated_files/system/src/pins.c: 92:     SSP1DATPPS = 0xE;
  3027     012F  300E               	movlw	14
  3028     0130  017D               	movlb	61	; select bank61
  3029     0131  00C6               	movwf	70	;volatile
  3030     0132                     l1436:
  3031                           
  3032                           ;mcc_generated_files/system/src/pins.c: 93:     SSP1SSPPS = 0x16;
  3033     0132  3016               	movlw	22
  3034     0133  00C7               	movwf	71	;volatile
  3035     0134                     l1438:
  3036                           
  3037                           ;mcc_generated_files/system/src/pins.c: 94:     INTPPS = 0x12;
  3038     0134  3012               	movlw	18
  3039     0135  0090               	movwf	16	;volatile
  3040     0136                     l1440:
  3041                           
  3042                           ;mcc_generated_files/system/src/pins.c: 95:     RB7PPS = 0x08;
  3043     0136  3008               	movlw	8
  3044     0137  017E               	movlb	62	; select bank62
  3045     0138  009F               	movwf	31	;volatile
  3046     0139                     l1442:
  3047                           
  3048                           ;mcc_generated_files/system/src/pins.c: 96:     SSP1CLKPPS = 0xC;
  3049     0139  300C               	movlw	12
  3050     013A  017D               	movlb	61	; select bank61
  3051     013B  00C5               	movwf	69	;volatile
  3052     013C                     l1444:
  3053                           
  3054                           ;mcc_generated_files/system/src/pins.c: 97:     RB4PPS = 0x07;
  3055     013C  3007               	movlw	7
  3056     013D  017E               	movlb	62	; select bank62
  3057     013E  009C               	movwf	28	;volatile
  3058                           
  3059                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
  3060     013F  01BD               	clrf	61	;volatile
  3061                           
  3062                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
  3063     0140  01BE               	clrf	62	;volatile
  3064                           
  3065                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
  3066     0141  01BF               	clrf	63	;volatile
  3067                           
  3068                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
  3069     0142  01C8               	clrf	72	;volatile
  3070                           
  3071                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
  3072     0143  01C9               	clrf	73	;volatile
  3073                           
  3074                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
  3075     0144  01CA               	clrf	74	;volatile
  3076                           
  3077                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
  3078     0145  01D3               	clrf	83	;volatile
  3079                           
  3080                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
  3081     0146  01D4               	clrf	84	;volatile
  3082                           
  3083                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
  3084     0147  01D5               	clrf	85	;volatile
  3085     0148                     l269:
  3086     0148  0008               	return
  3087     0149                     __end_of_PIN_MANAGER_Initialize:
  3088                           
  3089                           	psect	text13
  3090     0292                     __ptext13:	
  3091 ;; *************** function _INTERRUPT_Initialize *****************
  3092 ;; Defined at:
  3093 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;		None
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, pclath, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3107 ;;      Params:         0       0       0       0       0       0       0       0
  3108 ;;      Locals:         0       0       0       0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0       0
  3110 ;;      Totals:         0       0       0       0       0       0       0       0
  3111 ;;Total ram usage:        0 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; Hardware stack levels required when called: 5
  3114 ;; This function calls:
  3115 ;;		_INT_SetInterruptHandler
  3116 ;; This function is called by:
  3117 ;;		_SYSTEM_Initialize
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121     0292                     _INTERRUPT_Initialize:	
  3122                           ;psect for function _INTERRUPT_Initialize
  3123                           
  3124     0292                     l1392:	
  3125                           ;incstack = 0
  3126                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3127                           
  3128                           
  3129                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
  3130     0292  014E               	movlb	14	; select bank14
  3131     0293  100C               	bcf	12,0	;volatile
  3132                           
  3133                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 0);
  3134     0294  100B               	bcf	11,0	;volatile
  3135     0295                     l1394:
  3136                           
  3137                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  3138     0295  30D2               	movlw	low _INT_DefaultInterruptHandler
  3139     0296  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler
  3140     0297  3002               	movlw	high _INT_DefaultInterruptHandler
  3141     0298  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  3142     0299  3182  22C0  3182   	fcall	_INT_SetInterruptHandler
  3143     029C                     l1396:
  3144                           
  3145                           ;mcc_generated_files/system/src/interrupt.c: 48:     (PIE0bits.INTE = 1);
  3146     029C  014E               	movlb	14	; select bank14
  3147     029D  1416               	bsf	22,0	;volatile
  3148     029E                     l157:
  3149     029E  0008               	return
  3150     029F                     __end_of_INTERRUPT_Initialize:
  3151                           
  3152                           	psect	text14
  3153     02C0                     __ptext14:	
  3154 ;; *************** function _INT_SetInterruptHandler *****************
  3155 ;; Defined at:
  3156 ;;		line 105 in file "mcc_generated_files/system/src/interrupt.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  3159 ;;		 -> INT_DefaultInterruptHandler(1), 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3171 ;;      Params:         2       0       0       0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0
  3174 ;;      Totals:         2       0       0       0       0       0       0       0
  3175 ;;Total ram usage:        2 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 4
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_INTERRUPT_Initialize
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185     02C0                     _INT_SetInterruptHandler:	
  3186                           ;psect for function _INT_SetInterruptHandler
  3187                           
  3188     02C0                     l1314:	
  3189                           ;incstack = 0
  3190                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  3191                           
  3192                           
  3193                           ;mcc_generated_files/system/src/interrupt.c: 106:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  3194     02C0  0872               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  3195     02C1  0140               	movlb	0	; select bank0
  3196     02C2  00AC               	movwf	_INT_InterruptHandler+1
  3197     02C3  0871               	movf	INT_SetInterruptHandler@InterruptHandler,w
  3198     02C4  00AB               	movwf	_INT_InterruptHandler
  3199     02C5                     l180:
  3200     02C5  0008               	return
  3201     02C6                     __end_of_INT_SetInterruptHandler:
  3202                           
  3203                           	psect	text15
  3204     02C6                     __ptext15:	
  3205 ;; *************** function _CLOCK_Initialize *****************
  3206 ;; Defined at:
  3207 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		status,2
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3221 ;;      Params:         0       0       0       0       0       0       0       0
  3222 ;;      Locals:         0       0       0       0       0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0       0       0       0
  3224 ;;      Totals:         0       0       0       0       0       0       0       0
  3225 ;;Total ram usage:        0 bytes
  3226 ;; Hardware stack levels used: 1
  3227 ;; Hardware stack levels required when called: 4
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_SYSTEM_Initialize
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235     02C6                     _CLOCK_Initialize:	
  3236                           ;psect for function _CLOCK_Initialize
  3237                           
  3238     02C6                     l1402:	
  3239                           ;incstack = 0
  3240                           ; Regs used in _CLOCK_Initialize: [status,2]
  3241                           
  3242                           
  3243                           ;mcc_generated_files/system/src/clock.c: 41:     OSCEN = (0 << 0x6)
  3244     02C6  0151               	movlb	17	; select bank17
  3245     02C7  0191               	clrf	17	;volatile
  3246     02C8                     l1404:
  3247                           
  3248                           ;mcc_generated_files/system/src/clock.c: 45:     OSCFRQ = (5 << 0x0);
  3249     02C8  3005               	movlw	5
  3250     02C9  0093               	movwf	19	;volatile
  3251                           
  3252                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  3253     02CA  0192               	clrf	18	;volatile
  3254     02CB                     l192:
  3255     02CB  0008               	return
  3256     02CC                     __end_of_CLOCK_Initialize:
  3257                           
  3258                           	psect	intentry
  3259     0004                     __pintentry:	
  3260 ;; *************** function _INTERRUPT_InterruptManager *****************
  3261 ;; Defined at:
  3262 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;		None
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;		None
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3276 ;;      Params:         0       0       0       0       0       0       0       0
  3277 ;;      Locals:         0       0       0       0       0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0       0
  3279 ;;      Totals:         0       0       0       0       0       0       0       0
  3280 ;;Total ram usage:        0 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; Hardware stack levels required when called: 3
  3283 ;; This function calls:
  3284 ;;		_INT_ISR
  3285 ;;		_SPI1_ISR
  3286 ;;		_TMR0_ISR
  3287 ;; This function is called by:
  3288 ;;		Interrupt level 1
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292     0004                     _INTERRUPT_InterruptManager:
  3293                           
  3294                           ;incstack = 0
  3295     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3296                           
  3297                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  3298     0005  3180               	pagesel	$
  3299     0006                     i1l1610:
  3300                           
  3301                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(PIE0bits.INTE == 1 && PIR0bits.I
      +                          NTF == 1)
  3302     0006  014E               	movlb	14	; select bank14
  3303     0007  1C16               	btfss	22,0	;volatile
  3304     0008  280A               	goto	u66_21
  3305     0009  280B               	goto	u66_20
  3306     000A                     u66_21:
  3307     000A  2813               	goto	i1l162
  3308     000B                     u66_20:
  3309     000B                     i1l1612:
  3310     000B  1C0C               	btfss	12,0	;volatile
  3311     000C  280E               	goto	u67_21
  3312     000D  280F               	goto	u67_20
  3313     000E                     u67_21:
  3314     000E  2813               	goto	i1l162
  3315     000F                     u67_20:
  3316     000F                     i1l1614:
  3317                           
  3318                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         INT_ISR();
  3319     000F  3182  22CC  3180   	fcall	_INT_ISR
  3320                           
  3321                           ;mcc_generated_files/system/src/interrupt.c: 65:     }
  3322     0012  282F               	goto	i1l170
  3323     0013                     i1l162:	
  3324                           ;mcc_generated_files/system/src/interrupt.c: 66:     else if(INTCONbits.PEIE == 1)
  3325                           
  3326     0013  1F0B               	btfss	11,6	;volatile
  3327     0014  2816               	goto	u68_21
  3328     0015  2817               	goto	u68_20
  3329     0016                     u68_21:
  3330     0016  282F               	goto	i1l170
  3331     0017                     u68_20:
  3332     0017                     i1l1616:
  3333                           
  3334                           ;mcc_generated_files/system/src/interrupt.c: 67:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 68:         if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  3335     0017  1E96               	btfss	22,5	;volatile
  3336     0018  281A               	goto	u69_21
  3337     0019  281B               	goto	u69_20
  3338     001A                     u69_21:
  3339     001A  2823               	goto	i1l165
  3340     001B                     u69_20:
  3341     001B                     i1l1618:
  3342     001B  1E8C               	btfss	12,5	;volatile
  3343     001C  281E               	goto	u70_21
  3344     001D  281F               	goto	u70_20
  3345     001E                     u70_21:
  3346     001E  2823               	goto	i1l165
  3347     001F                     u70_20:
  3348     001F                     i1l1620:
  3349                           
  3350                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             TMR0_ISR();
  3351     001F  3182  222F  3180   	fcall	_TMR0_ISR
  3352                           
  3353                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
  3354     0022  282F               	goto	i1l170
  3355     0023                     i1l165:	
  3356                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE1bits.SSP1IE == 1 &&
      +                           PIR1bits.SSP1IF == 1)
  3357                           
  3358     0023  1C97               	btfss	23,1	;volatile
  3359     0024  2826               	goto	u71_21
  3360     0025  2827               	goto	u71_20
  3361     0026                     u71_21:
  3362     0026  282F               	goto	i1l169
  3363     0027                     u71_20:
  3364     0027                     i1l1622:
  3365     0027  1C8D               	btfss	13,1	;volatile
  3366     0028  282A               	goto	u72_21
  3367     0029  282B               	goto	u72_20
  3368     002A                     u72_21:
  3369     002A  282F               	goto	i1l169
  3370     002B                     u72_20:
  3371     002B                     i1l1624:
  3372                           
  3373                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             SPI1_ISR();
  3374     002B  3180  20C3  3180   	fcall	_SPI1_ISR
  3375                           
  3376                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
  3377     002E  282F               	goto	i1l170
  3378     002F                     i1l169:	
  3379                           ;mcc_generated_files/system/src/interrupt.c: 82:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 84:     }
  3380                           
  3381     002F                     i1l170:
  3382     002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3383     0030  0009               	retfie
  3384     0031                     __end_of_INTERRUPT_InterruptManager:
  3385                           
  3386                           	psect	text17
  3387     022F                     __ptext17:	
  3388 ;; *************** function _TMR0_ISR *****************
  3389 ;; Defined at:
  3390 ;;		line 132 in file "mcc_generated_files/timer/src/tmr0.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, status,2, status,0, pclath, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3404 ;;      Params:         0       0       0       0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0       0
  3406 ;;      Temps:          0       0       0       0       0       0       0       0
  3407 ;;      Totals:         0       0       0       0       0       0       0       0
  3408 ;;Total ram usage:        0 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; Hardware stack levels required when called: 1
  3411 ;; This function calls:
  3412 ;;		NULL
  3413 ;;		_TMR0_DefaultOverflowCallback
  3414 ;; This function is called by:
  3415 ;;		_INTERRUPT_InterruptManager
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419     022F                     _TMR0_ISR:	
  3420                           ;psect for function _TMR0_ISR
  3421                           
  3422     022F                     i1l1502:	
  3423                           ;incstack = 0
  3424                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3425                           
  3426                           
  3427                           ;mcc_generated_files/timer/src/tmr0.c: 133:     TMR0H = (uint8_t) (tmr0PeriodCount >> 8)
      +                          ;
  3428     022F  087C               	movf	_tmr0PeriodCount+1,w	;volatile
  3429     0230  014B               	movlb	11	; select bank11
  3430     0231  009D               	movwf	29	;volatile
  3431     0232                     i1l1504:
  3432                           
  3433                           ;mcc_generated_files/timer/src/tmr0.c: 134:     TMR0L = (uint8_t) (tmr0PeriodCount);
  3434     0232  087B               	movf	_tmr0PeriodCount,w	;volatile
  3435     0233  009C               	movwf	28	;volatile
  3436     0234                     i1l1506:
  3437                           
  3438                           ;mcc_generated_files/timer/src/tmr0.c: 136:     if (((void*)0) != TMR0_OverflowCallback)
      +                           {
  3439     0234  0140               	movlb	0	; select bank0
  3440     0235  0829               	movf	_TMR0_OverflowCallback,w
  3441     0236  042A               	iorwf	_TMR0_OverflowCallback+1,w
  3442     0237  1903               	btfsc	3,2
  3443     0238  2A3A               	goto	u52_21
  3444     0239  2A3B               	goto	u52_20
  3445     023A                     u52_21:
  3446     023A  2A40               	goto	i1l1510
  3447     023B                     u52_20:
  3448     023B                     i1l1508:
  3449                           
  3450                           ;mcc_generated_files/timer/src/tmr0.c: 137:         TMR0_OverflowCallback();
  3451     023B  082A               	movf	_TMR0_OverflowCallback+1,w
  3452     023C  008A               	movwf	10
  3453     023D  0829               	movf	_TMR0_OverflowCallback,w
  3454     023E  000A               	callw
  3455     023F  3182               	pagesel	$
  3456     0240                     i1l1510:
  3457                           
  3458                           ;mcc_generated_files/timer/src/tmr0.c: 139:     PIR0bits.TMR0IF = 0;
  3459     0240  014E               	movlb	14	; select bank14
  3460     0241  128C               	bcf	12,5	;volatile
  3461     0242                     i1l368:
  3462     0242  0008               	return
  3463     0243                     __end_of_TMR0_ISR:
  3464                           
  3465                           	psect	text18
  3466     0243                     __ptext18:	
  3467 ;; *************** function _TMR0_DefaultOverflowCallback *****************
  3468 ;; Defined at:
  3469 ;;		line 146 in file "mcc_generated_files/timer/src/tmr0.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2, status,0
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3483 ;;      Params:         0       0       0       0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0       0
  3486 ;;      Totals:         0       0       0       0       0       0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used: 1
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_TMR0_Initialize
  3493 ;;		_TMR0_ISR
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497     0243                     _TMR0_DefaultOverflowCallback:	
  3498                           ;psect for function _TMR0_DefaultOverflowCallback
  3499                           
  3500     0243                     i1l1462:	
  3501                           ;incstack = 0
  3502                           ; Regs used in _TMR0_DefaultOverflowCallback: [wreg+status,2+status,0]
  3503                           
  3504                           
  3505                           ;mcc_generated_files/timer/src/tmr0.c: 148:     divider--;
  3506     0243  3001               	movlw	1
  3507     0244  0140               	movlb	0	; select bank0
  3508     0245  02B3               	subwf	_divider,f
  3509     0246  3000               	movlw	0
  3510     0247  3BB4               	subwfb	_divider+1,f
  3511     0248                     i1l1464:
  3512                           
  3513                           ;mcc_generated_files/timer/src/tmr0.c: 149:     if (divider == 0)
  3514     0248  0833               	movf	_divider,w
  3515     0249  0434               	iorwf	_divider+1,w
  3516     024A  1D03               	btfss	3,2
  3517     024B  2A4D               	goto	u46_21
  3518     024C  2A4E               	goto	u46_20
  3519     024D                     u46_21:
  3520     024D  2A54               	goto	i1l375
  3521     024E                     u46_20:
  3522     024E                     i1l1466:
  3523                           
  3524                           ;mcc_generated_files/timer/src/tmr0.c: 150:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          151:         timerOverflow = 1;
  3525     024E  3001               	movlw	1
  3526     024F  00A7               	movwf	_timerOverflow
  3527     0250                     i1l1468:
  3528                           
  3529                           ;mcc_generated_files/timer/src/tmr0.c: 152:         divider = 0xFFFF;
  3530     0250  30FF               	movlw	255
  3531     0251  00B3               	movwf	_divider
  3532     0252  30FF               	movlw	255
  3533     0253  00B4               	movwf	_divider+1
  3534     0254                     i1l375:
  3535     0254  0008               	return
  3536     0255                     __end_of_TMR0_DefaultOverflowCallback:
  3537                           
  3538                           	psect	text19
  3539     00C3                     __ptext19:	
  3540 ;; *************** function _SPI1_ISR *****************
  3541 ;; Defined at:
  3542 ;;		line 264 in file "mcc_generated_files/spi/src/mssp1.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  dataToWrite     1    0[COMMON] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3556 ;;      Params:         0       0       0       0       0       0       0       0
  3557 ;;      Locals:         1       0       0       0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0
  3559 ;;      Totals:         1       0       0       0       0       0       0       0
  3560 ;;Total ram usage:        1 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_INTERRUPT_InterruptManager
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569     00C3                     _SPI1_ISR:	
  3570                           ;psect for function _SPI1_ISR
  3571                           
  3572     00C3                     i1l1470:	
  3573                           ;incstack = 0
  3574                           ; Regs used in _SPI1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3575                           
  3576                           
  3577                           ;mcc_generated_files/spi/src/mssp1.c: 266:     PIR1bits.SSP1IF = 0;
  3578     00C3  014E               	movlb	14	; select bank14
  3579     00C4  108D               	bcf	13,1	;volatile
  3580     00C5                     i1l1472:
  3581                           
  3582                           ;mcc_generated_files/spi/src/mssp1.c: 267:     uint8_t dataToWrite;;mcc_generated_files/
      +                          spi/src/mssp1.c: 268:     dataToWrite = 0x00;
  3583     00C5  01F0               	clrf	SPI1_ISR@dataToWrite
  3584     00C6                     i1l1474:
  3585                           
  3586                           ;mcc_generated_files/spi/src/mssp1.c: 270:     if (spi1_descriptor.bufferLength > (size_
      +                          t)0)
  3587     00C6  0140               	movlb	0	; select bank0
  3588     00C7  0822               	movf	_spi1_descriptor+2,w	;volatile
  3589     00C8  0423               	iorwf	_spi1_descriptor+3,w	;volatile
  3590     00C9  1903               	btfsc	3,2
  3591     00CA  28CC               	goto	u47_21
  3592     00CB  28CD               	goto	u47_20
  3593     00CC                     u47_21:
  3594     00CC  28F2               	goto	i1l1488
  3595     00CD                     u47_20:
  3596     00CD                     i1l1476:
  3597                           
  3598                           ;mcc_generated_files/spi/src/mssp1.c: 271:     {;mcc_generated_files/spi/src/mssp1.c: 27
      +                          2:         if (spi1_descriptor.transferType != SPI_WRITE)
  3599     00CD  3081               	movlw	129
  3600     00CE  0624               	xorwf	_spi1_descriptor+4,w	;volatile
  3601     00CF  1903               	btfsc	3,2
  3602     00D0  28D2               	goto	u48_21
  3603     00D1  28D3               	goto	u48_20
  3604     00D2                     u48_21:
  3605     00D2  28DA               	goto	i1l1480
  3606     00D3                     u48_20:
  3607     00D3                     i1l1478:
  3608                           
  3609                           ;mcc_generated_files/spi/src/mssp1.c: 273:         {;mcc_generated_files/spi/src/mssp1.c
      +                          : 274:             *spi1_descriptor.buffer = SSP1BUF;
  3610     00D3  0820               	movf	_spi1_descriptor,w	;volatile
  3611     00D4  0086               	movwf	6
  3612     00D5  0821               	movf	_spi1_descriptor+1,w	;volatile
  3613     00D6  0087               	movwf	7
  3614     00D7  0143               	movlb	3	; select bank3
  3615     00D8  080C               	movf	12,w	;volatile
  3616     00D9  0081               	movwf	1
  3617     00DA                     i1l1480:	
  3618                           ;mcc_generated_files/spi/src/mssp1.c: 275:         }
  3619                           
  3620                           
  3621                           ;mcc_generated_files/spi/src/mssp1.c: 281:         ++spi1_descriptor.buffer;
  3622     00DA  3001               	movlw	1
  3623     00DB  0140               	movlb	0	; select bank0
  3624     00DC  07A0               	addwf	_spi1_descriptor,f	;volatile
  3625     00DD  3000               	movlw	0
  3626     00DE  3DA1               	addwfc	_spi1_descriptor+1,f	;volatile
  3627     00DF                     i1l1482:
  3628                           
  3629                           ;mcc_generated_files/spi/src/mssp1.c: 283:         if (spi1_descriptor.transferType != S
      +                          PI_READ)
  3630     00DF  0824               	movf	_spi1_descriptor+4,w	;volatile
  3631     00E0  1903               	btfsc	3,2
  3632     00E1  28E3               	goto	u49_21
  3633     00E2  28E4               	goto	u49_20
  3634     00E3                     u49_21:
  3635     00E3  28EA               	goto	i1l1486
  3636     00E4                     u49_20:
  3637     00E4                     i1l1484:
  3638                           
  3639                           ;mcc_generated_files/spi/src/mssp1.c: 284:         {;mcc_generated_files/spi/src/mssp1.c
      +                          : 285:             dataToWrite = *spi1_descriptor.buffer;
  3640     00E4  0820               	movf	_spi1_descriptor,w	;volatile
  3641     00E5  0086               	movwf	6
  3642     00E6  0821               	movf	_spi1_descriptor+1,w	;volatile
  3643     00E7  0087               	movwf	7
  3644     00E8  0801               	movf	1,w
  3645     00E9  00F0               	movwf	SPI1_ISR@dataToWrite
  3646     00EA                     i1l1486:	
  3647                           ;mcc_generated_files/spi/src/mssp1.c: 286:         }
  3648                           
  3649                           
  3650                           ;mcc_generated_files/spi/src/mssp1.c: 291:         --spi1_descriptor.bufferLength;
  3651     00EA  3001               	movlw	1
  3652     00EB  02A2               	subwf	_spi1_descriptor+2,f	;volatile
  3653     00EC  3000               	movlw	0
  3654     00ED  3BA3               	subwfb	_spi1_descriptor+3,f	;volatile
  3655                           
  3656                           ;mcc_generated_files/spi/src/mssp1.c: 292:         SSP1BUF = dataToWrite;
  3657     00EE  0870               	movf	SPI1_ISR@dataToWrite,w
  3658     00EF  0143               	movlb	3	; select bank3
  3659     00F0  008C               	movwf	12	;volatile
  3660                           
  3661                           ;mcc_generated_files/spi/src/mssp1.c: 293:     }
  3662     00F1  290A               	goto	i1l121
  3663     00F2                     i1l1488:
  3664                           
  3665                           ;mcc_generated_files/spi/src/mssp1.c: 295:     {;mcc_generated_files/spi/src/mssp1.c: 29
      +                          6:         if ((spi1_descriptor.transferType != SPI_WRITE) && (spi1_descriptor.status !=
      +                           SPI_IDLE))
  3666     00F2  3081               	movlw	129
  3667     00F3  0624               	xorwf	_spi1_descriptor+4,w	;volatile
  3668     00F4  1903               	btfsc	3,2
  3669     00F5  28F7               	goto	u50_21
  3670     00F6  28F8               	goto	u50_20
  3671     00F7                     u50_21:
  3672     00F7  2905               	goto	i1l118
  3673     00F8                     u50_20:
  3674     00F8                     i1l1490:
  3675     00F8  3081               	movlw	129
  3676     00F9  0625               	xorwf	_spi1_descriptor+5,w	;volatile
  3677     00FA  1903               	btfsc	3,2
  3678     00FB  28FD               	goto	u51_21
  3679     00FC  28FE               	goto	u51_20
  3680     00FD                     u51_21:
  3681     00FD  2905               	goto	i1l118
  3682     00FE                     u51_20:
  3683     00FE                     i1l1492:
  3684                           
  3685                           ;mcc_generated_files/spi/src/mssp1.c: 297:         {;mcc_generated_files/spi/src/mssp1.c
      +                          : 298:             *spi1_descriptor.buffer = SSP1BUF;
  3686     00FE  0820               	movf	_spi1_descriptor,w	;volatile
  3687     00FF  0086               	movwf	6
  3688     0100  0821               	movf	_spi1_descriptor+1,w	;volatile
  3689     0101  0087               	movwf	7
  3690     0102  0143               	movlb	3	; select bank3
  3691     0103  080C               	movf	12,w	;volatile
  3692     0104  0081               	movwf	1
  3693     0105                     i1l118:	
  3694                           ;mcc_generated_files/spi/src/mssp1.c: 301:         {;mcc_generated_files/spi/src/mssp1.c
      +                          : 303:         }
  3695                           
  3696                           
  3697                           ;mcc_generated_files/spi/src/mssp1.c: 305:         spi1_descriptor.status = SPI_IDLE;
  3698     0105  3081               	movlw	129
  3699     0106  0140               	movlb	0	; select bank0
  3700     0107  00A5               	movwf	_spi1_descriptor+5	;volatile
  3701                           
  3702                           ;mcc_generated_files/spi/src/mssp1.c: 306:         PIE1bits.SSP1IE = 0;
  3703     0108  014E               	movlb	14	; select bank14
  3704     0109  1097               	bcf	23,1	;volatile
  3705     010A                     i1l121:
  3706     010A  0008               	return
  3707     010B                     __end_of_SPI1_ISR:
  3708                           
  3709                           	psect	text20
  3710     02CC                     __ptext20:	
  3711 ;; *************** function _INT_ISR *****************
  3712 ;; Defined at:
  3713 ;;		line 87 in file "mcc_generated_files/system/src/interrupt.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0, pclath, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3727 ;;      Params:         0       0       0       0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0       0       0       0
  3730 ;;      Totals:         0       0       0       0       0       0       0       0
  3731 ;;Total ram usage:        0 bytes
  3732 ;; Hardware stack levels used: 1
  3733 ;; Hardware stack levels required when called: 2
  3734 ;; This function calls:
  3735 ;;		_INT_CallBack
  3736 ;; This function is called by:
  3737 ;;		_INTERRUPT_InterruptManager
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741     02CC                     _INT_ISR:	
  3742                           ;psect for function _INT_ISR
  3743                           
  3744     02CC                     i1l1498:	
  3745                           ;incstack = 0
  3746                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  3747                           
  3748                           
  3749                           ;mcc_generated_files/system/src/interrupt.c: 89:     (PIR0bits.INTF = 0);
  3750     02CC  014E               	movlb	14	; select bank14
  3751     02CD  100C               	bcf	12,0	;volatile
  3752     02CE                     i1l1500:
  3753                           
  3754                           ;mcc_generated_files/system/src/interrupt.c: 92:     INT_CallBack();
  3755     02CE  3182  229F  3182   	fcall	_INT_CallBack
  3756     02D1                     i1l173:
  3757     02D1  0008               	return
  3758     02D2                     __end_of_INT_ISR:
  3759                           
  3760                           	psect	text21
  3761     029F                     __ptext21:	
  3762 ;; *************** function _INT_CallBack *****************
  3763 ;; Defined at:
  3764 ;;		line 96 in file "mcc_generated_files/system/src/interrupt.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0, pclath, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3778 ;;      Params:         0       0       0       0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0
  3781 ;;      Totals:         0       0       0       0       0       0       0       0
  3782 ;;Total ram usage:        0 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; Hardware stack levels required when called: 1
  3785 ;; This function calls:
  3786 ;;		NULL
  3787 ;;		_INT_DefaultInterruptHandler
  3788 ;; This function is called by:
  3789 ;;		_INT_ISR
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793     029F                     _INT_CallBack:	
  3794                           ;psect for function _INT_CallBack
  3795                           
  3796     029F                     i1l1398:	
  3797                           ;incstack = 0
  3798                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3799                           
  3800                           
  3801                           ;mcc_generated_files/system/src/interrupt.c: 99:     if(INT_InterruptHandler)
  3802     029F  0140               	movlb	0	; select bank0
  3803     02A0  082B               	movf	_INT_InterruptHandler,w
  3804     02A1  042C               	iorwf	_INT_InterruptHandler+1,w
  3805     02A2  1903               	btfsc	3,2
  3806     02A3  2AA5               	goto	u45_21
  3807     02A4  2AA6               	goto	u45_20
  3808     02A5                     u45_21:
  3809     02A5  2AAB               	goto	i1l177
  3810     02A6                     u45_20:
  3811     02A6                     i1l1400:
  3812                           
  3813                           ;mcc_generated_files/system/src/interrupt.c: 100:     {;mcc_generated_files/system/src/i
      +                          nterrupt.c: 101:         INT_InterruptHandler();
  3814     02A6  082C               	movf	_INT_InterruptHandler+1,w
  3815     02A7  008A               	movwf	10
  3816     02A8  082B               	movf	_INT_InterruptHandler,w
  3817     02A9  000A               	callw
  3818     02AA  3182               	pagesel	$
  3819     02AB                     i1l177:
  3820     02AB  0008               	return
  3821     02AC                     __end_of_INT_CallBack:
  3822                           
  3823                           	psect	text22
  3824     02D2                     __ptext22:	
  3825 ;; *************** function _INT_DefaultInterruptHandler *****************
  3826 ;; Defined at:
  3827 ;;		line 109 in file "mcc_generated_files/system/src/interrupt.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		None
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3841 ;;      Params:         0       0       0       0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_INTERRUPT_Initialize
  3851 ;;		_INT_CallBack
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855     02D2                     _INT_DefaultInterruptHandler:	
  3856                           ;psect for function _INT_DefaultInterruptHandler
  3857                           
  3858     02D2                     i1l1316:	
  3859                           ;incstack = 0
  3860                           ; Regs used in _INT_DefaultInterruptHandler: []
  3861                           
  3862                           
  3863                           ;mcc_generated_files/system/src/interrupt.c: 112:     pushed = 1;
  3864     02D2  3001               	movlw	1
  3865     02D3  0140               	movlb	0	; select bank0
  3866     02D4  00A8               	movwf	_pushed
  3867     02D5                     i1l183:
  3868     02D5  0008               	return
  3869     02D6                     __end_of_INT_DefaultInterruptHandler:
  3870     0001                     ___latbits      equ	1
  3871     007E                     btemp           set	126	;btemp
  3872     007E                     int$flags       set	126
  3873     007E                     wtemp0          set	126
  3874                           
  3875                           	psect	config
  3876                           
  3877                           ;Config register CONFIG1 @ 0x8007
  3878                           ;	External Oscillator Mode Selection bits
  3879                           ;	FEXTOSC = ECH, EC (external clock) 16 MHz and above
  3880                           ;	Power-up Default Value for COSC bits
  3881                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  3882                           ;	Clock Out Enable bit
  3883                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  3884                           ;	VDD Range Analog Calibration Selection bit
  3885                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  3886     8007                     	org	32775
  3887     8007  3FCF               	dw	16335
  3888                           
  3889                           ;Config register CONFIG2 @ 0x8008
  3890                           ;	Master Clear Enable bit
  3891                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  3892                           ;	Power-up Timer Selection bits
  3893                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3894                           ;	WDT Operating Mode bits
  3895                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  3896                           ;	Brown-out Reset Enable bits
  3897                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  3898                           ;	Brown-out Reset Voltage Selection bit
  3899                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  3900                           ;	PPSLOCKED One-Way Set Enable bit
  3901                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  3902                           ;	Stack Overflow/Underflow Reset Enable bit
  3903                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  3904     8008                     	org	32776
  3905     8008  3FE7               	dw	16359
  3906                           
  3907                           ;Config register CONFIG4 @ 0x800A
  3908                           ;	Boot Block Size Selection bits
  3909                           ;	BBSIZE = BB512, 512 words boot block size
  3910                           ;	Boot Block Enable bit
  3911                           ;	BBEN = OFF, Boot Block is disabled
  3912                           ;	SAF Enable bit
  3913                           ;	SAFEN = OFF, SAF is disabled
  3914                           ;	Application Block Write Protection bit
  3915                           ;	WRTAPP = OFF, Application Block is not write-protected
  3916                           ;	Boot Block Write Protection bit
  3917                           ;	WRTB = OFF, Boot Block is not write-protected
  3918                           ;	Configuration Registers Write Protection bit
  3919                           ;	WRTC = OFF, Configuration Registers are not write-protected
  3920                           ;	Storage Area Flash (SAF) Write Protection bit
  3921                           ;	WRTSAF = OFF, SAF is not write-protected
  3922                           ;	Low Voltage Programming Enable bit
  3923                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  3924     800A                     	org	32778
  3925     800A  3FFF               	dw	16383
  3926                           
  3927                           ;Config register CONFIG5 @ 0x800B
  3928                           ;	User Program Flash Memory Code Protection bit
  3929                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  3930     800B                     	org	32779
  3931     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    75
    Data        6
    BSS         11
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      5      26
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    NULL$0	PTR FTN()void  size(2) Largest target is 0

    S162$buffer	PTR unsigned char  size(2) Largest target is 4
		 -> main@spiData(BANK0[4]), SPI1_ByteExchange@byteData(COMMON[1]), NULL(NULL[0]), 

    S38$12$0	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S38$4$0	PTR void  size(2) Largest target is 0

    S38$5$0	PTR void  size(2) Largest target is 0

    S38$6$0	PTR void  size(1) Largest target is 4
		 -> main@spiData(BANK0[4]), 

    S38SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S38SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S38SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S38SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S38SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S38SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S38SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S38SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S38SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S38SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S38SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S38SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S38SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> SPI1_RxCompleteCallbackRegister(), 

    S38SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S573$9$0	PTR FTN()void  size(2) Largest target is 0

    S573TIMER_INTERFACE$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    S573TIMER_INTERFACE$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    S573TIMER_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    S573TIMER_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    S573TIMER_INTERFACE$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    S573TIMER_INTERFACE$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    S573TIMER_INTERFACE$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    S573TIMER_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    S573TIMER_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    S573TIMER_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S573TIMER_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    SPI1_BufferWrite@bufferData	PTR void  size(1) Largest target is 4
		 -> main@spiData(BANK0[4]), 

    SPI1_BufferWrite@bufferInput	PTR unsigned char  size(1) Largest target is 4
		 -> main@spiData(BANK0[4]), 

    SPI1_Client$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_Client$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_Client$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_Client$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_Client$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_Client$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_Client$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_Client$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_Client$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_Client$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_Client$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_Client$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_Client$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> SPI1_RxCompleteCallbackRegister(), 

    SPI1_Client$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    spi1_descriptor$buffer	PTR unsigned char  size(2) Largest target is 4
		 -> main@spiData(BANK0[4]), SPI1_ByteExchange@byteData(COMMON[1]), NULL(NULL[0]), 

    SPI1_RxCompleteCallback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    SPI1_RxCompleteCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    spi_send_data@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@spiData(BANK0[4]), 

    Timer0$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    Timer0$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    Timer0$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    Timer0$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    Timer0$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    Timer0$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    Timer0$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    Timer0$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    Timer0$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), NULL(), 


Critical Paths under _main in COMMON

    _spi_send_data->_SPI1_Open
    _SPI1_Open->___wmul
    _SPI1_Initialize->_SPI1_RxCompleteCallbackRegister
    _INTERRUPT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_SPI1_ISR

Critical Paths under _main in BANK0

    _main->_spi_send_data

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     446
                                              1 BANK0      4     4      0
                  _SYSTEM_Initialize
                      _spi_send_data
                         _toggle_led
 ---------------------------------------------------------------------------------
 (1) _toggle_led                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_send_data                                        1     0      1     342
                                              0 BANK0      1     0      1
                   _SPI1_BufferWrite
                         _SPI1_Close
                     _SPI1_IsTxReady
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     214
                                              7 COMMON     4     3      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     100
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI1_IsTxReady                                       1     1      0      25
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_BufferWrite                                     6     3      3      69
                                              1 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      46
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0      23
    _SPI1_RxCompleteCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _SPI1_RxCompleteCallbackRegister                      2     0      2      23
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0      24
                            _INT_ISR
                           _SPI1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SPI1_ISR                                             1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                                NULL *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
       _SPI1_RxCompleteCallbackRegister
     _TMR0_Initialize
   _spi_send_data
     _SPI1_BufferWrite
     _SPI1_Close
     _SPI1_IsTxReady
     _SPI1_Open
       ___wmul
   _toggle_led

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       NULL(Fake) *
       _INT_DefaultInterruptHandler *
   _SPI1_ISR
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     11      13     92.9%
BANK0               80      5      26     32.5%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      39      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Jan 19 18:39:19 2025

                             _SPI1_ByteExchange 0000                                  ?_spi_send_data 0035  
                                            l53 0265                                              l61 00C2  
                                            l64 02B3                                              l73 016D  
                           ___wmul@multiplicand 0073                                             l124 02BF  
                                           l108 0291                                             l180 02C5  
                                           l340 022E                                             l157 029E  
                                           l422 01AE                                             l415 0284  
                                           l192 02CB                                             l291 0275  
                                           l269 0148                                             l490 01B9  
                                           l492 01CD                                             u410 01C9  
                                           u411 01C8                                             u420 0057  
                                           u405 01BF                                             u421 0056  
                                           u430 0152                                             u431 0151  
                                           u440 028C                                             u441 028B  
                                           u530 027D                                             u531 027B  
                                           u380 01B5                                             u540 027E  
                                           u381 01B4                                             u395 01BA  
                                           u740 0199                                             u741 0198  
                                           u750 01A1                                             u751 01A0  
                                           u760 0181                                             u761 0180  
                                           wreg 0009                                            l1312 02BA  
                                          l1320 01B1                                            l1402 02C6  
                                          l1314 02C0                                            l1410 0111  
                                          l1322 01B5                                            l1404 02C8  
                                          l1420 011F                                            l1412 0113  
                                          l1332 0255                                            l1324 01BE  
                                          l1340 0052                                            l1430 012B  
                                          l1422 0123                                            l1414 0115  
                                          l1406 010B                                            l1334 0258  
                                          l1326 01C3                                            l1318 01AF  
                                          l1350 00BB                                            l1342 0052  
                                          l1440 0136                                            l1432 012D  
                                          l1424 0125                                            l1416 0118  
                                          l1408 010F                                            l1336 025D  
                                          l1512 0266                                            l1360 02AC  
                                          l1328 01C9                                            l1352 00BD  
                                          l1344 0057                                            l1520 0276  
                                          l1442 0139                                            l1434 012F  
                                          l1426 0127                                            l1418 011A  
                                          l1338 0263                                            l1450 021D  
                                          l1514 026C                                            l1370 0154  
                                          l1362 02B1                                            l1346 005A  
                                          l1354 00C0                                            l1522 027F  
                                          l1444 013C                                            l1436 0132  
                                          l1428 0129                                            l1460 022B  
                                          l1452 021F                                            l1516 026F  
                                          l1372 0158                                            l1364 0149  
                                          l1380 0285                                            l1356 00C1  
                                          l1348 00BA                                            l1438 0134  
                                          l1454 0223                                            l1446 0219  
                                          l1518 0272                                            l1374 0162  
                                          l1366 014B                                            l1382 0285  
                                          l1392 0292                                            l1456 0228  
                                          l1448 021C                                            l1376 0164  
                                          l1368 0152                                            l1384 028C  
                                          l1394 0295                                            l1458 022A  
                                          l1378 0166                                            l1386 028F  
                                          l1650 0199                                            l1396 029C  
                                          l1388 0290                                            l1652 01A1  
                                          l1660 0172                                            l1654 01AB  
                                          l1646 0190                                            l1670 0186  
                                          l1662 0173                                            l1672 018B  
                                          l1664 017C                                            l1656 016E  
                                          l1666 0181                                            l1658 0171  
                                          l1668 0184                                            _LATA 0018  
                                          _LATB 0019                                 __end_of_INT_ISR 02D2  
                                          _LATC 001A                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                          _main 016E                                     main@spiData 0036  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E             __end_of_INT_DefaultInterruptHandler 02D6  
                   _INT_DefaultInterruptHandler 02D2                                            start 0031  
               __end_of_INT_SetInterruptHandler 02C6                         __end_of_TMR0_Initialize 022F  
                                   ?_SPI1_Close 0070                                           ?_main 0070  
                                         _IOCAF 1F3F                                           _IOCBF 1F4A  
                                         _IOCCF 1F55                                           _IOCAN 1F3E  
                                         _IOCAP 1F3D                                           _IOCBN 1F49  
                                         _IOCBP 1F48                                           _IOCCN 1F54  
                                         _IOCCP 1F53                                           i1l121 010A  
                                         i1l118 0105                                           i1l170 002F  
                                         i1l162 0013                                           i1l173 02D1  
                                         i1l165 0023                                           i1l183 02D5  
                                         i1l177 02AB                                           i1l169 002F  
                                         i1l375 0254                                           i1l368 0242  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR0L 059C                                           u50_20 00F8  
                                         u50_21 00F7                                           u51_20 00FE  
                                         u51_21 00FD                                           u52_20 023B  
                                         u52_21 023A                                           u45_20 02A6  
                                         u45_21 02A5                                           u46_20 024E  
                                         u70_20 001F                                           u46_21 024D  
                                         u70_21 001E                                           u47_20 00CD  
                                         u71_20 0027                                           u47_21 00CC  
                                         u71_21 0026                                           u48_20 00D3  
                                         u72_20 002B                                           u48_21 00D2  
                                         u72_21 002A                                           u49_20 00E4  
                                         u49_21 00E3                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                         u66_20 000B                                           u66_21 000A  
                                         u67_20 000F                                           u67_21 000E  
                                         u68_20 0017                                           u68_21 0016  
                                         u69_20 001B                                           u69_21 001A  
                              __end_of_SPI1_ISR 010B                                __end_of_TMR0_ISR 0243  
                                         pclath 000A                                 _tmr0PeriodCount 007B  
                                         status 0003                                           wtemp0 007E  
                               __initialization 0033                                 ??_spi_send_data 007B  
                                  __end_of_main 0190                     ?_INTERRUPT_InterruptManager 0070  
                                        ??_main 007B                                       ??_INT_ISR 0070  
                      __end_of_SPI1_BufferWrite 016E                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RB4PPS 1F1C                                          i1l1400 02A6  
                                        _RB7PPS 1F1F                                          i1l1316 02D2  
                                        i1l1500 02CE                                          i1l1510 0240  
                                        i1l1502 022F                                          i1l1504 0232  
                                        _ODCONA 1F3A                                          i1l1506 0234  
                                        i1l1610 0006                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          i1l1508 023B  
                                        i1l1620 001F                                          i1l1612 000B  
                                        i1l1470 00C3                                          i1l1462 0243  
                                        i1l1622 0027                                          i1l1614 000F  
                                        i1l1480 00DA                                          i1l1472 00C5  
                                        i1l1464 0248                                          i1l1624 002B  
                                        i1l1616 0017                                          i1l1490 00F8  
                                        i1l1482 00DF                                          i1l1474 00C6  
                                        i1l1466 024E                                          i1l1618 001B  
                                        i1l1492 00FE                                          i1l1484 00E4  
                                        i1l1476 00CD                                          i1l1468 0250  
                                        i1l1398 029F                                          i1l1486 00EA  
                                        i1l1478 00D3                                          i1l1488 00F2  
                                        i1l1498 02CC                                          _INLVLA 1F3C  
                                        _INLVLB 1F47                                          _INLVLC 1F52  
                                        _INTPPS 1E90                                          _OSCFRQ 0893  
                             __end_of_SPI1_Open 00C3                                          _Timer0 0203  
                       _SPI1_RxCompleteCallback 002D                                          ___wmul 01AF  
                              ?_TMR0_Initialize 0070                                          _pushed 0028  
                             ?_CLOCK_Initialize 0070                                   ?_INT_CallBack 0070  
                            ??_CLOCK_Initialize 0071         INT_SetInterruptHandler@InterruptHandler 0071  
                                _SPI1_IsRxReady 0000                                  _SPI1_IsTxReady 0285  
                             _SYSTEM_Initialize 0266                         __end_of__initialization 004E  
                                _SPI1_ByteWrite 0000                              ?_SYSTEM_Initialize 0070  
                                __pcstackCOMMON 0070                                       ?_SPI1_ISR 0070  
                                  __pidataBANK0 02B4                             ??_SYSTEM_Initialize 0073  
                                     ?_TMR0_ISR 0070                               ??_SPI1_Initialize 0073  
                                ??_INT_CallBack 0070                              _spi1_configuration 01EA  
                        __end_of_SPI1_IsTxReady 0292                       __end_of_SYSTEM_Initialize 0276  
                                    __pbssBANK0 0020                           _TMR0_OverflowCallback 0029  
                   SPI1_BufferWrite@bufferInput 0076                                      __pmaintext 016E  
                                    ??_SPI1_ISR 0070                                         ?___wmul 0071  
                                    ??_TMR0_ISR 0070                                      __pintentry 0004  
                                  ??_SPI1_Close 0071                                         _INT_ISR 02CC  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                               ?_SPI1_IsTxReady 0070                              __end_of_SPI1_Close 02B4  
                                       __ptext1 0276                                         __ptext2 0190  
                                       __ptext3 0052                                         __ptext4 01AF  
                                       __ptext5 0285                                         __ptext6 02AC  
                                       __ptext7 0149                                         __ptext8 0266  
                                       __ptext9 0219                                         _divider 0033  
                      ??_PIN_MANAGER_Initialize 0071                         _INT_SetInterruptHandler 02C0  
                          end_of_initialization 004E                               ?_SPI1_BufferWrite 0071  
                            ??_SPI1_BufferWrite 0074                            __end_of_INT_CallBack 02AC  
                               _SPI1_BufferRead 0000                           __end_of_spi_send_data 01AF  
                                     _SPI1_Open 0052         __end_of_SPI1_RxCompleteCallbackRegister 02C0  
             ??_SPI1_RxCompleteCallbackRegister 0073                ?_SPI1_RxCompleteCallbackRegister 0071  
               _SPI1_RxCompleteCallbackRegister 02BA                                       _SSP1SSPPS 1EC7  
                                     _TMR0_Stop 0000                             _SPI1_BufferExchange 0000  
                 _TMR0_OverflowCallbackRegister 0000                                  _TMR0_PeriodGet 0000  
                                _TMR0_PeriodSet 0000                                      _toggle_led 0276  
SPI1_RxCompleteCallbackRegister@CallbackHandler 0071                               _TMR0_Deinitialize 0000  
                               _SPI1_Initialize 0255            __end_of_TMR0_DefaultOverflowCallback 0255  
                  _TMR0_DefaultOverflowCallback 0243                                  __end_of_Timer0 0219  
                  __end_of_INTERRUPT_Initialize 029F                                      ?_SPI1_Open 0077  
                                __end_of___wmul 01CE                       ??_INT_SetInterruptHandler 0073  
                           start_initialization 0033                    ?_INT_DefaultInterruptHandler 0070  
                 ?_TMR0_DefaultOverflowCallback 0070                               spi_send_data@data 0035  
                                      ??___wmul 0075                                     __pdataBANK0 002F  
                              ??_SPI1_IsTxReady 0071                                   _SPI1_ByteRead 0000  
                                   __pbssCOMMON 007B                                     ?_toggle_led 0070  
                                     ___latbits 0001                                        ?_INT_ISR 0070  
                                 __pcstackBANK0 0035                         __end_of_SPI1_Initialize 0266  
                                     __pnvBANK0 0029                      SPI1_BufferWrite@bufferData 0071  
                        _PIN_MANAGER_Initialize 010B                      SPI1_BufferWrite@bufferSize 0072  
                          SPI1_Open@returnValue 007A                   ??_INT_DefaultInterruptHandler 0070  
                                   ??_SPI1_Open 0078                    ??_INTERRUPT_InterruptManager 0071  
                                  _INT_CallBack 029F                                       _led_state 0026  
                          _INTERRUPT_Initialize 0292                                _CLOCK_Initialize 02C6  
                             ??_TMR0_Initialize 0071                                  ___wmul@product 0075  
                                      _LATAbits 0018                                        _PIE0bits 0716  
                                      _PIE1bits 0717                                        _PIR0bits 070C  
                                      _PIR1bits 070D                                        _SPI1_ISR 00C3  
                                     main@F3786 002F                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 022F  
                                      _SSP1STAT 018F                  ??_TMR0_DefaultOverflowCallback 0070  
                             _SPI1_Deinitialize 0000                               ___wmul@multiplier 0071  
                                      _WPUCbits 1F4F                                ?_SPI1_Initialize 0070  
                         ?_INTERRUPT_Initialize 0070                             __end_of_SPI1_Client 01EA  
                                    _T0CON0bits 059E                                        __ptext10 0255  
                                      __ptext11 02BA                                        __ptext20 02CC  
                                      __ptext12 010B                                        __ptext21 029F  
                                      __ptext13 0292                                        __ptext22 02D2  
                                      __ptext14 02C0                                        __ptext15 02C6  
                                      __ptext17 022F                                        __ptext18 0243  
                                      __ptext19 00C3                                    _SSP1CON1bits 0190  
                              _TMR0_MaxCountGet 0000                                   _timerOverflow 0027  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 0031  
                    _INTERRUPT_InterruptManager 0004                             SPI1_ISR@dataToWrite 0070  
                               _spi1_descriptor 0020                                      _INTCONbits 000B  
                                  ??_toggle_led 0071                            _INT_InterruptHandler 002B  
                                   _SPI1_Client 01CE                          ??_INTERRUPT_Initialize 0073  
                                      intlevel1 0000                         ?_PIN_MANAGER_Initialize 0070  
                            __end_of_toggle_led 0285                                 _TMR0_CounterGet 0000  
                               _TMR0_CounterSet 0000                                _SPI1_BufferWrite 0149  
                      ?_INT_SetInterruptHandler 0071                                   _spi_send_data 0190  
                      __end_of_CLOCK_Initialize 02CC                                   __pstringtext1 01CE  
                                 __pstringtext2 01EA                                   __pstringtext3 0203  
                                    _SPI1_Close 02AC                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 _TMR0_Initialize 0219  
                     SPI1_IsTxReady@returnValue 0071                                      _TMR0_Start 0000  
                __end_of_PIN_MANAGER_Initialize 0149                         SPI1_Open@spiConfigIndex 0077  
                    __end_of_spi1_configuration 0203  
