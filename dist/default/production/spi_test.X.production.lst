

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Jan 19 16:35:49 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,space=0,delta=2
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Generated 25/01/2024 GMT
    40                           ; 
    41                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F15244 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0008                     bsr             equ	8
    74     0005                     fsr0h           equ	5
    75     0004                     fsr0l           equ	4
    76     0007                     fsr1h           equ	7
    77     0006                     fsr1l           equ	6
    78     0000                     indf            equ	0
    79     0000                     indf0           equ	0
    80     0001                     indf1           equ	1
    81     000B                     intcon          equ	11
    82     0002                     pc              equ	2
    83     0002                     pcl             equ	2
    84     000A                     pclath          equ	10
    85     0003                     status          equ	3
    86     0009                     wreg            equ	9
    87     0000                     INDF0           equ	0	;# 
    88     0001                     INDF1           equ	1	;# 
    89     0002                     PCL             equ	2	;# 
    90     0003                     STATUS          equ	3	;# 
    91     0004                     FSR0L           equ	4	;# 
    92     0005                     FSR0H           equ	5	;# 
    93     0006                     FSR1L           equ	6	;# 
    94     0007                     FSR1H           equ	7	;# 
    95     0008                     BSR             equ	8	;# 
    96     0009                     WREG            equ	9	;# 
    97     000A                     PCLATH          equ	10	;# 
    98     000B                     INTCON          equ	11	;# 
    99     000C                     PORTA           equ	12	;# 
   100     000D                     PORTB           equ	13	;# 
   101     000E                     PORTC           equ	14	;# 
   102     0012                     TRISA           equ	18	;# 
   103     0013                     TRISB           equ	19	;# 
   104     0014                     TRISC           equ	20	;# 
   105     0018                     LATA            equ	24	;# 
   106     0019                     LATB            equ	25	;# 
   107     001A                     LATC            equ	26	;# 
   108     009A                     CPCON           equ	154	;# 
   109     009B                     ADRES           equ	155	;# 
   110     009B                     ADRESL          equ	155	;# 
   111     009C                     ADRESH          equ	156	;# 
   112     009D                     ADCON0          equ	157	;# 
   113     009E                     ADCON1          equ	158	;# 
   114     009F                     ADACT           equ	159	;# 
   115     010C                     RB4I2C          equ	268	;# 
   116     010D                     RB6I2C          equ	269	;# 
   117     0119                     RC1REG          equ	281	;# 
   118     011A                     TX1REG          equ	282	;# 
   119     011B                     SP1BRG          equ	283	;# 
   120     011B                     SP1BRGL         equ	283	;# 
   121     011C                     SP1BRGH         equ	284	;# 
   122     011D                     RC1STA          equ	285	;# 
   123     011E                     TX1STA          equ	286	;# 
   124     011F                     BAUD1CON        equ	287	;# 
   125     018C                     SSP1BUF         equ	396	;# 
   126     018D                     SSP1ADD         equ	397	;# 
   127     018E                     SSP1MSK         equ	398	;# 
   128     018F                     SSP1STAT        equ	399	;# 
   129     0190                     SSP1CON1        equ	400	;# 
   130     0191                     SSP1CON2        equ	401	;# 
   131     0192                     SSP1CON3        equ	402	;# 
   132     020C                     TMR1            equ	524	;# 
   133     020C                     TMR1L           equ	524	;# 
   134     020D                     TMR1H           equ	525	;# 
   135     020E                     T1CON           equ	526	;# 
   136     020E                     TMR1CON         equ	526	;# 
   137     020F                     T1GCON          equ	527	;# 
   138     020F                     TMR1GCON        equ	527	;# 
   139     0210                     T1GATE          equ	528	;# 
   140     0210                     TMR1GATE        equ	528	;# 
   141     0211                     T1CLK           equ	529	;# 
   142     0211                     TMR1CLK         equ	529	;# 
   143     0211                     PR1             equ	529	;# 
   144     028C                     T2TMR           equ	652	;# 
   145     028C                     TMR2            equ	652	;# 
   146     028D                     T2PR            equ	653	;# 
   147     028D                     PR2             equ	653	;# 
   148     028E                     T2CON           equ	654	;# 
   149     028F                     T2HLT           equ	655	;# 
   150     0290                     T2CLKCON        equ	656	;# 
   151     0291                     T2RST           equ	657	;# 
   152     030C                     CCPR1           equ	780	;# 
   153     030C                     CCPR1L          equ	780	;# 
   154     030D                     CCPR1H          equ	781	;# 
   155     030E                     CCP1CON         equ	782	;# 
   156     030F                     CCP1CAP         equ	783	;# 
   157     0310                     CCPR2           equ	784	;# 
   158     0310                     CCPR2L          equ	784	;# 
   159     0311                     CCPR2H          equ	785	;# 
   160     0312                     CCP2CON         equ	786	;# 
   161     0313                     CCP2CAP         equ	787	;# 
   162     0314                     PWM3DC          equ	788	;# 
   163     0314                     PWM3DCL         equ	788	;# 
   164     0315                     PWM3DCH         equ	789	;# 
   165     0316                     PWM3CON         equ	790	;# 
   166     0318                     PWM4DC          equ	792	;# 
   167     0318                     PWM4DCL         equ	792	;# 
   168     0319                     PWM4DCH         equ	793	;# 
   169     031A                     PWM4CON         equ	794	;# 
   170     059C                     TMR0L           equ	1436	;# 
   171     059C                     TMR0            equ	1436	;# 
   172     059D                     TMR0H           equ	1437	;# 
   173     059D                     PR0             equ	1437	;# 
   174     059E                     T0CON0          equ	1438	;# 
   175     059F                     T0CON1          equ	1439	;# 
   176     070C                     PIR0            equ	1804	;# 
   177     070D                     PIR1            equ	1805	;# 
   178     070E                     PIR2            equ	1806	;# 
   179     0716                     PIE0            equ	1814	;# 
   180     0717                     PIE1            equ	1815	;# 
   181     0718                     PIE2            equ	1816	;# 
   182     080C                     WDTCON          equ	2060	;# 
   183     0811                     BORCON          equ	2065	;# 
   184     0813                     PCON0           equ	2067	;# 
   185     0814                     PCON1           equ	2068	;# 
   186     081A                     NVMADR          equ	2074	;# 
   187     081A                     NVMADRL         equ	2074	;# 
   188     081B                     NVMADRH         equ	2075	;# 
   189     081C                     NVMDAT          equ	2076	;# 
   190     081C                     NVMDATL         equ	2076	;# 
   191     081D                     NVMDATH         equ	2077	;# 
   192     081E                     NVMCON1         equ	2078	;# 
   193     081F                     NVMCON2         equ	2079	;# 
   194     088E                     OSCCON          equ	2190	;# 
   195     0890                     OSCSTAT         equ	2192	;# 
   196     0891                     OSCEN           equ	2193	;# 
   197     0892                     OSCTUNE         equ	2194	;# 
   198     0893                     OSCFRQ          equ	2195	;# 
   199     090C                     FVRCON          equ	2316	;# 
   200     1E8F                     PPSLOCK         equ	7823	;# 
   201     1E90                     INTPPS          equ	7824	;# 
   202     1E91                     T0CKIPPS        equ	7825	;# 
   203     1E92                     T1CKIPPS        equ	7826	;# 
   204     1E93                     T1GPPS          equ	7827	;# 
   205     1E9C                     T2INPPS         equ	7836	;# 
   206     1EA1                     CCP1PPS         equ	7841	;# 
   207     1EA2                     CCP2PPS         equ	7842	;# 
   208     1EC3                     ADACTPPS        equ	7875	;# 
   209     1EC5                     SSP1CLKPPS      equ	7877	;# 
   210     1EC6                     SSP1DATPPS      equ	7878	;# 
   211     1EC7                     SSP1SSPPS       equ	7879	;# 
   212     1ECB                     RX1PPS          equ	7883	;# 
   213     1ECB                     RX1DTPPS        equ	7883	;# 
   214     1ECB                     RXPPS           equ	7883	;# 
   215     1ECC                     CK1PPS          equ	7884	;# 
   216     1ECC                     TX1CKPPS        equ	7884	;# 
   217     1ECC                     CKPPS           equ	7884	;# 
   218     1F10                     RA0PPS          equ	7952	;# 
   219     1F11                     RA1PPS          equ	7953	;# 
   220     1F12                     RA2PPS          equ	7954	;# 
   221     1F14                     RA4PPS          equ	7956	;# 
   222     1F15                     RA5PPS          equ	7957	;# 
   223     1F1C                     RB4PPS          equ	7964	;# 
   224     1F1D                     RB5PPS          equ	7965	;# 
   225     1F1E                     RB6PPS          equ	7966	;# 
   226     1F1F                     RB7PPS          equ	7967	;# 
   227     1F20                     RC0PPS          equ	7968	;# 
   228     1F21                     RC1PPS          equ	7969	;# 
   229     1F22                     RC2PPS          equ	7970	;# 
   230     1F23                     RC3PPS          equ	7971	;# 
   231     1F24                     RC4PPS          equ	7972	;# 
   232     1F25                     RC5PPS          equ	7973	;# 
   233     1F26                     RC6PPS          equ	7974	;# 
   234     1F27                     RC7PPS          equ	7975	;# 
   235     1F38                     ANSELA          equ	7992	;# 
   236     1F39                     WPUA            equ	7993	;# 
   237     1F3A                     ODCONA          equ	7994	;# 
   238     1F3B                     SLRCONA         equ	7995	;# 
   239     1F3C                     INLVLA          equ	7996	;# 
   240     1F3D                     IOCAP           equ	7997	;# 
   241     1F3E                     IOCAN           equ	7998	;# 
   242     1F3F                     IOCAF           equ	7999	;# 
   243     1F43                     ANSELB          equ	8003	;# 
   244     1F44                     WPUB            equ	8004	;# 
   245     1F45                     ODCONB          equ	8005	;# 
   246     1F46                     SLRCONB         equ	8006	;# 
   247     1F47                     INLVLB          equ	8007	;# 
   248     1F48                     IOCBP           equ	8008	;# 
   249     1F49                     IOCBN           equ	8009	;# 
   250     1F4A                     IOCBF           equ	8010	;# 
   251     1F4E                     ANSELC          equ	8014	;# 
   252     1F4F                     WPUC            equ	8015	;# 
   253     1F50                     ODCONC          equ	8016	;# 
   254     1F51                     SLRCONC         equ	8017	;# 
   255     1F52                     INLVLC          equ	8018	;# 
   256     1F53                     IOCCP           equ	8019	;# 
   257     1F54                     IOCCN           equ	8020	;# 
   258     1F55                     IOCCF           equ	8021	;# 
   259     1FE4                     STATUS_SHAD     equ	8164	;# 
   260     1FE5                     WREG_SHAD       equ	8165	;# 
   261     1FE6                     BSR_SHAD        equ	8166	;# 
   262     1FE7                     PCLATH_SHAD     equ	8167	;# 
   263     1FE8                     FSR0_SHAD       equ	8168	;# 
   264     1FE8                     FSR0L_SHAD      equ	8168	;# 
   265     1FE9                     FSR0H_SHAD      equ	8169	;# 
   266     1FEA                     FSR1L_SHAD      equ	8170	;# 
   267     1FEB                     FSR1H_SHAD      equ	8171	;# 
   268     1FED                     STKPTR          equ	8173	;# 
   269     1FEE                     TOSL            equ	8174	;# 
   270     1FEF                     TOSH            equ	8175	;# 
   271     0000                     INDF0           equ	0	;# 
   272     0001                     INDF1           equ	1	;# 
   273     0002                     PCL             equ	2	;# 
   274     0003                     STATUS          equ	3	;# 
   275     0004                     FSR0L           equ	4	;# 
   276     0005                     FSR0H           equ	5	;# 
   277     0006                     FSR1L           equ	6	;# 
   278     0007                     FSR1H           equ	7	;# 
   279     0008                     BSR             equ	8	;# 
   280     0009                     WREG            equ	9	;# 
   281     000A                     PCLATH          equ	10	;# 
   282     000B                     INTCON          equ	11	;# 
   283     000C                     PORTA           equ	12	;# 
   284     000D                     PORTB           equ	13	;# 
   285     000E                     PORTC           equ	14	;# 
   286     0012                     TRISA           equ	18	;# 
   287     0013                     TRISB           equ	19	;# 
   288     0014                     TRISC           equ	20	;# 
   289     0018                     LATA            equ	24	;# 
   290     0019                     LATB            equ	25	;# 
   291     001A                     LATC            equ	26	;# 
   292     009A                     CPCON           equ	154	;# 
   293     009B                     ADRES           equ	155	;# 
   294     009B                     ADRESL          equ	155	;# 
   295     009C                     ADRESH          equ	156	;# 
   296     009D                     ADCON0          equ	157	;# 
   297     009E                     ADCON1          equ	158	;# 
   298     009F                     ADACT           equ	159	;# 
   299     010C                     RB4I2C          equ	268	;# 
   300     010D                     RB6I2C          equ	269	;# 
   301     0119                     RC1REG          equ	281	;# 
   302     011A                     TX1REG          equ	282	;# 
   303     011B                     SP1BRG          equ	283	;# 
   304     011B                     SP1BRGL         equ	283	;# 
   305     011C                     SP1BRGH         equ	284	;# 
   306     011D                     RC1STA          equ	285	;# 
   307     011E                     TX1STA          equ	286	;# 
   308     011F                     BAUD1CON        equ	287	;# 
   309     018C                     SSP1BUF         equ	396	;# 
   310     018D                     SSP1ADD         equ	397	;# 
   311     018E                     SSP1MSK         equ	398	;# 
   312     018F                     SSP1STAT        equ	399	;# 
   313     0190                     SSP1CON1        equ	400	;# 
   314     0191                     SSP1CON2        equ	401	;# 
   315     0192                     SSP1CON3        equ	402	;# 
   316     020C                     TMR1            equ	524	;# 
   317     020C                     TMR1L           equ	524	;# 
   318     020D                     TMR1H           equ	525	;# 
   319     020E                     T1CON           equ	526	;# 
   320     020E                     TMR1CON         equ	526	;# 
   321     020F                     T1GCON          equ	527	;# 
   322     020F                     TMR1GCON        equ	527	;# 
   323     0210                     T1GATE          equ	528	;# 
   324     0210                     TMR1GATE        equ	528	;# 
   325     0211                     T1CLK           equ	529	;# 
   326     0211                     TMR1CLK         equ	529	;# 
   327     0211                     PR1             equ	529	;# 
   328     028C                     T2TMR           equ	652	;# 
   329     028C                     TMR2            equ	652	;# 
   330     028D                     T2PR            equ	653	;# 
   331     028D                     PR2             equ	653	;# 
   332     028E                     T2CON           equ	654	;# 
   333     028F                     T2HLT           equ	655	;# 
   334     0290                     T2CLKCON        equ	656	;# 
   335     0291                     T2RST           equ	657	;# 
   336     030C                     CCPR1           equ	780	;# 
   337     030C                     CCPR1L          equ	780	;# 
   338     030D                     CCPR1H          equ	781	;# 
   339     030E                     CCP1CON         equ	782	;# 
   340     030F                     CCP1CAP         equ	783	;# 
   341     0310                     CCPR2           equ	784	;# 
   342     0310                     CCPR2L          equ	784	;# 
   343     0311                     CCPR2H          equ	785	;# 
   344     0312                     CCP2CON         equ	786	;# 
   345     0313                     CCP2CAP         equ	787	;# 
   346     0314                     PWM3DC          equ	788	;# 
   347     0314                     PWM3DCL         equ	788	;# 
   348     0315                     PWM3DCH         equ	789	;# 
   349     0316                     PWM3CON         equ	790	;# 
   350     0318                     PWM4DC          equ	792	;# 
   351     0318                     PWM4DCL         equ	792	;# 
   352     0319                     PWM4DCH         equ	793	;# 
   353     031A                     PWM4CON         equ	794	;# 
   354     059C                     TMR0L           equ	1436	;# 
   355     059C                     TMR0            equ	1436	;# 
   356     059D                     TMR0H           equ	1437	;# 
   357     059D                     PR0             equ	1437	;# 
   358     059E                     T0CON0          equ	1438	;# 
   359     059F                     T0CON1          equ	1439	;# 
   360     070C                     PIR0            equ	1804	;# 
   361     070D                     PIR1            equ	1805	;# 
   362     070E                     PIR2            equ	1806	;# 
   363     0716                     PIE0            equ	1814	;# 
   364     0717                     PIE1            equ	1815	;# 
   365     0718                     PIE2            equ	1816	;# 
   366     080C                     WDTCON          equ	2060	;# 
   367     0811                     BORCON          equ	2065	;# 
   368     0813                     PCON0           equ	2067	;# 
   369     0814                     PCON1           equ	2068	;# 
   370     081A                     NVMADR          equ	2074	;# 
   371     081A                     NVMADRL         equ	2074	;# 
   372     081B                     NVMADRH         equ	2075	;# 
   373     081C                     NVMDAT          equ	2076	;# 
   374     081C                     NVMDATL         equ	2076	;# 
   375     081D                     NVMDATH         equ	2077	;# 
   376     081E                     NVMCON1         equ	2078	;# 
   377     081F                     NVMCON2         equ	2079	;# 
   378     088E                     OSCCON          equ	2190	;# 
   379     0890                     OSCSTAT         equ	2192	;# 
   380     0891                     OSCEN           equ	2193	;# 
   381     0892                     OSCTUNE         equ	2194	;# 
   382     0893                     OSCFRQ          equ	2195	;# 
   383     090C                     FVRCON          equ	2316	;# 
   384     1E8F                     PPSLOCK         equ	7823	;# 
   385     1E90                     INTPPS          equ	7824	;# 
   386     1E91                     T0CKIPPS        equ	7825	;# 
   387     1E92                     T1CKIPPS        equ	7826	;# 
   388     1E93                     T1GPPS          equ	7827	;# 
   389     1E9C                     T2INPPS         equ	7836	;# 
   390     1EA1                     CCP1PPS         equ	7841	;# 
   391     1EA2                     CCP2PPS         equ	7842	;# 
   392     1EC3                     ADACTPPS        equ	7875	;# 
   393     1EC5                     SSP1CLKPPS      equ	7877	;# 
   394     1EC6                     SSP1DATPPS      equ	7878	;# 
   395     1EC7                     SSP1SSPPS       equ	7879	;# 
   396     1ECB                     RX1PPS          equ	7883	;# 
   397     1ECB                     RX1DTPPS        equ	7883	;# 
   398     1ECB                     RXPPS           equ	7883	;# 
   399     1ECC                     CK1PPS          equ	7884	;# 
   400     1ECC                     TX1CKPPS        equ	7884	;# 
   401     1ECC                     CKPPS           equ	7884	;# 
   402     1F10                     RA0PPS          equ	7952	;# 
   403     1F11                     RA1PPS          equ	7953	;# 
   404     1F12                     RA2PPS          equ	7954	;# 
   405     1F14                     RA4PPS          equ	7956	;# 
   406     1F15                     RA5PPS          equ	7957	;# 
   407     1F1C                     RB4PPS          equ	7964	;# 
   408     1F1D                     RB5PPS          equ	7965	;# 
   409     1F1E                     RB6PPS          equ	7966	;# 
   410     1F1F                     RB7PPS          equ	7967	;# 
   411     1F20                     RC0PPS          equ	7968	;# 
   412     1F21                     RC1PPS          equ	7969	;# 
   413     1F22                     RC2PPS          equ	7970	;# 
   414     1F23                     RC3PPS          equ	7971	;# 
   415     1F24                     RC4PPS          equ	7972	;# 
   416     1F25                     RC5PPS          equ	7973	;# 
   417     1F26                     RC6PPS          equ	7974	;# 
   418     1F27                     RC7PPS          equ	7975	;# 
   419     1F38                     ANSELA          equ	7992	;# 
   420     1F39                     WPUA            equ	7993	;# 
   421     1F3A                     ODCONA          equ	7994	;# 
   422     1F3B                     SLRCONA         equ	7995	;# 
   423     1F3C                     INLVLA          equ	7996	;# 
   424     1F3D                     IOCAP           equ	7997	;# 
   425     1F3E                     IOCAN           equ	7998	;# 
   426     1F3F                     IOCAF           equ	7999	;# 
   427     1F43                     ANSELB          equ	8003	;# 
   428     1F44                     WPUB            equ	8004	;# 
   429     1F45                     ODCONB          equ	8005	;# 
   430     1F46                     SLRCONB         equ	8006	;# 
   431     1F47                     INLVLB          equ	8007	;# 
   432     1F48                     IOCBP           equ	8008	;# 
   433     1F49                     IOCBN           equ	8009	;# 
   434     1F4A                     IOCBF           equ	8010	;# 
   435     1F4E                     ANSELC          equ	8014	;# 
   436     1F4F                     WPUC            equ	8015	;# 
   437     1F50                     ODCONC          equ	8016	;# 
   438     1F51                     SLRCONC         equ	8017	;# 
   439     1F52                     INLVLC          equ	8018	;# 
   440     1F53                     IOCCP           equ	8019	;# 
   441     1F54                     IOCCN           equ	8020	;# 
   442     1F55                     IOCCF           equ	8021	;# 
   443     1FE4                     STATUS_SHAD     equ	8164	;# 
   444     1FE5                     WREG_SHAD       equ	8165	;# 
   445     1FE6                     BSR_SHAD        equ	8166	;# 
   446     1FE7                     PCLATH_SHAD     equ	8167	;# 
   447     1FE8                     FSR0_SHAD       equ	8168	;# 
   448     1FE8                     FSR0L_SHAD      equ	8168	;# 
   449     1FE9                     FSR0H_SHAD      equ	8169	;# 
   450     1FEA                     FSR1L_SHAD      equ	8170	;# 
   451     1FEB                     FSR1H_SHAD      equ	8171	;# 
   452     1FED                     STKPTR          equ	8173	;# 
   453     1FEE                     TOSL            equ	8174	;# 
   454     1FEF                     TOSH            equ	8175	;# 
   455     0000                     INDF0           equ	0	;# 
   456     0001                     INDF1           equ	1	;# 
   457     0002                     PCL             equ	2	;# 
   458     0003                     STATUS          equ	3	;# 
   459     0004                     FSR0L           equ	4	;# 
   460     0005                     FSR0H           equ	5	;# 
   461     0006                     FSR1L           equ	6	;# 
   462     0007                     FSR1H           equ	7	;# 
   463     0008                     BSR             equ	8	;# 
   464     0009                     WREG            equ	9	;# 
   465     000A                     PCLATH          equ	10	;# 
   466     000B                     INTCON          equ	11	;# 
   467     000C                     PORTA           equ	12	;# 
   468     000D                     PORTB           equ	13	;# 
   469     000E                     PORTC           equ	14	;# 
   470     0012                     TRISA           equ	18	;# 
   471     0013                     TRISB           equ	19	;# 
   472     0014                     TRISC           equ	20	;# 
   473     0018                     LATA            equ	24	;# 
   474     0019                     LATB            equ	25	;# 
   475     001A                     LATC            equ	26	;# 
   476     009A                     CPCON           equ	154	;# 
   477     009B                     ADRES           equ	155	;# 
   478     009B                     ADRESL          equ	155	;# 
   479     009C                     ADRESH          equ	156	;# 
   480     009D                     ADCON0          equ	157	;# 
   481     009E                     ADCON1          equ	158	;# 
   482     009F                     ADACT           equ	159	;# 
   483     010C                     RB4I2C          equ	268	;# 
   484     010D                     RB6I2C          equ	269	;# 
   485     0119                     RC1REG          equ	281	;# 
   486     011A                     TX1REG          equ	282	;# 
   487     011B                     SP1BRG          equ	283	;# 
   488     011B                     SP1BRGL         equ	283	;# 
   489     011C                     SP1BRGH         equ	284	;# 
   490     011D                     RC1STA          equ	285	;# 
   491     011E                     TX1STA          equ	286	;# 
   492     011F                     BAUD1CON        equ	287	;# 
   493     018C                     SSP1BUF         equ	396	;# 
   494     018D                     SSP1ADD         equ	397	;# 
   495     018E                     SSP1MSK         equ	398	;# 
   496     018F                     SSP1STAT        equ	399	;# 
   497     0190                     SSP1CON1        equ	400	;# 
   498     0191                     SSP1CON2        equ	401	;# 
   499     0192                     SSP1CON3        equ	402	;# 
   500     020C                     TMR1            equ	524	;# 
   501     020C                     TMR1L           equ	524	;# 
   502     020D                     TMR1H           equ	525	;# 
   503     020E                     T1CON           equ	526	;# 
   504     020E                     TMR1CON         equ	526	;# 
   505     020F                     T1GCON          equ	527	;# 
   506     020F                     TMR1GCON        equ	527	;# 
   507     0210                     T1GATE          equ	528	;# 
   508     0210                     TMR1GATE        equ	528	;# 
   509     0211                     T1CLK           equ	529	;# 
   510     0211                     TMR1CLK         equ	529	;# 
   511     0211                     PR1             equ	529	;# 
   512     028C                     T2TMR           equ	652	;# 
   513     028C                     TMR2            equ	652	;# 
   514     028D                     T2PR            equ	653	;# 
   515     028D                     PR2             equ	653	;# 
   516     028E                     T2CON           equ	654	;# 
   517     028F                     T2HLT           equ	655	;# 
   518     0290                     T2CLKCON        equ	656	;# 
   519     0291                     T2RST           equ	657	;# 
   520     030C                     CCPR1           equ	780	;# 
   521     030C                     CCPR1L          equ	780	;# 
   522     030D                     CCPR1H          equ	781	;# 
   523     030E                     CCP1CON         equ	782	;# 
   524     030F                     CCP1CAP         equ	783	;# 
   525     0310                     CCPR2           equ	784	;# 
   526     0310                     CCPR2L          equ	784	;# 
   527     0311                     CCPR2H          equ	785	;# 
   528     0312                     CCP2CON         equ	786	;# 
   529     0313                     CCP2CAP         equ	787	;# 
   530     0314                     PWM3DC          equ	788	;# 
   531     0314                     PWM3DCL         equ	788	;# 
   532     0315                     PWM3DCH         equ	789	;# 
   533     0316                     PWM3CON         equ	790	;# 
   534     0318                     PWM4DC          equ	792	;# 
   535     0318                     PWM4DCL         equ	792	;# 
   536     0319                     PWM4DCH         equ	793	;# 
   537     031A                     PWM4CON         equ	794	;# 
   538     059C                     TMR0L           equ	1436	;# 
   539     059C                     TMR0            equ	1436	;# 
   540     059D                     TMR0H           equ	1437	;# 
   541     059D                     PR0             equ	1437	;# 
   542     059E                     T0CON0          equ	1438	;# 
   543     059F                     T0CON1          equ	1439	;# 
   544     070C                     PIR0            equ	1804	;# 
   545     070D                     PIR1            equ	1805	;# 
   546     070E                     PIR2            equ	1806	;# 
   547     0716                     PIE0            equ	1814	;# 
   548     0717                     PIE1            equ	1815	;# 
   549     0718                     PIE2            equ	1816	;# 
   550     080C                     WDTCON          equ	2060	;# 
   551     0811                     BORCON          equ	2065	;# 
   552     0813                     PCON0           equ	2067	;# 
   553     0814                     PCON1           equ	2068	;# 
   554     081A                     NVMADR          equ	2074	;# 
   555     081A                     NVMADRL         equ	2074	;# 
   556     081B                     NVMADRH         equ	2075	;# 
   557     081C                     NVMDAT          equ	2076	;# 
   558     081C                     NVMDATL         equ	2076	;# 
   559     081D                     NVMDATH         equ	2077	;# 
   560     081E                     NVMCON1         equ	2078	;# 
   561     081F                     NVMCON2         equ	2079	;# 
   562     088E                     OSCCON          equ	2190	;# 
   563     0890                     OSCSTAT         equ	2192	;# 
   564     0891                     OSCEN           equ	2193	;# 
   565     0892                     OSCTUNE         equ	2194	;# 
   566     0893                     OSCFRQ          equ	2195	;# 
   567     090C                     FVRCON          equ	2316	;# 
   568     1E8F                     PPSLOCK         equ	7823	;# 
   569     1E90                     INTPPS          equ	7824	;# 
   570     1E91                     T0CKIPPS        equ	7825	;# 
   571     1E92                     T1CKIPPS        equ	7826	;# 
   572     1E93                     T1GPPS          equ	7827	;# 
   573     1E9C                     T2INPPS         equ	7836	;# 
   574     1EA1                     CCP1PPS         equ	7841	;# 
   575     1EA2                     CCP2PPS         equ	7842	;# 
   576     1EC3                     ADACTPPS        equ	7875	;# 
   577     1EC5                     SSP1CLKPPS      equ	7877	;# 
   578     1EC6                     SSP1DATPPS      equ	7878	;# 
   579     1EC7                     SSP1SSPPS       equ	7879	;# 
   580     1ECB                     RX1PPS          equ	7883	;# 
   581     1ECB                     RX1DTPPS        equ	7883	;# 
   582     1ECB                     RXPPS           equ	7883	;# 
   583     1ECC                     CK1PPS          equ	7884	;# 
   584     1ECC                     TX1CKPPS        equ	7884	;# 
   585     1ECC                     CKPPS           equ	7884	;# 
   586     1F10                     RA0PPS          equ	7952	;# 
   587     1F11                     RA1PPS          equ	7953	;# 
   588     1F12                     RA2PPS          equ	7954	;# 
   589     1F14                     RA4PPS          equ	7956	;# 
   590     1F15                     RA5PPS          equ	7957	;# 
   591     1F1C                     RB4PPS          equ	7964	;# 
   592     1F1D                     RB5PPS          equ	7965	;# 
   593     1F1E                     RB6PPS          equ	7966	;# 
   594     1F1F                     RB7PPS          equ	7967	;# 
   595     1F20                     RC0PPS          equ	7968	;# 
   596     1F21                     RC1PPS          equ	7969	;# 
   597     1F22                     RC2PPS          equ	7970	;# 
   598     1F23                     RC3PPS          equ	7971	;# 
   599     1F24                     RC4PPS          equ	7972	;# 
   600     1F25                     RC5PPS          equ	7973	;# 
   601     1F26                     RC6PPS          equ	7974	;# 
   602     1F27                     RC7PPS          equ	7975	;# 
   603     1F38                     ANSELA          equ	7992	;# 
   604     1F39                     WPUA            equ	7993	;# 
   605     1F3A                     ODCONA          equ	7994	;# 
   606     1F3B                     SLRCONA         equ	7995	;# 
   607     1F3C                     INLVLA          equ	7996	;# 
   608     1F3D                     IOCAP           equ	7997	;# 
   609     1F3E                     IOCAN           equ	7998	;# 
   610     1F3F                     IOCAF           equ	7999	;# 
   611     1F43                     ANSELB          equ	8003	;# 
   612     1F44                     WPUB            equ	8004	;# 
   613     1F45                     ODCONB          equ	8005	;# 
   614     1F46                     SLRCONB         equ	8006	;# 
   615     1F47                     INLVLB          equ	8007	;# 
   616     1F48                     IOCBP           equ	8008	;# 
   617     1F49                     IOCBN           equ	8009	;# 
   618     1F4A                     IOCBF           equ	8010	;# 
   619     1F4E                     ANSELC          equ	8014	;# 
   620     1F4F                     WPUC            equ	8015	;# 
   621     1F50                     ODCONC          equ	8016	;# 
   622     1F51                     SLRCONC         equ	8017	;# 
   623     1F52                     INLVLC          equ	8018	;# 
   624     1F53                     IOCCP           equ	8019	;# 
   625     1F54                     IOCCN           equ	8020	;# 
   626     1F55                     IOCCF           equ	8021	;# 
   627     1FE4                     STATUS_SHAD     equ	8164	;# 
   628     1FE5                     WREG_SHAD       equ	8165	;# 
   629     1FE6                     BSR_SHAD        equ	8166	;# 
   630     1FE7                     PCLATH_SHAD     equ	8167	;# 
   631     1FE8                     FSR0_SHAD       equ	8168	;# 
   632     1FE8                     FSR0L_SHAD      equ	8168	;# 
   633     1FE9                     FSR0H_SHAD      equ	8169	;# 
   634     1FEA                     FSR1L_SHAD      equ	8170	;# 
   635     1FEB                     FSR1H_SHAD      equ	8171	;# 
   636     1FED                     STKPTR          equ	8173	;# 
   637     1FEE                     TOSL            equ	8174	;# 
   638     1FEF                     TOSH            equ	8175	;# 
   639     0000                     INDF0           equ	0	;# 
   640     0001                     INDF1           equ	1	;# 
   641     0002                     PCL             equ	2	;# 
   642     0003                     STATUS          equ	3	;# 
   643     0004                     FSR0L           equ	4	;# 
   644     0005                     FSR0H           equ	5	;# 
   645     0006                     FSR1L           equ	6	;# 
   646     0007                     FSR1H           equ	7	;# 
   647     0008                     BSR             equ	8	;# 
   648     0009                     WREG            equ	9	;# 
   649     000A                     PCLATH          equ	10	;# 
   650     000B                     INTCON          equ	11	;# 
   651     000C                     PORTA           equ	12	;# 
   652     000D                     PORTB           equ	13	;# 
   653     000E                     PORTC           equ	14	;# 
   654     0012                     TRISA           equ	18	;# 
   655     0013                     TRISB           equ	19	;# 
   656     0014                     TRISC           equ	20	;# 
   657     0018                     LATA            equ	24	;# 
   658     0019                     LATB            equ	25	;# 
   659     001A                     LATC            equ	26	;# 
   660     009A                     CPCON           equ	154	;# 
   661     009B                     ADRES           equ	155	;# 
   662     009B                     ADRESL          equ	155	;# 
   663     009C                     ADRESH          equ	156	;# 
   664     009D                     ADCON0          equ	157	;# 
   665     009E                     ADCON1          equ	158	;# 
   666     009F                     ADACT           equ	159	;# 
   667     010C                     RB4I2C          equ	268	;# 
   668     010D                     RB6I2C          equ	269	;# 
   669     0119                     RC1REG          equ	281	;# 
   670     011A                     TX1REG          equ	282	;# 
   671     011B                     SP1BRG          equ	283	;# 
   672     011B                     SP1BRGL         equ	283	;# 
   673     011C                     SP1BRGH         equ	284	;# 
   674     011D                     RC1STA          equ	285	;# 
   675     011E                     TX1STA          equ	286	;# 
   676     011F                     BAUD1CON        equ	287	;# 
   677     018C                     SSP1BUF         equ	396	;# 
   678     018D                     SSP1ADD         equ	397	;# 
   679     018E                     SSP1MSK         equ	398	;# 
   680     018F                     SSP1STAT        equ	399	;# 
   681     0190                     SSP1CON1        equ	400	;# 
   682     0191                     SSP1CON2        equ	401	;# 
   683     0192                     SSP1CON3        equ	402	;# 
   684     020C                     TMR1            equ	524	;# 
   685     020C                     TMR1L           equ	524	;# 
   686     020D                     TMR1H           equ	525	;# 
   687     020E                     T1CON           equ	526	;# 
   688     020E                     TMR1CON         equ	526	;# 
   689     020F                     T1GCON          equ	527	;# 
   690     020F                     TMR1GCON        equ	527	;# 
   691     0210                     T1GATE          equ	528	;# 
   692     0210                     TMR1GATE        equ	528	;# 
   693     0211                     T1CLK           equ	529	;# 
   694     0211                     TMR1CLK         equ	529	;# 
   695     0211                     PR1             equ	529	;# 
   696     028C                     T2TMR           equ	652	;# 
   697     028C                     TMR2            equ	652	;# 
   698     028D                     T2PR            equ	653	;# 
   699     028D                     PR2             equ	653	;# 
   700     028E                     T2CON           equ	654	;# 
   701     028F                     T2HLT           equ	655	;# 
   702     0290                     T2CLKCON        equ	656	;# 
   703     0291                     T2RST           equ	657	;# 
   704     030C                     CCPR1           equ	780	;# 
   705     030C                     CCPR1L          equ	780	;# 
   706     030D                     CCPR1H          equ	781	;# 
   707     030E                     CCP1CON         equ	782	;# 
   708     030F                     CCP1CAP         equ	783	;# 
   709     0310                     CCPR2           equ	784	;# 
   710     0310                     CCPR2L          equ	784	;# 
   711     0311                     CCPR2H          equ	785	;# 
   712     0312                     CCP2CON         equ	786	;# 
   713     0313                     CCP2CAP         equ	787	;# 
   714     0314                     PWM3DC          equ	788	;# 
   715     0314                     PWM3DCL         equ	788	;# 
   716     0315                     PWM3DCH         equ	789	;# 
   717     0316                     PWM3CON         equ	790	;# 
   718     0318                     PWM4DC          equ	792	;# 
   719     0318                     PWM4DCL         equ	792	;# 
   720     0319                     PWM4DCH         equ	793	;# 
   721     031A                     PWM4CON         equ	794	;# 
   722     059C                     TMR0L           equ	1436	;# 
   723     059C                     TMR0            equ	1436	;# 
   724     059D                     TMR0H           equ	1437	;# 
   725     059D                     PR0             equ	1437	;# 
   726     059E                     T0CON0          equ	1438	;# 
   727     059F                     T0CON1          equ	1439	;# 
   728     070C                     PIR0            equ	1804	;# 
   729     070D                     PIR1            equ	1805	;# 
   730     070E                     PIR2            equ	1806	;# 
   731     0716                     PIE0            equ	1814	;# 
   732     0717                     PIE1            equ	1815	;# 
   733     0718                     PIE2            equ	1816	;# 
   734     080C                     WDTCON          equ	2060	;# 
   735     0811                     BORCON          equ	2065	;# 
   736     0813                     PCON0           equ	2067	;# 
   737     0814                     PCON1           equ	2068	;# 
   738     081A                     NVMADR          equ	2074	;# 
   739     081A                     NVMADRL         equ	2074	;# 
   740     081B                     NVMADRH         equ	2075	;# 
   741     081C                     NVMDAT          equ	2076	;# 
   742     081C                     NVMDATL         equ	2076	;# 
   743     081D                     NVMDATH         equ	2077	;# 
   744     081E                     NVMCON1         equ	2078	;# 
   745     081F                     NVMCON2         equ	2079	;# 
   746     088E                     OSCCON          equ	2190	;# 
   747     0890                     OSCSTAT         equ	2192	;# 
   748     0891                     OSCEN           equ	2193	;# 
   749     0892                     OSCTUNE         equ	2194	;# 
   750     0893                     OSCFRQ          equ	2195	;# 
   751     090C                     FVRCON          equ	2316	;# 
   752     1E8F                     PPSLOCK         equ	7823	;# 
   753     1E90                     INTPPS          equ	7824	;# 
   754     1E91                     T0CKIPPS        equ	7825	;# 
   755     1E92                     T1CKIPPS        equ	7826	;# 
   756     1E93                     T1GPPS          equ	7827	;# 
   757     1E9C                     T2INPPS         equ	7836	;# 
   758     1EA1                     CCP1PPS         equ	7841	;# 
   759     1EA2                     CCP2PPS         equ	7842	;# 
   760     1EC3                     ADACTPPS        equ	7875	;# 
   761     1EC5                     SSP1CLKPPS      equ	7877	;# 
   762     1EC6                     SSP1DATPPS      equ	7878	;# 
   763     1EC7                     SSP1SSPPS       equ	7879	;# 
   764     1ECB                     RX1PPS          equ	7883	;# 
   765     1ECB                     RX1DTPPS        equ	7883	;# 
   766     1ECB                     RXPPS           equ	7883	;# 
   767     1ECC                     CK1PPS          equ	7884	;# 
   768     1ECC                     TX1CKPPS        equ	7884	;# 
   769     1ECC                     CKPPS           equ	7884	;# 
   770     1F10                     RA0PPS          equ	7952	;# 
   771     1F11                     RA1PPS          equ	7953	;# 
   772     1F12                     RA2PPS          equ	7954	;# 
   773     1F14                     RA4PPS          equ	7956	;# 
   774     1F15                     RA5PPS          equ	7957	;# 
   775     1F1C                     RB4PPS          equ	7964	;# 
   776     1F1D                     RB5PPS          equ	7965	;# 
   777     1F1E                     RB6PPS          equ	7966	;# 
   778     1F1F                     RB7PPS          equ	7967	;# 
   779     1F20                     RC0PPS          equ	7968	;# 
   780     1F21                     RC1PPS          equ	7969	;# 
   781     1F22                     RC2PPS          equ	7970	;# 
   782     1F23                     RC3PPS          equ	7971	;# 
   783     1F24                     RC4PPS          equ	7972	;# 
   784     1F25                     RC5PPS          equ	7973	;# 
   785     1F26                     RC6PPS          equ	7974	;# 
   786     1F27                     RC7PPS          equ	7975	;# 
   787     1F38                     ANSELA          equ	7992	;# 
   788     1F39                     WPUA            equ	7993	;# 
   789     1F3A                     ODCONA          equ	7994	;# 
   790     1F3B                     SLRCONA         equ	7995	;# 
   791     1F3C                     INLVLA          equ	7996	;# 
   792     1F3D                     IOCAP           equ	7997	;# 
   793     1F3E                     IOCAN           equ	7998	;# 
   794     1F3F                     IOCAF           equ	7999	;# 
   795     1F43                     ANSELB          equ	8003	;# 
   796     1F44                     WPUB            equ	8004	;# 
   797     1F45                     ODCONB          equ	8005	;# 
   798     1F46                     SLRCONB         equ	8006	;# 
   799     1F47                     INLVLB          equ	8007	;# 
   800     1F48                     IOCBP           equ	8008	;# 
   801     1F49                     IOCBN           equ	8009	;# 
   802     1F4A                     IOCBF           equ	8010	;# 
   803     1F4E                     ANSELC          equ	8014	;# 
   804     1F4F                     WPUC            equ	8015	;# 
   805     1F50                     ODCONC          equ	8016	;# 
   806     1F51                     SLRCONC         equ	8017	;# 
   807     1F52                     INLVLC          equ	8018	;# 
   808     1F53                     IOCCP           equ	8019	;# 
   809     1F54                     IOCCN           equ	8020	;# 
   810     1F55                     IOCCF           equ	8021	;# 
   811     1FE4                     STATUS_SHAD     equ	8164	;# 
   812     1FE5                     WREG_SHAD       equ	8165	;# 
   813     1FE6                     BSR_SHAD        equ	8166	;# 
   814     1FE7                     PCLATH_SHAD     equ	8167	;# 
   815     1FE8                     FSR0_SHAD       equ	8168	;# 
   816     1FE8                     FSR0L_SHAD      equ	8168	;# 
   817     1FE9                     FSR0H_SHAD      equ	8169	;# 
   818     1FEA                     FSR1L_SHAD      equ	8170	;# 
   819     1FEB                     FSR1H_SHAD      equ	8171	;# 
   820     1FED                     STKPTR          equ	8173	;# 
   821     1FEE                     TOSL            equ	8174	;# 
   822     1FEF                     TOSH            equ	8175	;# 
   823     0000                     INDF0           equ	0	;# 
   824     0001                     INDF1           equ	1	;# 
   825     0002                     PCL             equ	2	;# 
   826     0003                     STATUS          equ	3	;# 
   827     0004                     FSR0L           equ	4	;# 
   828     0005                     FSR0H           equ	5	;# 
   829     0006                     FSR1L           equ	6	;# 
   830     0007                     FSR1H           equ	7	;# 
   831     0008                     BSR             equ	8	;# 
   832     0009                     WREG            equ	9	;# 
   833     000A                     PCLATH          equ	10	;# 
   834     000B                     INTCON          equ	11	;# 
   835     000C                     PORTA           equ	12	;# 
   836     000D                     PORTB           equ	13	;# 
   837     000E                     PORTC           equ	14	;# 
   838     0012                     TRISA           equ	18	;# 
   839     0013                     TRISB           equ	19	;# 
   840     0014                     TRISC           equ	20	;# 
   841     0018                     LATA            equ	24	;# 
   842     0019                     LATB            equ	25	;# 
   843     001A                     LATC            equ	26	;# 
   844     009A                     CPCON           equ	154	;# 
   845     009B                     ADRES           equ	155	;# 
   846     009B                     ADRESL          equ	155	;# 
   847     009C                     ADRESH          equ	156	;# 
   848     009D                     ADCON0          equ	157	;# 
   849     009E                     ADCON1          equ	158	;# 
   850     009F                     ADACT           equ	159	;# 
   851     010C                     RB4I2C          equ	268	;# 
   852     010D                     RB6I2C          equ	269	;# 
   853     0119                     RC1REG          equ	281	;# 
   854     011A                     TX1REG          equ	282	;# 
   855     011B                     SP1BRG          equ	283	;# 
   856     011B                     SP1BRGL         equ	283	;# 
   857     011C                     SP1BRGH         equ	284	;# 
   858     011D                     RC1STA          equ	285	;# 
   859     011E                     TX1STA          equ	286	;# 
   860     011F                     BAUD1CON        equ	287	;# 
   861     018C                     SSP1BUF         equ	396	;# 
   862     018D                     SSP1ADD         equ	397	;# 
   863     018E                     SSP1MSK         equ	398	;# 
   864     018F                     SSP1STAT        equ	399	;# 
   865     0190                     SSP1CON1        equ	400	;# 
   866     0191                     SSP1CON2        equ	401	;# 
   867     0192                     SSP1CON3        equ	402	;# 
   868     020C                     TMR1            equ	524	;# 
   869     020C                     TMR1L           equ	524	;# 
   870     020D                     TMR1H           equ	525	;# 
   871     020E                     T1CON           equ	526	;# 
   872     020E                     TMR1CON         equ	526	;# 
   873     020F                     T1GCON          equ	527	;# 
   874     020F                     TMR1GCON        equ	527	;# 
   875     0210                     T1GATE          equ	528	;# 
   876     0210                     TMR1GATE        equ	528	;# 
   877     0211                     T1CLK           equ	529	;# 
   878     0211                     TMR1CLK         equ	529	;# 
   879     0211                     PR1             equ	529	;# 
   880     028C                     T2TMR           equ	652	;# 
   881     028C                     TMR2            equ	652	;# 
   882     028D                     T2PR            equ	653	;# 
   883     028D                     PR2             equ	653	;# 
   884     028E                     T2CON           equ	654	;# 
   885     028F                     T2HLT           equ	655	;# 
   886     0290                     T2CLKCON        equ	656	;# 
   887     0291                     T2RST           equ	657	;# 
   888     030C                     CCPR1           equ	780	;# 
   889     030C                     CCPR1L          equ	780	;# 
   890     030D                     CCPR1H          equ	781	;# 
   891     030E                     CCP1CON         equ	782	;# 
   892     030F                     CCP1CAP         equ	783	;# 
   893     0310                     CCPR2           equ	784	;# 
   894     0310                     CCPR2L          equ	784	;# 
   895     0311                     CCPR2H          equ	785	;# 
   896     0312                     CCP2CON         equ	786	;# 
   897     0313                     CCP2CAP         equ	787	;# 
   898     0314                     PWM3DC          equ	788	;# 
   899     0314                     PWM3DCL         equ	788	;# 
   900     0315                     PWM3DCH         equ	789	;# 
   901     0316                     PWM3CON         equ	790	;# 
   902     0318                     PWM4DC          equ	792	;# 
   903     0318                     PWM4DCL         equ	792	;# 
   904     0319                     PWM4DCH         equ	793	;# 
   905     031A                     PWM4CON         equ	794	;# 
   906     059C                     TMR0L           equ	1436	;# 
   907     059C                     TMR0            equ	1436	;# 
   908     059D                     TMR0H           equ	1437	;# 
   909     059D                     PR0             equ	1437	;# 
   910     059E                     T0CON0          equ	1438	;# 
   911     059F                     T0CON1          equ	1439	;# 
   912     070C                     PIR0            equ	1804	;# 
   913     070D                     PIR1            equ	1805	;# 
   914     070E                     PIR2            equ	1806	;# 
   915     0716                     PIE0            equ	1814	;# 
   916     0717                     PIE1            equ	1815	;# 
   917     0718                     PIE2            equ	1816	;# 
   918     080C                     WDTCON          equ	2060	;# 
   919     0811                     BORCON          equ	2065	;# 
   920     0813                     PCON0           equ	2067	;# 
   921     0814                     PCON1           equ	2068	;# 
   922     081A                     NVMADR          equ	2074	;# 
   923     081A                     NVMADRL         equ	2074	;# 
   924     081B                     NVMADRH         equ	2075	;# 
   925     081C                     NVMDAT          equ	2076	;# 
   926     081C                     NVMDATL         equ	2076	;# 
   927     081D                     NVMDATH         equ	2077	;# 
   928     081E                     NVMCON1         equ	2078	;# 
   929     081F                     NVMCON2         equ	2079	;# 
   930     088E                     OSCCON          equ	2190	;# 
   931     0890                     OSCSTAT         equ	2192	;# 
   932     0891                     OSCEN           equ	2193	;# 
   933     0892                     OSCTUNE         equ	2194	;# 
   934     0893                     OSCFRQ          equ	2195	;# 
   935     090C                     FVRCON          equ	2316	;# 
   936     1E8F                     PPSLOCK         equ	7823	;# 
   937     1E90                     INTPPS          equ	7824	;# 
   938     1E91                     T0CKIPPS        equ	7825	;# 
   939     1E92                     T1CKIPPS        equ	7826	;# 
   940     1E93                     T1GPPS          equ	7827	;# 
   941     1E9C                     T2INPPS         equ	7836	;# 
   942     1EA1                     CCP1PPS         equ	7841	;# 
   943     1EA2                     CCP2PPS         equ	7842	;# 
   944     1EC3                     ADACTPPS        equ	7875	;# 
   945     1EC5                     SSP1CLKPPS      equ	7877	;# 
   946     1EC6                     SSP1DATPPS      equ	7878	;# 
   947     1EC7                     SSP1SSPPS       equ	7879	;# 
   948     1ECB                     RX1PPS          equ	7883	;# 
   949     1ECB                     RX1DTPPS        equ	7883	;# 
   950     1ECB                     RXPPS           equ	7883	;# 
   951     1ECC                     CK1PPS          equ	7884	;# 
   952     1ECC                     TX1CKPPS        equ	7884	;# 
   953     1ECC                     CKPPS           equ	7884	;# 
   954     1F10                     RA0PPS          equ	7952	;# 
   955     1F11                     RA1PPS          equ	7953	;# 
   956     1F12                     RA2PPS          equ	7954	;# 
   957     1F14                     RA4PPS          equ	7956	;# 
   958     1F15                     RA5PPS          equ	7957	;# 
   959     1F1C                     RB4PPS          equ	7964	;# 
   960     1F1D                     RB5PPS          equ	7965	;# 
   961     1F1E                     RB6PPS          equ	7966	;# 
   962     1F1F                     RB7PPS          equ	7967	;# 
   963     1F20                     RC0PPS          equ	7968	;# 
   964     1F21                     RC1PPS          equ	7969	;# 
   965     1F22                     RC2PPS          equ	7970	;# 
   966     1F23                     RC3PPS          equ	7971	;# 
   967     1F24                     RC4PPS          equ	7972	;# 
   968     1F25                     RC5PPS          equ	7973	;# 
   969     1F26                     RC6PPS          equ	7974	;# 
   970     1F27                     RC7PPS          equ	7975	;# 
   971     1F38                     ANSELA          equ	7992	;# 
   972     1F39                     WPUA            equ	7993	;# 
   973     1F3A                     ODCONA          equ	7994	;# 
   974     1F3B                     SLRCONA         equ	7995	;# 
   975     1F3C                     INLVLA          equ	7996	;# 
   976     1F3D                     IOCAP           equ	7997	;# 
   977     1F3E                     IOCAN           equ	7998	;# 
   978     1F3F                     IOCAF           equ	7999	;# 
   979     1F43                     ANSELB          equ	8003	;# 
   980     1F44                     WPUB            equ	8004	;# 
   981     1F45                     ODCONB          equ	8005	;# 
   982     1F46                     SLRCONB         equ	8006	;# 
   983     1F47                     INLVLB          equ	8007	;# 
   984     1F48                     IOCBP           equ	8008	;# 
   985     1F49                     IOCBN           equ	8009	;# 
   986     1F4A                     IOCBF           equ	8010	;# 
   987     1F4E                     ANSELC          equ	8014	;# 
   988     1F4F                     WPUC            equ	8015	;# 
   989     1F50                     ODCONC          equ	8016	;# 
   990     1F51                     SLRCONC         equ	8017	;# 
   991     1F52                     INLVLC          equ	8018	;# 
   992     1F53                     IOCCP           equ	8019	;# 
   993     1F54                     IOCCN           equ	8020	;# 
   994     1F55                     IOCCF           equ	8021	;# 
   995     1FE4                     STATUS_SHAD     equ	8164	;# 
   996     1FE5                     WREG_SHAD       equ	8165	;# 
   997     1FE6                     BSR_SHAD        equ	8166	;# 
   998     1FE7                     PCLATH_SHAD     equ	8167	;# 
   999     1FE8                     FSR0_SHAD       equ	8168	;# 
  1000     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1001     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1002     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1003     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1004     1FED                     STKPTR          equ	8173	;# 
  1005     1FEE                     TOSL            equ	8174	;# 
  1006     1FEF                     TOSH            equ	8175	;# 
  1007     0000                     INDF0           equ	0	;# 
  1008     0001                     INDF1           equ	1	;# 
  1009     0002                     PCL             equ	2	;# 
  1010     0003                     STATUS          equ	3	;# 
  1011     0004                     FSR0L           equ	4	;# 
  1012     0005                     FSR0H           equ	5	;# 
  1013     0006                     FSR1L           equ	6	;# 
  1014     0007                     FSR1H           equ	7	;# 
  1015     0008                     BSR             equ	8	;# 
  1016     0009                     WREG            equ	9	;# 
  1017     000A                     PCLATH          equ	10	;# 
  1018     000B                     INTCON          equ	11	;# 
  1019     000C                     PORTA           equ	12	;# 
  1020     000D                     PORTB           equ	13	;# 
  1021     000E                     PORTC           equ	14	;# 
  1022     0012                     TRISA           equ	18	;# 
  1023     0013                     TRISB           equ	19	;# 
  1024     0014                     TRISC           equ	20	;# 
  1025     0018                     LATA            equ	24	;# 
  1026     0019                     LATB            equ	25	;# 
  1027     001A                     LATC            equ	26	;# 
  1028     009A                     CPCON           equ	154	;# 
  1029     009B                     ADRES           equ	155	;# 
  1030     009B                     ADRESL          equ	155	;# 
  1031     009C                     ADRESH          equ	156	;# 
  1032     009D                     ADCON0          equ	157	;# 
  1033     009E                     ADCON1          equ	158	;# 
  1034     009F                     ADACT           equ	159	;# 
  1035     010C                     RB4I2C          equ	268	;# 
  1036     010D                     RB6I2C          equ	269	;# 
  1037     0119                     RC1REG          equ	281	;# 
  1038     011A                     TX1REG          equ	282	;# 
  1039     011B                     SP1BRG          equ	283	;# 
  1040     011B                     SP1BRGL         equ	283	;# 
  1041     011C                     SP1BRGH         equ	284	;# 
  1042     011D                     RC1STA          equ	285	;# 
  1043     011E                     TX1STA          equ	286	;# 
  1044     011F                     BAUD1CON        equ	287	;# 
  1045     018C                     SSP1BUF         equ	396	;# 
  1046     018D                     SSP1ADD         equ	397	;# 
  1047     018E                     SSP1MSK         equ	398	;# 
  1048     018F                     SSP1STAT        equ	399	;# 
  1049     0190                     SSP1CON1        equ	400	;# 
  1050     0191                     SSP1CON2        equ	401	;# 
  1051     0192                     SSP1CON3        equ	402	;# 
  1052     020C                     TMR1            equ	524	;# 
  1053     020C                     TMR1L           equ	524	;# 
  1054     020D                     TMR1H           equ	525	;# 
  1055     020E                     T1CON           equ	526	;# 
  1056     020E                     TMR1CON         equ	526	;# 
  1057     020F                     T1GCON          equ	527	;# 
  1058     020F                     TMR1GCON        equ	527	;# 
  1059     0210                     T1GATE          equ	528	;# 
  1060     0210                     TMR1GATE        equ	528	;# 
  1061     0211                     T1CLK           equ	529	;# 
  1062     0211                     TMR1CLK         equ	529	;# 
  1063     0211                     PR1             equ	529	;# 
  1064     028C                     T2TMR           equ	652	;# 
  1065     028C                     TMR2            equ	652	;# 
  1066     028D                     T2PR            equ	653	;# 
  1067     028D                     PR2             equ	653	;# 
  1068     028E                     T2CON           equ	654	;# 
  1069     028F                     T2HLT           equ	655	;# 
  1070     0290                     T2CLKCON        equ	656	;# 
  1071     0291                     T2RST           equ	657	;# 
  1072     030C                     CCPR1           equ	780	;# 
  1073     030C                     CCPR1L          equ	780	;# 
  1074     030D                     CCPR1H          equ	781	;# 
  1075     030E                     CCP1CON         equ	782	;# 
  1076     030F                     CCP1CAP         equ	783	;# 
  1077     0310                     CCPR2           equ	784	;# 
  1078     0310                     CCPR2L          equ	784	;# 
  1079     0311                     CCPR2H          equ	785	;# 
  1080     0312                     CCP2CON         equ	786	;# 
  1081     0313                     CCP2CAP         equ	787	;# 
  1082     0314                     PWM3DC          equ	788	;# 
  1083     0314                     PWM3DCL         equ	788	;# 
  1084     0315                     PWM3DCH         equ	789	;# 
  1085     0316                     PWM3CON         equ	790	;# 
  1086     0318                     PWM4DC          equ	792	;# 
  1087     0318                     PWM4DCL         equ	792	;# 
  1088     0319                     PWM4DCH         equ	793	;# 
  1089     031A                     PWM4CON         equ	794	;# 
  1090     059C                     TMR0L           equ	1436	;# 
  1091     059C                     TMR0            equ	1436	;# 
  1092     059D                     TMR0H           equ	1437	;# 
  1093     059D                     PR0             equ	1437	;# 
  1094     059E                     T0CON0          equ	1438	;# 
  1095     059F                     T0CON1          equ	1439	;# 
  1096     070C                     PIR0            equ	1804	;# 
  1097     070D                     PIR1            equ	1805	;# 
  1098     070E                     PIR2            equ	1806	;# 
  1099     0716                     PIE0            equ	1814	;# 
  1100     0717                     PIE1            equ	1815	;# 
  1101     0718                     PIE2            equ	1816	;# 
  1102     080C                     WDTCON          equ	2060	;# 
  1103     0811                     BORCON          equ	2065	;# 
  1104     0813                     PCON0           equ	2067	;# 
  1105     0814                     PCON1           equ	2068	;# 
  1106     081A                     NVMADR          equ	2074	;# 
  1107     081A                     NVMADRL         equ	2074	;# 
  1108     081B                     NVMADRH         equ	2075	;# 
  1109     081C                     NVMDAT          equ	2076	;# 
  1110     081C                     NVMDATL         equ	2076	;# 
  1111     081D                     NVMDATH         equ	2077	;# 
  1112     081E                     NVMCON1         equ	2078	;# 
  1113     081F                     NVMCON2         equ	2079	;# 
  1114     088E                     OSCCON          equ	2190	;# 
  1115     0890                     OSCSTAT         equ	2192	;# 
  1116     0891                     OSCEN           equ	2193	;# 
  1117     0892                     OSCTUNE         equ	2194	;# 
  1118     0893                     OSCFRQ          equ	2195	;# 
  1119     090C                     FVRCON          equ	2316	;# 
  1120     1E8F                     PPSLOCK         equ	7823	;# 
  1121     1E90                     INTPPS          equ	7824	;# 
  1122     1E91                     T0CKIPPS        equ	7825	;# 
  1123     1E92                     T1CKIPPS        equ	7826	;# 
  1124     1E93                     T1GPPS          equ	7827	;# 
  1125     1E9C                     T2INPPS         equ	7836	;# 
  1126     1EA1                     CCP1PPS         equ	7841	;# 
  1127     1EA2                     CCP2PPS         equ	7842	;# 
  1128     1EC3                     ADACTPPS        equ	7875	;# 
  1129     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1130     1EC6                     SSP1DATPPS      equ	7878	;# 
  1131     1EC7                     SSP1SSPPS       equ	7879	;# 
  1132     1ECB                     RX1PPS          equ	7883	;# 
  1133     1ECB                     RX1DTPPS        equ	7883	;# 
  1134     1ECB                     RXPPS           equ	7883	;# 
  1135     1ECC                     CK1PPS          equ	7884	;# 
  1136     1ECC                     TX1CKPPS        equ	7884	;# 
  1137     1ECC                     CKPPS           equ	7884	;# 
  1138     1F10                     RA0PPS          equ	7952	;# 
  1139     1F11                     RA1PPS          equ	7953	;# 
  1140     1F12                     RA2PPS          equ	7954	;# 
  1141     1F14                     RA4PPS          equ	7956	;# 
  1142     1F15                     RA5PPS          equ	7957	;# 
  1143     1F1C                     RB4PPS          equ	7964	;# 
  1144     1F1D                     RB5PPS          equ	7965	;# 
  1145     1F1E                     RB6PPS          equ	7966	;# 
  1146     1F1F                     RB7PPS          equ	7967	;# 
  1147     1F20                     RC0PPS          equ	7968	;# 
  1148     1F21                     RC1PPS          equ	7969	;# 
  1149     1F22                     RC2PPS          equ	7970	;# 
  1150     1F23                     RC3PPS          equ	7971	;# 
  1151     1F24                     RC4PPS          equ	7972	;# 
  1152     1F25                     RC5PPS          equ	7973	;# 
  1153     1F26                     RC6PPS          equ	7974	;# 
  1154     1F27                     RC7PPS          equ	7975	;# 
  1155     1F38                     ANSELA          equ	7992	;# 
  1156     1F39                     WPUA            equ	7993	;# 
  1157     1F3A                     ODCONA          equ	7994	;# 
  1158     1F3B                     SLRCONA         equ	7995	;# 
  1159     1F3C                     INLVLA          equ	7996	;# 
  1160     1F3D                     IOCAP           equ	7997	;# 
  1161     1F3E                     IOCAN           equ	7998	;# 
  1162     1F3F                     IOCAF           equ	7999	;# 
  1163     1F43                     ANSELB          equ	8003	;# 
  1164     1F44                     WPUB            equ	8004	;# 
  1165     1F45                     ODCONB          equ	8005	;# 
  1166     1F46                     SLRCONB         equ	8006	;# 
  1167     1F47                     INLVLB          equ	8007	;# 
  1168     1F48                     IOCBP           equ	8008	;# 
  1169     1F49                     IOCBN           equ	8009	;# 
  1170     1F4A                     IOCBF           equ	8010	;# 
  1171     1F4E                     ANSELC          equ	8014	;# 
  1172     1F4F                     WPUC            equ	8015	;# 
  1173     1F50                     ODCONC          equ	8016	;# 
  1174     1F51                     SLRCONC         equ	8017	;# 
  1175     1F52                     INLVLC          equ	8018	;# 
  1176     1F53                     IOCCP           equ	8019	;# 
  1177     1F54                     IOCCN           equ	8020	;# 
  1178     1F55                     IOCCF           equ	8021	;# 
  1179     1FE4                     STATUS_SHAD     equ	8164	;# 
  1180     1FE5                     WREG_SHAD       equ	8165	;# 
  1181     1FE6                     BSR_SHAD        equ	8166	;# 
  1182     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1183     1FE8                     FSR0_SHAD       equ	8168	;# 
  1184     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1185     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1186     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1187     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1188     1FED                     STKPTR          equ	8173	;# 
  1189     1FEE                     TOSL            equ	8174	;# 
  1190     1FEF                     TOSH            equ	8175	;# 
  1191     0000                     INDF0           equ	0	;# 
  1192     0001                     INDF1           equ	1	;# 
  1193     0002                     PCL             equ	2	;# 
  1194     0003                     STATUS          equ	3	;# 
  1195     0004                     FSR0L           equ	4	;# 
  1196     0005                     FSR0H           equ	5	;# 
  1197     0006                     FSR1L           equ	6	;# 
  1198     0007                     FSR1H           equ	7	;# 
  1199     0008                     BSR             equ	8	;# 
  1200     0009                     WREG            equ	9	;# 
  1201     000A                     PCLATH          equ	10	;# 
  1202     000B                     INTCON          equ	11	;# 
  1203     000C                     PORTA           equ	12	;# 
  1204     000D                     PORTB           equ	13	;# 
  1205     000E                     PORTC           equ	14	;# 
  1206     0012                     TRISA           equ	18	;# 
  1207     0013                     TRISB           equ	19	;# 
  1208     0014                     TRISC           equ	20	;# 
  1209     0018                     LATA            equ	24	;# 
  1210     0019                     LATB            equ	25	;# 
  1211     001A                     LATC            equ	26	;# 
  1212     009A                     CPCON           equ	154	;# 
  1213     009B                     ADRES           equ	155	;# 
  1214     009B                     ADRESL          equ	155	;# 
  1215     009C                     ADRESH          equ	156	;# 
  1216     009D                     ADCON0          equ	157	;# 
  1217     009E                     ADCON1          equ	158	;# 
  1218     009F                     ADACT           equ	159	;# 
  1219     010C                     RB4I2C          equ	268	;# 
  1220     010D                     RB6I2C          equ	269	;# 
  1221     0119                     RC1REG          equ	281	;# 
  1222     011A                     TX1REG          equ	282	;# 
  1223     011B                     SP1BRG          equ	283	;# 
  1224     011B                     SP1BRGL         equ	283	;# 
  1225     011C                     SP1BRGH         equ	284	;# 
  1226     011D                     RC1STA          equ	285	;# 
  1227     011E                     TX1STA          equ	286	;# 
  1228     011F                     BAUD1CON        equ	287	;# 
  1229     018C                     SSP1BUF         equ	396	;# 
  1230     018D                     SSP1ADD         equ	397	;# 
  1231     018E                     SSP1MSK         equ	398	;# 
  1232     018F                     SSP1STAT        equ	399	;# 
  1233     0190                     SSP1CON1        equ	400	;# 
  1234     0191                     SSP1CON2        equ	401	;# 
  1235     0192                     SSP1CON3        equ	402	;# 
  1236     020C                     TMR1            equ	524	;# 
  1237     020C                     TMR1L           equ	524	;# 
  1238     020D                     TMR1H           equ	525	;# 
  1239     020E                     T1CON           equ	526	;# 
  1240     020E                     TMR1CON         equ	526	;# 
  1241     020F                     T1GCON          equ	527	;# 
  1242     020F                     TMR1GCON        equ	527	;# 
  1243     0210                     T1GATE          equ	528	;# 
  1244     0210                     TMR1GATE        equ	528	;# 
  1245     0211                     T1CLK           equ	529	;# 
  1246     0211                     TMR1CLK         equ	529	;# 
  1247     0211                     PR1             equ	529	;# 
  1248     028C                     T2TMR           equ	652	;# 
  1249     028C                     TMR2            equ	652	;# 
  1250     028D                     T2PR            equ	653	;# 
  1251     028D                     PR2             equ	653	;# 
  1252     028E                     T2CON           equ	654	;# 
  1253     028F                     T2HLT           equ	655	;# 
  1254     0290                     T2CLKCON        equ	656	;# 
  1255     0291                     T2RST           equ	657	;# 
  1256     030C                     CCPR1           equ	780	;# 
  1257     030C                     CCPR1L          equ	780	;# 
  1258     030D                     CCPR1H          equ	781	;# 
  1259     030E                     CCP1CON         equ	782	;# 
  1260     030F                     CCP1CAP         equ	783	;# 
  1261     0310                     CCPR2           equ	784	;# 
  1262     0310                     CCPR2L          equ	784	;# 
  1263     0311                     CCPR2H          equ	785	;# 
  1264     0312                     CCP2CON         equ	786	;# 
  1265     0313                     CCP2CAP         equ	787	;# 
  1266     0314                     PWM3DC          equ	788	;# 
  1267     0314                     PWM3DCL         equ	788	;# 
  1268     0315                     PWM3DCH         equ	789	;# 
  1269     0316                     PWM3CON         equ	790	;# 
  1270     0318                     PWM4DC          equ	792	;# 
  1271     0318                     PWM4DCL         equ	792	;# 
  1272     0319                     PWM4DCH         equ	793	;# 
  1273     031A                     PWM4CON         equ	794	;# 
  1274     059C                     TMR0L           equ	1436	;# 
  1275     059C                     TMR0            equ	1436	;# 
  1276     059D                     TMR0H           equ	1437	;# 
  1277     059D                     PR0             equ	1437	;# 
  1278     059E                     T0CON0          equ	1438	;# 
  1279     059F                     T0CON1          equ	1439	;# 
  1280     070C                     PIR0            equ	1804	;# 
  1281     070D                     PIR1            equ	1805	;# 
  1282     070E                     PIR2            equ	1806	;# 
  1283     0716                     PIE0            equ	1814	;# 
  1284     0717                     PIE1            equ	1815	;# 
  1285     0718                     PIE2            equ	1816	;# 
  1286     080C                     WDTCON          equ	2060	;# 
  1287     0811                     BORCON          equ	2065	;# 
  1288     0813                     PCON0           equ	2067	;# 
  1289     0814                     PCON1           equ	2068	;# 
  1290     081A                     NVMADR          equ	2074	;# 
  1291     081A                     NVMADRL         equ	2074	;# 
  1292     081B                     NVMADRH         equ	2075	;# 
  1293     081C                     NVMDAT          equ	2076	;# 
  1294     081C                     NVMDATL         equ	2076	;# 
  1295     081D                     NVMDATH         equ	2077	;# 
  1296     081E                     NVMCON1         equ	2078	;# 
  1297     081F                     NVMCON2         equ	2079	;# 
  1298     088E                     OSCCON          equ	2190	;# 
  1299     0890                     OSCSTAT         equ	2192	;# 
  1300     0891                     OSCEN           equ	2193	;# 
  1301     0892                     OSCTUNE         equ	2194	;# 
  1302     0893                     OSCFRQ          equ	2195	;# 
  1303     090C                     FVRCON          equ	2316	;# 
  1304     1E8F                     PPSLOCK         equ	7823	;# 
  1305     1E90                     INTPPS          equ	7824	;# 
  1306     1E91                     T0CKIPPS        equ	7825	;# 
  1307     1E92                     T1CKIPPS        equ	7826	;# 
  1308     1E93                     T1GPPS          equ	7827	;# 
  1309     1E9C                     T2INPPS         equ	7836	;# 
  1310     1EA1                     CCP1PPS         equ	7841	;# 
  1311     1EA2                     CCP2PPS         equ	7842	;# 
  1312     1EC3                     ADACTPPS        equ	7875	;# 
  1313     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1314     1EC6                     SSP1DATPPS      equ	7878	;# 
  1315     1EC7                     SSP1SSPPS       equ	7879	;# 
  1316     1ECB                     RX1PPS          equ	7883	;# 
  1317     1ECB                     RX1DTPPS        equ	7883	;# 
  1318     1ECB                     RXPPS           equ	7883	;# 
  1319     1ECC                     CK1PPS          equ	7884	;# 
  1320     1ECC                     TX1CKPPS        equ	7884	;# 
  1321     1ECC                     CKPPS           equ	7884	;# 
  1322     1F10                     RA0PPS          equ	7952	;# 
  1323     1F11                     RA1PPS          equ	7953	;# 
  1324     1F12                     RA2PPS          equ	7954	;# 
  1325     1F14                     RA4PPS          equ	7956	;# 
  1326     1F15                     RA5PPS          equ	7957	;# 
  1327     1F1C                     RB4PPS          equ	7964	;# 
  1328     1F1D                     RB5PPS          equ	7965	;# 
  1329     1F1E                     RB6PPS          equ	7966	;# 
  1330     1F1F                     RB7PPS          equ	7967	;# 
  1331     1F20                     RC0PPS          equ	7968	;# 
  1332     1F21                     RC1PPS          equ	7969	;# 
  1333     1F22                     RC2PPS          equ	7970	;# 
  1334     1F23                     RC3PPS          equ	7971	;# 
  1335     1F24                     RC4PPS          equ	7972	;# 
  1336     1F25                     RC5PPS          equ	7973	;# 
  1337     1F26                     RC6PPS          equ	7974	;# 
  1338     1F27                     RC7PPS          equ	7975	;# 
  1339     1F38                     ANSELA          equ	7992	;# 
  1340     1F39                     WPUA            equ	7993	;# 
  1341     1F3A                     ODCONA          equ	7994	;# 
  1342     1F3B                     SLRCONA         equ	7995	;# 
  1343     1F3C                     INLVLA          equ	7996	;# 
  1344     1F3D                     IOCAP           equ	7997	;# 
  1345     1F3E                     IOCAN           equ	7998	;# 
  1346     1F3F                     IOCAF           equ	7999	;# 
  1347     1F43                     ANSELB          equ	8003	;# 
  1348     1F44                     WPUB            equ	8004	;# 
  1349     1F45                     ODCONB          equ	8005	;# 
  1350     1F46                     SLRCONB         equ	8006	;# 
  1351     1F47                     INLVLB          equ	8007	;# 
  1352     1F48                     IOCBP           equ	8008	;# 
  1353     1F49                     IOCBN           equ	8009	;# 
  1354     1F4A                     IOCBF           equ	8010	;# 
  1355     1F4E                     ANSELC          equ	8014	;# 
  1356     1F4F                     WPUC            equ	8015	;# 
  1357     1F50                     ODCONC          equ	8016	;# 
  1358     1F51                     SLRCONC         equ	8017	;# 
  1359     1F52                     INLVLC          equ	8018	;# 
  1360     1F53                     IOCCP           equ	8019	;# 
  1361     1F54                     IOCCN           equ	8020	;# 
  1362     1F55                     IOCCF           equ	8021	;# 
  1363     1FE4                     STATUS_SHAD     equ	8164	;# 
  1364     1FE5                     WREG_SHAD       equ	8165	;# 
  1365     1FE6                     BSR_SHAD        equ	8166	;# 
  1366     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1367     1FE8                     FSR0_SHAD       equ	8168	;# 
  1368     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1369     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1370     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1371     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1372     1FED                     STKPTR          equ	8173	;# 
  1373     1FEE                     TOSL            equ	8174	;# 
  1374     1FEF                     TOSH            equ	8175	;# 
  1375                           
  1376 ;; Function _SPI1_Deinitialize is unused but had its address taken
  1377     0000                     _SPI1_Deinitialize equ	0
  1378                           
  1379 ;; Function _SPI1_BufferExchange is unused but had its address taken
  1380     0000                     _SPI1_BufferExchange equ	0
  1381                           
  1382 ;; Function _SPI1_BufferRead is unused but had its address taken
  1383     0000                     _SPI1_BufferRead equ	0
  1384                           
  1385 ;; Function _SPI1_ByteExchange is unused but had its address taken
  1386     0000                     _SPI1_ByteExchange equ	0
  1387                           
  1388 ;; Function _SPI1_ByteWrite is unused but had its address taken
  1389     0000                     _SPI1_ByteWrite equ	0
  1390                           
  1391 ;; Function _SPI1_ByteRead is unused but had its address taken
  1392     0000                     _SPI1_ByteRead  equ	0
  1393                           
  1394 ;; Function _SPI1_IsRxReady is unused but had its address taken
  1395     0000                     _SPI1_IsRxReady equ	0
  1396                           
  1397 ;; Function _TMR0_Deinitialize is unused but had its address taken
  1398     0000                     _TMR0_Deinitialize equ	0
  1399                           
  1400 ;; Function _TMR0_Start is unused but had its address taken
  1401     0000                     _TMR0_Start     equ	0
  1402                           
  1403 ;; Function _TMR0_Stop is unused but had its address taken
  1404     0000                     _TMR0_Stop      equ	0
  1405                           
  1406 ;; Function _TMR0_CounterGet is unused but had its address taken
  1407     0000                     _TMR0_CounterGet equ	0
  1408                           
  1409 ;; Function _TMR0_CounterSet is unused but had its address taken
  1410     0000                     _TMR0_CounterSet equ	0
  1411                           
  1412 ;; Function _TMR0_PeriodSet is unused but had its address taken
  1413     0000                     _TMR0_PeriodSet equ	0
  1414                           
  1415 ;; Function _TMR0_PeriodGet is unused but had its address taken
  1416     0000                     _TMR0_PeriodGet equ	0
  1417                           
  1418 ;; Function _TMR0_MaxCountGet is unused but had its address taken
  1419     0000                     _TMR0_MaxCountGet equ	0
  1420                           
  1421 ;; Function _TMR0_OverflowCallbackRegister is unused but had its address taken
  1422     0000                     _TMR0_OverflowCallbackRegister equ	0
  1423                           
  1424                           	psect	idataBANK0
  1425     0242                     __pidataBANK0:
  1426                           
  1427                           ;initializer for main@F3781
  1428     0242  3429               	retlw	41
  1429     0243  3467               	retlw	103
  1430     0244  3477               	retlw	119
  1431     0245  3464               	retlw	100
  1432                           
  1433                           ;initializer for _divider
  1434     0246  34FF               	retlw	255
  1435     0247  34FF               	retlw	255
  1436                           
  1437                           	psect	stringtext1
  1438     0169                     __pstringtext1:
  1439     0169                     _SPI1_Client:
  1440     0169  3439               	retlw	low _SPI1_Initialize
  1441     016A  3402               	retlw	high _SPI1_Initialize
  1442     016B  3400               	retlw	0
  1443     016C  3400               	retlw	0
  1444     016D  3440               	retlw	low _SPI1_Open
  1445     016E  3400               	retlw	high _SPI1_Open
  1446     016F  345E               	retlw	low _SPI1_Close
  1447     0170  3402               	retlw	high _SPI1_Close
  1448     0171  3400               	retlw	0
  1449     0172  3400               	retlw	0
  1450     0173  3400               	retlw	0
  1451     0174  3400               	retlw	0
  1452     0175  340C               	retlw	low _SPI1_BufferWrite
  1453     0176  3401               	retlw	high _SPI1_BufferWrite
  1454     0177  3400               	retlw	0
  1455     0178  3400               	retlw	0
  1456     0179  3400               	retlw	0
  1457     017A  3400               	retlw	0
  1458     017B  3400               	retlw	0
  1459     017C  3400               	retlw	0
  1460     017D  3400               	retlw	0
  1461     017E  3400               	retlw	0
  1462     017F  34F0               	retlw	low _SPI1_IsTxReady
  1463     0180  3401               	retlw	high _SPI1_IsTxReady
  1464     0181  3400               	retlw	0
  1465     0182  3400               	retlw	0
  1466     0183  3400               	retlw	0
  1467     0184  3400               	retlw	0
  1468     0185                     __end_of_SPI1_Client:
  1469                           
  1470                           	psect	stringtext2
  1471     0185                     __pstringtext2:
  1472     0185                     _spi1_configuration:
  1473     0185  3440               	retlw	64
  1474     0186  3404               	retlw	4
  1475     0187  3410               	retlw	16
  1476     0188  3401               	retlw	1
  1477     0189  3400               	retlw	0
  1478     018A  3400               	retlw	0
  1479     018B  3404               	retlw	4
  1480     018C  3410               	retlw	16
  1481     018D  3401               	retlw	1
  1482     018E  3400               	retlw	0
  1483     018F  3440               	retlw	64
  1484     0190  3414               	retlw	20
  1485     0191  3410               	retlw	16
  1486     0192  3401               	retlw	1
  1487     0193  3400               	retlw	0
  1488     0194  3400               	retlw	0
  1489     0195  3414               	retlw	20
  1490     0196  3410               	retlw	16
  1491     0197  3401               	retlw	1
  1492     0198  3400               	retlw	0
  1493     0199  3464               	retlw	100
  1494     019A  3404               	retlw	4
  1495     019B  3410               	retlw	16
  1496     019C  3400               	retlw	0
  1497     019D  3400               	retlw	0
  1498     019E                     __end_of_spi1_configuration:
  1499                           
  1500                           	psect	stringtext3
  1501     019E                     __pstringtext3:
  1502     019E                     _Timer0:
  1503     019E  34B4               	retlw	low _TMR0_Initialize
  1504     019F  3401               	retlw	high _TMR0_Initialize
  1505     01A0  3400               	retlw	0
  1506     01A1  3400               	retlw	0
  1507     01A2  3400               	retlw	0
  1508     01A3  3400               	retlw	0
  1509     01A4  3400               	retlw	0
  1510     01A5  3400               	retlw	0
  1511     01A6  3400               	retlw	0
  1512     01A7  3400               	retlw	0
  1513     01A8  3400               	retlw	0
  1514     01A9  3400               	retlw	0
  1515     01AA  3400               	retlw	0
  1516     01AB  3400               	retlw	0
  1517     01AC  3400               	retlw	0
  1518     01AD  3400               	retlw	0
  1519     01AE  3400               	retlw	0
  1520     01AF  3400               	retlw	0
  1521     01B0  3400               	retlw	0
  1522     01B1  3400               	retlw	0
  1523     01B2  3400               	retlw	0
  1524     01B3  3400               	retlw	0
  1525     01B4                     __end_of_Timer0:
  1526                           
  1527                           	psect	nvBANK0
  1528     0026                     __pnvBANK0:
  1529     0026                     _TMR0_OverflowCallback:
  1530     0026                     	ds	2
  1531     0028                     _INT_InterruptHandler:
  1532     0028                     	ds	2
  1533     0018                     _LATAbits       set	24
  1534     0014                     _TRISC          set	20
  1535     0013                     _TRISB          set	19
  1536     0012                     _TRISA          set	18
  1537     001A                     _LATC           set	26
  1538     0019                     _LATB           set	25
  1539     0018                     _LATA           set	24
  1540     000B                     _INTCONbits     set	11
  1541     018C                     _SSP1BUF        set	396
  1542     0190                     _SSP1CON1bits   set	400
  1543     018D                     _SSP1ADD        set	397
  1544     0192                     _SSP1CON3       set	402
  1545     0190                     _SSP1CON1       set	400
  1546     018F                     _SSP1STAT       set	399
  1547     059E                     _T0CON0bits     set	1438
  1548     059E                     _T0CON0         set	1438
  1549     059F                     _T0CON1         set	1439
  1550     059C                     _TMR0L          set	1436
  1551     059D                     _TMR0H          set	1437
  1552     0716                     _PIE0bits       set	1814
  1553     070C                     _PIR0bits       set	1804
  1554     070D                     _PIR1bits       set	1805
  1555     0717                     _PIE1bits       set	1815
  1556     0892                     _OSCTUNE        set	2194
  1557     0893                     _OSCFRQ         set	2195
  1558     0891                     _OSCEN          set	2193
  1559     1EC5                     _SSP1CLKPPS     set	7877
  1560     1E90                     _INTPPS         set	7824
  1561     1EC7                     _SSP1SSPPS      set	7879
  1562     1EC6                     _SSP1DATPPS     set	7878
  1563     1F55                     _IOCCF          set	8021
  1564     1F54                     _IOCCN          set	8020
  1565     1F53                     _IOCCP          set	8019
  1566     1F4A                     _IOCBF          set	8010
  1567     1F49                     _IOCBN          set	8009
  1568     1F48                     _IOCBP          set	8008
  1569     1F3F                     _IOCAF          set	7999
  1570     1F3E                     _IOCAN          set	7998
  1571     1F3D                     _IOCAP          set	7997
  1572     1F1C                     _RB4PPS         set	7964
  1573     1F1F                     _RB7PPS         set	7967
  1574     1F52                     _INLVLC         set	8018
  1575     1F47                     _INLVLB         set	8007
  1576     1F3C                     _INLVLA         set	7996
  1577     1F51                     _SLRCONC        set	8017
  1578     1F46                     _SLRCONB        set	8006
  1579     1F3B                     _SLRCONA        set	7995
  1580     1F50                     _ODCONC         set	8016
  1581     1F45                     _ODCONB         set	8005
  1582     1F3A                     _ODCONA         set	7994
  1583     1F4F                     _WPUCbits       set	8015
  1584     1F4F                     _WPUC           set	8015
  1585     1F44                     _WPUB           set	8004
  1586     1F39                     _WPUA           set	7993
  1587     1F4E                     _ANSELC         set	8014
  1588     1F43                     _ANSELB         set	8003
  1589     1F38                     _ANSELA         set	7992
  1590                           
  1591                           	psect	cinit
  1592     0027                     start_initialization:	
  1593                           ; #config settings
  1594                           
  1595     0027                     __initialization:
  1596                           
  1597                           ; Initialize objects allocated to BANK0
  1598     0027  3042               	movlw	low __pidataBANK0
  1599     0028  0084               	movwf	4
  1600     0029  3082               	movlw	(high __pidataBANK0)| (0+128)
  1601     002A  0085               	movwf	5
  1602     002B  0012               	moviw fsr0++
  1603     002C  00A0               	movwf	__pdataBANK0& (0+127)
  1604     002D  0012               	moviw fsr0++
  1605     002E  00A1               	movwf	(__pdataBANK0+1)& (0+127)
  1606     002F  0012               	moviw fsr0++
  1607     0030  00A2               	movwf	(__pdataBANK0+2)& (0+127)
  1608     0031  0012               	moviw fsr0++
  1609     0032  00A3               	movwf	(__pdataBANK0+3)& (0+127)
  1610     0033  0012               	moviw fsr0++
  1611     0034  00A4               	movwf	(__pdataBANK0+4)& (0+127)
  1612     0035  0012               	moviw fsr0++
  1613     0036  00A5               	movwf	(__pdataBANK0+5)& (0+127)
  1614                           
  1615                           ; Clear objects allocated to COMMON
  1616     0037  01FB               	clrf	__pbssCOMMON& (0+127)
  1617     0038  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  1618     0039  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
  1619                           
  1620                           ; Clear objects allocated to BANK0
  1621     003A  01AE               	clrf	__pbssBANK0& (0+127)
  1622     003B  01AF               	clrf	(__pbssBANK0+1)& (0+127)
  1623     003C                     end_of_initialization:	
  1624                           ;End of C runtime variable initialization code
  1625                           
  1626     003C                     __end_of__initialization:
  1627     003C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1628     003D  0140               	movlb	0
  1629     003E  3180  28EA         	ljmp	_main	;jump to C main() function
  1630                           
  1631                           	psect	bssCOMMON
  1632     007B                     __pbssCOMMON:
  1633     007B                     _tmr0PeriodCount:
  1634     007B                     	ds	2
  1635     007D                     _led_state:
  1636     007D                     	ds	1
  1637                           
  1638                           	psect	bssBANK0
  1639     002E                     __pbssBANK0:
  1640     002E                     _timerOverflow:
  1641     002E                     	ds	1
  1642     002F                     _pushed:
  1643     002F                     	ds	1
  1644                           
  1645                           	psect	dataBANK0
  1646     0020                     __pdataBANK0:
  1647     0020                     main@F3781:
  1648     0020                     	ds	4
  1649     0024                     _divider:
  1650     0024                     	ds	2
  1651                           
  1652                           	psect	cstackCOMMON
  1653     0070                     __pcstackCOMMON:
  1654     0070                     ?_SPI1_Initialize:
  1655     0070                     ?_SPI1_Close:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658     0070                     ?_SPI1_BufferWrite:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661     0070                     ?_SPI1_IsTxReady:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664     0070                     ?_INT_SetInterruptHandler:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667     0070                     ?_INT_DefaultInterruptHandler:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670     0070                     ?_INT_ISR:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673     0070                     ?_TMR0_ISR:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676     0070                     ?_INT_CallBack:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679     0070                     ?_TMR0_Initialize:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682     0070                     ?_TMR0_DefaultOverflowCallback:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685     0070                     ?_toggle_led:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688     0070                     ?_INTERRUPT_Initialize:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691     0070                     ?_INTERRUPT_InterruptManager:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694     0070                     ?_CLOCK_Initialize:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697     0070                     ?_PIN_MANAGER_Initialize:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700     0070                     ?_SYSTEM_Initialize:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703     0070                     ?_main:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706     0070                     ?___wmul:	
  1707                           ; 2 bytes @ 0x0
  1708                           
  1709     0070                     SPI1_BufferWrite@bufferData:	
  1710                           ; 2 bytes @ 0x0
  1711                           
  1712     0070                     SPI1_IsTxReady@returnValue:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715     0070                     INT_SetInterruptHandler@InterruptHandler:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718     0070                     ___wmul@multiplier:	
  1719                           ; 2 bytes @ 0x0
  1720                           
  1721     0070                     ??_SPI1_Initialize:	
  1722                           ; 2 bytes @ 0x0
  1723                           
  1724     0070                     ??_SPI1_Close:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727     0070                     ??_SPI1_IsTxReady:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730     0070                     ??_INT_DefaultInterruptHandler:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733     0070                     ??_INT_ISR:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736     0070                     ??_TMR0_ISR:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739     0070                     ??_INT_CallBack:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742     0070                     ??_TMR0_Initialize:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745     0070                     ??_TMR0_DefaultOverflowCallback:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748     0070                     ??_toggle_led:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751     0070                     ??_INTERRUPT_InterruptManager:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754     0070                     ??_CLOCK_Initialize:	
  1755                           ; 1 bytes @ 0x0
  1756                           
  1757     0070                     ??_PIN_MANAGER_Initialize:	
  1758                           ; 1 bytes @ 0x0
  1759                           
  1760                           
  1761                           ; 1 bytes @ 0x0
  1762     0070                     	ds	1
  1763     0071                     SPI1_BufferWrite@bufferSize:
  1764                           
  1765                           ; 2 bytes @ 0x1
  1766     0071                     	ds	1
  1767     0072                     ___wmul@multiplicand:
  1768     0072                     ??_INT_SetInterruptHandler:	
  1769                           ; 2 bytes @ 0x2
  1770                           
  1771     0072                     ??_INTERRUPT_Initialize:	
  1772                           ; 1 bytes @ 0x2
  1773                           
  1774     0072                     ??_SYSTEM_Initialize:	
  1775                           ; 1 bytes @ 0x2
  1776                           
  1777                           
  1778                           ; 1 bytes @ 0x2
  1779     0072                     	ds	1
  1780     0073                     SPI1_BufferWrite@bufferInputSize:
  1781     0073                     ??_SPI1_BufferWrite:	
  1782                           ; 2 bytes @ 0x3
  1783                           
  1784                           
  1785                           ; 1 bytes @ 0x3
  1786     0073                     	ds	1
  1787     0074                     ___wmul@product:
  1788     0074                     ??___wmul:	
  1789                           ; 2 bytes @ 0x4
  1790                           
  1791                           
  1792                           ; 1 bytes @ 0x4
  1793     0074                     	ds	1
  1794     0075                     SPI1_BufferWrite@bufferInput:
  1795                           
  1796                           ; 1 bytes @ 0x5
  1797     0075                     	ds	1
  1798     0076                     ?_SPI1_Open:
  1799     0076                     SPI1_Open@spiConfigIndex:	
  1800                           ; 1 bytes @ 0x6
  1801                           
  1802                           
  1803                           ; 1 bytes @ 0x6
  1804     0076                     	ds	1
  1805     0077                     ??_SPI1_Open:
  1806                           
  1807                           ; 1 bytes @ 0x7
  1808     0077                     	ds	2
  1809     0079                     SPI1_Open@returnValue:
  1810                           
  1811                           ; 1 bytes @ 0x9
  1812     0079                     	ds	1
  1813     007A                     ?_spi_send_data:
  1814     007A                     spi_send_data@data:	
  1815                           ; 1 bytes @ 0xA
  1816                           
  1817                           
  1818                           ; 1 bytes @ 0xA
  1819     007A                     	ds	1
  1820     007B                     ??_spi_send_data:
  1821     007B                     ??_main:	
  1822                           ; 1 bytes @ 0xB
  1823                           
  1824                           
  1825                           	psect	cstackBANK0
  1826     002A                     __pcstackBANK0:	
  1827                           ; 1 bytes @ 0xB
  1828                           
  1829     002A                     main@spiData:
  1830                           
  1831                           ; 4 bytes @ 0x0
  1832     002A                     	ds	4
  1833                           
  1834                           	psect	maintext
  1835     00EA                     __pmaintext:	
  1836 ;;
  1837 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1838 ;;
  1839 ;; *************** function _main *****************
  1840 ;; Defined at:
  1841 ;;		line 44 in file "main.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  spiData         4    0[BANK0 ] unsigned char [4]
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  2  381[None  ] int 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : B3F/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1855 ;;      Params:         0       0       0       0       0       0       0       0
  1856 ;;      Locals:         0       4       0       0       0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0
  1858 ;;      Totals:         0       4       0       0       0       0       0       0
  1859 ;;Total ram usage:        4 bytes
  1860 ;; Hardware stack levels required when called: 7
  1861 ;; This function calls:
  1862 ;;		_SYSTEM_Initialize
  1863 ;;		_spi_send_data
  1864 ;;		_toggle_led
  1865 ;; This function is called by:
  1866 ;;		Startup code after reset
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870     00EA                     _main:	
  1871                           ;psect for function _main
  1872                           
  1873     00EA                     l1400:	
  1874                           ;incstack = 0
  1875                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1876                           
  1877                           
  1878                           ;main.c: 45:     SYSTEM_Initialize();
  1879     00EA  3182  2200  3180   	fcall	_SYSTEM_Initialize
  1880     00ED                     l1402:
  1881                           
  1882                           ;main.c: 51:     (INTCONbits.GIE = 1);
  1883     00ED  178B               	bsf	11,7	;volatile
  1884     00EE                     l1404:
  1885                           
  1886                           ;main.c: 57:     (INTCONbits.PEIE = 1);
  1887     00EE  170B               	bsf	11,6	;volatile
  1888     00EF                     l1406:
  1889                           
  1890                           ;main.c: 61:     uint8_t spiData[] = {
  1891     00EF  0140               	movlb	0	; select bank0
  1892     00F0  0823               	movf	main@F3781+3,w
  1893     00F1  00AD               	movwf	main@spiData+3
  1894     00F2  0822               	movf	main@F3781+2,w
  1895     00F3  00AC               	movwf	main@spiData+2
  1896     00F4  0821               	movf	main@F3781+1,w
  1897     00F5  00AB               	movwf	main@spiData+1
  1898     00F6  0820               	movf	main@F3781,w
  1899     00F7  00AA               	movwf	main@spiData
  1900     00F8                     l1408:
  1901                           
  1902                           ;main.c: 70:         if (timerOverflow) {
  1903     00F8  082E               	movf	_timerOverflow,w
  1904     00F9  1903               	btfsc	3,2
  1905     00FA  28FC               	goto	u501
  1906     00FB  28FD               	goto	u500
  1907     00FC                     u501:
  1908     00FC  2902               	goto	l1414
  1909     00FD                     u500:
  1910     00FD                     l1410:
  1911                           
  1912                           ;main.c: 71:             toggle_led();
  1913     00FD  3182  2210  3180   	fcall	_toggle_led
  1914     0100                     l1412:
  1915                           
  1916                           ;main.c: 72:             timerOverflow = 0;
  1917     0100  0140               	movlb	0	; select bank0
  1918     0101  01AE               	clrf	_timerOverflow
  1919     0102                     l1414:
  1920                           
  1921                           ;main.c: 76:         {;main.c: 77:             spi_send_data(&spiData);
  1922     0102  302A               	movlw	(low (main@spiData| 0))& (0+255)
  1923     0103  00FA               	movwf	spi_send_data@data
  1924     0104  3181  214B  3180   	fcall	_spi_send_data
  1925     0107                     l1416:
  1926                           
  1927                           ;main.c: 78:             pushed = 0;
  1928     0107  0140               	movlb	0	; select bank0
  1929     0108  01AF               	clrf	_pushed
  1930     0109  28F8               	goto	l1408
  1931     010A  3180  2825         	ljmp	start
  1932     010C                     __end_of_main:
  1933                           
  1934                           	psect	text1
  1935     0210                     __ptext1:	
  1936 ;; *************** function _toggle_led *****************
  1937 ;; Defined at:
  1938 ;;		line 83 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1952 ;;      Params:         0       0       0       0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 4
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966     0210                     _toggle_led:	
  1967                           ;psect for function _toggle_led
  1968                           
  1969     0210                     l1372:	
  1970                           ;incstack = 0
  1971                           ; Regs used in _toggle_led: [wreg+status,2+status,0]
  1972                           
  1973                           
  1974                           ;main.c: 84:     led_state = ~led_state;
  1975     0210  037D               	decf	_led_state,w
  1976     0211  1D03               	btfss	3,2
  1977     0212  2A14               	goto	u411
  1978     0213  2A16               	goto	u410
  1979     0214                     u411:
  1980     0214  3001               	movlw	1
  1981     0215  2A17               	goto	u420
  1982     0216                     u410:
  1983     0216  3000               	movlw	0
  1984     0217                     u420:
  1985     0217  00FD               	movwf	_led_state
  1986     0218                     l1374:
  1987                           
  1988                           ;main.c: 85:     LATAbits.LATA2 = led_state;
  1989     0218  0C7D               	rrf	_led_state,w
  1990     0219  0140               	movlb	0	; select bank0
  1991     021A  1C03               	skipc
  1992     021B  1118               	bcf	24,2	;volatile
  1993     021C  1803               	skipnc
  1994     021D  1518               	bsf	24,2	;volatile
  1995     021E                     l391:
  1996     021E  0008               	return
  1997     021F                     __end_of_toggle_led:
  1998                           
  1999                           	psect	text2
  2000     014B                     __ptext2:	
  2001 ;; *************** function _spi_send_data *****************
  2002 ;; Defined at:
  2003 ;;		line 88 in file "main.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  data            1   10[COMMON] PTR unsigned char 
  2006 ;;		 -> main@spiData(4), 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;		None
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2018 ;;      Params:         1       0       0       0       0       0       0       0
  2019 ;;      Locals:         0       0       0       0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0
  2021 ;;      Totals:         1       0       0       0       0       0       0       0
  2022 ;;Total ram usage:        1 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; Hardware stack levels required when called: 6
  2025 ;; This function calls:
  2026 ;;		_SPI1_BufferWrite
  2027 ;;		_SPI1_Close
  2028 ;;		_SPI1_IsTxReady
  2029 ;;		_SPI1_Open
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035     014B                     _spi_send_data:	
  2036                           ;psect for function _spi_send_data
  2037                           
  2038     014B                     l1376:	
  2039                           ;incstack = 0
  2040                           ; Regs used in _spi_send_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2041                           
  2042                           
  2043                           ;main.c: 91:     if (SPI1_Open(0)) {
  2044     014B  01F6               	clrf	SPI1_Open@spiConfigIndex
  2045     014C  3180  2040  3181   	fcall	_SPI1_Open
  2046     014F  3A00               	xorlw	0
  2047     0150  1903               	skipnz
  2048     0151  2953               	goto	u431
  2049     0152  2954               	goto	u430
  2050     0153                     u431:
  2051     0153  2968               	goto	l398
  2052     0154                     u430:
  2053     0154                     l1380:
  2054     0154  3181  21F0  3181   	fcall	_SPI1_IsTxReady
  2055     0157  3A00               	xorlw	0
  2056     0158  1903               	skipnz
  2057     0159  295B               	goto	u441
  2058     015A  295C               	goto	u440
  2059     015B                     u441:
  2060     015B  2954               	goto	l1380
  2061     015C                     u440:
  2062     015C                     l1382:
  2063                           
  2064                           ;main.c: 93:         SPI1_BufferWrite(data, 4);
  2065     015C  087A               	movf	spi_send_data@data,w
  2066     015D  00F0               	movwf	SPI1_BufferWrite@bufferData
  2067     015E  3004               	movlw	4
  2068     015F  00F1               	movwf	SPI1_BufferWrite@bufferSize
  2069     0160  3000               	movlw	0
  2070     0161  00F2               	movwf	SPI1_BufferWrite@bufferSize+1
  2071     0162  3181  210C  3181   	fcall	_SPI1_BufferWrite
  2072     0165                     l1384:
  2073                           
  2074                           ;main.c: 94:         SPI1_Close();
  2075     0165  3182  225E  3181   	fcall	_SPI1_Close
  2076     0168                     l398:
  2077     0168  0008               	return
  2078     0169                     __end_of_spi_send_data:
  2079                           
  2080                           	psect	text3
  2081     0040                     __ptext3:	
  2082 ;; *************** function _SPI1_Open *****************
  2083 ;; Defined at:
  2084 ;;		line 84 in file "mcc_generated_files/spi/src/mssp1.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  spiConfigInd    1    6[COMMON] unsigned char 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  returnValue     1    9[COMMON] _Bool 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      _Bool 
  2091 ;; Registers used:
  2092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2098 ;;      Params:         1       0       0       0       0       0       0       0
  2099 ;;      Locals:         1       0       0       0       0       0       0       0
  2100 ;;      Temps:          2       0       0       0       0       0       0       0
  2101 ;;      Totals:         4       0       0       0       0       0       0       0
  2102 ;;Total ram usage:        4 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 5
  2105 ;; This function calls:
  2106 ;;		___wmul
  2107 ;; This function is called by:
  2108 ;;		_spi_send_data
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112     0040                     _SPI1_Open:	
  2113                           ;psect for function _SPI1_Open
  2114                           
  2115     0040                     l1234:	
  2116                           ;incstack = 0
  2117                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2118                           
  2119     0040                     l1236:
  2120                           
  2121                           ;mcc_generated_files/spi/src/mssp1.c: 87:     if (SSP1CON1bits.SSPEN == 0)
  2122     0040  0143               	movlb	3	; select bank3
  2123     0041  1A90               	btfsc	16,5	;volatile
  2124     0042  2844               	goto	u341
  2125     0043  2845               	goto	u340
  2126     0044                     u341:
  2127     0044  28A9               	goto	l1244
  2128     0045                     u340:
  2129     0045                     l1238:
  2130                           
  2131                           ;mcc_generated_files/spi/src/mssp1.c: 88:     {;mcc_generated_files/spi/src/mssp1.c: 89:
      +                                   SSP1STAT = spi1_configuration[spiConfigIndex].stat;
  2132     0045  0876               	movf	SPI1_Open@spiConfigIndex,w
  2133     0046  00F7               	movwf	??_SPI1_Open
  2134     0047  01F8               	clrf	??_SPI1_Open+1
  2135     0048  0877               	movf	??_SPI1_Open,w
  2136     0049  00F0               	movwf	___wmul@multiplier
  2137     004A  0878               	movf	??_SPI1_Open+1,w
  2138     004B  00F1               	movwf	___wmul@multiplier+1
  2139     004C  3005               	movlw	5
  2140     004D  00F2               	movwf	___wmul@multiplicand
  2141     004E  3000               	movlw	0
  2142     004F  00F3               	movwf	___wmul@multiplicand+1
  2143     0050  3181  212C  3180   	fcall	___wmul
  2144     0053  3085               	movlw	low _spi1_configuration
  2145     0054  0770               	addwf	?___wmul,w
  2146     0055  0084               	movwf	4
  2147     0056  3001               	movlw	high _spi1_configuration
  2148     0057  3D71               	addwfc	?___wmul+1,w
  2149     0058  3880               	iorlw	128
  2150     0059  0085               	movwf	5
  2151     005A  0800               	movf	0,w	;code access
  2152     005B  0143               	movlb	3	; select bank3
  2153     005C  008F               	movwf	15	;volatile
  2154                           
  2155                           ;mcc_generated_files/spi/src/mssp1.c: 90:         SSP1CON1 = spi1_configuration[spiConfi
      +                          gIndex].con1;
  2156     005D  0876               	movf	SPI1_Open@spiConfigIndex,w
  2157     005E  00F7               	movwf	??_SPI1_Open
  2158     005F  01F8               	clrf	??_SPI1_Open+1
  2159     0060  0877               	movf	??_SPI1_Open,w
  2160     0061  00F0               	movwf	___wmul@multiplier
  2161     0062  0878               	movf	??_SPI1_Open+1,w
  2162     0063  00F1               	movwf	___wmul@multiplier+1
  2163     0064  3005               	movlw	5
  2164     0065  00F2               	movwf	___wmul@multiplicand
  2165     0066  3000               	movlw	0
  2166     0067  00F3               	movwf	___wmul@multiplicand+1
  2167     0068  3181  212C  3180   	fcall	___wmul
  2168     006B  3086               	movlw	low (_spi1_configuration+1)
  2169     006C  0770               	addwf	?___wmul,w
  2170     006D  0084               	movwf	4
  2171     006E  3001               	movlw	high (_spi1_configuration+1)
  2172     006F  3D71               	addwfc	?___wmul+1,w
  2173     0070  3880               	iorlw	128
  2174     0071  0085               	movwf	5
  2175     0072  0800               	movf	0,w	;code access
  2176     0073  0143               	movlb	3	; select bank3
  2177     0074  0090               	movwf	16	;volatile
  2178                           
  2179                           ;mcc_generated_files/spi/src/mssp1.c: 91:         SSP1CON3 = spi1_configuration[spiConfi
      +                          gIndex].con3;
  2180     0075  0876               	movf	SPI1_Open@spiConfigIndex,w
  2181     0076  00F7               	movwf	??_SPI1_Open
  2182     0077  01F8               	clrf	??_SPI1_Open+1
  2183     0078  0877               	movf	??_SPI1_Open,w
  2184     0079  00F0               	movwf	___wmul@multiplier
  2185     007A  0878               	movf	??_SPI1_Open+1,w
  2186     007B  00F1               	movwf	___wmul@multiplier+1
  2187     007C  3005               	movlw	5
  2188     007D  00F2               	movwf	___wmul@multiplicand
  2189     007E  3000               	movlw	0
  2190     007F  00F3               	movwf	___wmul@multiplicand+1
  2191     0080  3181  212C  3180   	fcall	___wmul
  2192     0083  3087               	movlw	low (_spi1_configuration+2)
  2193     0084  0770               	addwf	?___wmul,w
  2194     0085  0084               	movwf	4
  2195     0086  3001               	movlw	high (_spi1_configuration+2)
  2196     0087  3D71               	addwfc	?___wmul+1,w
  2197     0088  3880               	iorlw	128
  2198     0089  0085               	movwf	5
  2199     008A  0800               	movf	0,w	;code access
  2200     008B  0143               	movlb	3	; select bank3
  2201     008C  0092               	movwf	18	;volatile
  2202                           
  2203                           ;mcc_generated_files/spi/src/mssp1.c: 92:         SSP1ADD = spi1_configuration[spiConfig
      +                          Index].baud;
  2204     008D  0876               	movf	SPI1_Open@spiConfigIndex,w
  2205     008E  00F7               	movwf	??_SPI1_Open
  2206     008F  01F8               	clrf	??_SPI1_Open+1
  2207     0090  0877               	movf	??_SPI1_Open,w
  2208     0091  00F0               	movwf	___wmul@multiplier
  2209     0092  0878               	movf	??_SPI1_Open+1,w
  2210     0093  00F1               	movwf	___wmul@multiplier+1
  2211     0094  3005               	movlw	5
  2212     0095  00F2               	movwf	___wmul@multiplicand
  2213     0096  3000               	movlw	0
  2214     0097  00F3               	movwf	___wmul@multiplicand+1
  2215     0098  3181  212C  3180   	fcall	___wmul
  2216     009B  3088               	movlw	low (_spi1_configuration+3)
  2217     009C  0770               	addwf	?___wmul,w
  2218     009D  0084               	movwf	4
  2219     009E  3001               	movlw	high (_spi1_configuration+3)
  2220     009F  3D71               	addwfc	?___wmul+1,w
  2221     00A0  3880               	iorlw	128
  2222     00A1  0085               	movwf	5
  2223     00A2  0800               	movf	0,w	;code access
  2224     00A3  0143               	movlb	3	; select bank3
  2225     00A4  008D               	movwf	13	;volatile
  2226     00A5                     l1240:
  2227                           
  2228                           ;mcc_generated_files/spi/src/mssp1.c: 94:         SSP1CON1bits.SSPEN = 1;
  2229     00A5  1690               	bsf	16,5	;volatile
  2230     00A6                     l1242:
  2231                           
  2232                           ;mcc_generated_files/spi/src/mssp1.c: 96:         returnValue = 1;
  2233     00A6  3001               	movlw	1
  2234     00A7  00F9               	movwf	SPI1_Open@returnValue
  2235                           
  2236                           ;mcc_generated_files/spi/src/mssp1.c: 97:     }
  2237     00A8  28AA               	goto	l1246
  2238     00A9                     l1244:
  2239                           
  2240                           ;mcc_generated_files/spi/src/mssp1.c: 99:     {;mcc_generated_files/spi/src/mssp1.c: 100
      +                          :         returnValue = 0;
  2241     00A9  01F9               	clrf	SPI1_Open@returnValue
  2242     00AA                     l1246:
  2243                           
  2244                           ;mcc_generated_files/spi/src/mssp1.c: 102:     return returnValue;
  2245     00AA  0879               	movf	SPI1_Open@returnValue,w
  2246     00AB                     l55:
  2247     00AB  0008               	return
  2248     00AC                     __end_of_SPI1_Open:
  2249                           
  2250                           	psect	text4
  2251     012C                     __ptext4:	
  2252 ;; *************** function ___wmul *****************
  2253 ;; Defined at:
  2254 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  multiplier      2    0[COMMON] unsigned int 
  2257 ;;  multiplicand    2    2[COMMON] unsigned int 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  product         2    4[COMMON] unsigned int 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  2    0[COMMON] unsigned int 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2269 ;;      Params:         4       0       0       0       0       0       0       0
  2270 ;;      Locals:         2       0       0       0       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0
  2272 ;;      Totals:         6       0       0       0       0       0       0       0
  2273 ;;Total ram usage:        6 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 4
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_SPI1_Open
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283     012C                     ___wmul:	
  2284                           ;psect for function ___wmul
  2285                           
  2286     012C                     l1216:	
  2287                           ;incstack = 0
  2288                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2289                           
  2290     012C  01F4               	clrf	___wmul@product
  2291     012D  01F5               	clrf	___wmul@product+1
  2292     012E                     l1218:
  2293     012E  1C70               	btfss	___wmul@multiplier,0
  2294     012F  2931               	goto	u301
  2295     0130  2932               	goto	u300
  2296     0131                     u301:
  2297     0131  2936               	goto	l466
  2298     0132                     u300:
  2299     0132                     l1220:
  2300     0132  0872               	movf	___wmul@multiplicand,w
  2301     0133  07F4               	addwf	___wmul@product,f
  2302     0134  0873               	movf	___wmul@multiplicand+1,w
  2303     0135  3DF5               	addwfc	___wmul@product+1,f
  2304     0136                     l466:
  2305     0136  3001               	movlw	1
  2306     0137                     u315:
  2307     0137  35F2               	lslf	___wmul@multiplicand,f
  2308     0138  0DF3               	rlf	___wmul@multiplicand+1,f
  2309     0139  0B89               	decfsz	9,f
  2310     013A  2937               	goto	u315
  2311     013B                     l1222:
  2312     013B  3001               	movlw	1
  2313     013C                     u325:
  2314     013C  36F1               	lsrf	___wmul@multiplier+1,f
  2315     013D  0CF0               	rrf	___wmul@multiplier,f
  2316     013E  0B89               	decfsz	9,f
  2317     013F  293C               	goto	u325
  2318     0140                     l1224:
  2319     0140  0870               	movf	___wmul@multiplier,w
  2320     0141  0471               	iorwf	___wmul@multiplier+1,w
  2321     0142  1D03               	btfss	3,2
  2322     0143  2945               	goto	u331
  2323     0144  2946               	goto	u330
  2324     0145                     u331:
  2325     0145  292E               	goto	l1218
  2326     0146                     u330:
  2327     0146                     l1226:
  2328     0146  0875               	movf	___wmul@product+1,w
  2329     0147  00F1               	movwf	?___wmul+1
  2330     0148  0874               	movf	___wmul@product,w
  2331     0149  00F0               	movwf	?___wmul
  2332     014A                     l468:
  2333     014A  0008               	return
  2334     014B                     __end_of___wmul:
  2335                           
  2336                           	psect	text5
  2337     01F0                     __ptext5:	
  2338 ;; *************** function _SPI1_IsTxReady *****************
  2339 ;; Defined at:
  2340 ;;		line 202 in file "mcc_generated_files/spi/src/mssp1.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  returnValue     1    0[COMMON] _Bool 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      _Bool 
  2347 ;; Registers used:
  2348 ;;		wreg, status,2, status,0
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2354 ;;      Params:         0       0       0       0       0       0       0       0
  2355 ;;      Locals:         1       0       0       0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0       0
  2357 ;;      Totals:         1       0       0       0       0       0       0       0
  2358 ;;Total ram usage:        1 bytes
  2359 ;; Hardware stack levels used: 1
  2360 ;; Hardware stack levels required when called: 4
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_spi_send_data
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368     01F0                     _SPI1_IsTxReady:	
  2369                           ;psect for function _SPI1_IsTxReady
  2370                           
  2371     01F0                     l1262:	
  2372                           ;incstack = 0
  2373                           ; Regs used in _SPI1_IsTxReady: [wreg+status,2+status,0]
  2374                           
  2375     01F0                     l1264:
  2376                           
  2377                           ;mcc_generated_files/spi/src/mssp1.c: 205:     if (SSP1CON1bits.SSPEN == 1)
  2378     01F0  0143               	movlb	3	; select bank3
  2379     01F1  1E90               	btfss	16,5	;volatile
  2380     01F2  29F4               	goto	u371
  2381     01F3  29F5               	goto	u370
  2382     01F4                     u371:
  2383     01F4  29FD               	goto	l1268
  2384     01F5                     u370:
  2385     01F5                     l1266:
  2386                           
  2387                           ;mcc_generated_files/spi/src/mssp1.c: 206:     {;mcc_generated_files/spi/src/mssp1.c: 20
      +                          7:         returnValue = ((PIR1bits.SSP1IF != 0U) ? 0: 1);
  2388     01F5  1003               	clrc
  2389     01F6  014E               	movlb	14	; select bank14
  2390     01F7  1C8D               	btfss	13,1	;volatile
  2391     01F8  1403               	setc
  2392     01F9  3000               	movlw	0
  2393     01FA  3D09               	addwfc	9,w
  2394     01FB  00F0               	movwf	SPI1_IsTxReady@returnValue
  2395                           
  2396                           ;mcc_generated_files/spi/src/mssp1.c: 208:     }
  2397     01FC  29FE               	goto	l1270
  2398     01FD                     l1268:
  2399                           
  2400                           ;mcc_generated_files/spi/src/mssp1.c: 210:     {;mcc_generated_files/spi/src/mssp1.c: 21
      +                          1:         returnValue = 0;
  2401     01FD  01F0               	clrf	SPI1_IsTxReady@returnValue
  2402     01FE                     l1270:
  2403                           
  2404                           ;mcc_generated_files/spi/src/mssp1.c: 213:     return returnValue;
  2405     01FE  0870               	movf	SPI1_IsTxReady@returnValue,w
  2406     01FF                     l108:
  2407     01FF  0008               	return
  2408     0200                     __end_of_SPI1_IsTxReady:
  2409                           
  2410                           	psect	text6
  2411     025E                     __ptext6:	
  2412 ;; *************** function _SPI1_Close *****************
  2413 ;; Defined at:
  2414 ;;		line 105 in file "mcc_generated_files/spi/src/mssp1.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		None
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2428 ;;      Params:         0       0       0       0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0
  2431 ;;      Totals:         0       0       0       0       0       0       0       0
  2432 ;;Total ram usage:        0 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 4
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_spi_send_data
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442     025E                     _SPI1_Close:	
  2443                           ;psect for function _SPI1_Close
  2444                           
  2445     025E                     l1250:	
  2446                           ;incstack = 0
  2447                           ; Regs used in _SPI1_Close: []
  2448                           
  2449                           
  2450                           ;mcc_generated_files/spi/src/mssp1.c: 107:     SSP1CON1bits.SSPEN = 0;
  2451     025E  0143               	movlb	3	; select bank3
  2452     025F  1290               	bcf	16,5	;volatile
  2453     0260                     l58:
  2454     0260  0008               	return
  2455     0261                     __end_of_SPI1_Close:
  2456                           
  2457                           	psect	text7
  2458     010C                     __ptext7:	
  2459 ;; *************** function _SPI1_BufferWrite *****************
  2460 ;; Defined at:
  2461 ;;		line 128 in file "mcc_generated_files/spi/src/mssp1.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  bufferData      1    0[COMMON] PTR unsigned char 
  2464 ;;		 -> main@spiData(4), 
  2465 ;;  bufferSize      2    1[COMMON] unsigned int 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  bufferInputS    2    3[COMMON] unsigned int 
  2468 ;;  bufferInput     1    5[COMMON] PTR unsigned char 
  2469 ;;		 -> main@spiData(4), 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2479 ;;      Params:         3       0       0       0       0       0       0       0
  2480 ;;      Locals:         3       0       0       0       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0
  2482 ;;      Totals:         6       0       0       0       0       0       0       0
  2483 ;;Total ram usage:        6 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; Hardware stack levels required when called: 4
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_spi_send_data
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493     010C                     _SPI1_BufferWrite:	
  2494                           ;psect for function _SPI1_BufferWrite
  2495                           
  2496     010C                     l1252:	
  2497                           ;incstack = 0
  2498                           ; Regs used in _SPI1_BufferWrite: [wreg+fsr1l+fsr1h+status,2+status,0]
  2499                           
  2500                           
  2501                           ;mcc_generated_files/spi/src/mssp1.c: 128: void SPI1_BufferWrite(uint8_t *bufferData, si
      +                          ze_t bufferSize);mcc_generated_files/spi/src/mssp1.c: 129: {;mcc_generated_files/spi/src
      +                          /mssp1.c: 130:     uint8_t *bufferInput = bufferData;
  2502     010C  0870               	movf	SPI1_BufferWrite@bufferData,w
  2503     010D  00F5               	movwf	SPI1_BufferWrite@bufferInput
  2504                           
  2505                           ;mcc_generated_files/spi/src/mssp1.c: 131:     size_t bufferInputSize = bufferSize;
  2506     010E  0872               	movf	SPI1_BufferWrite@bufferSize+1,w
  2507     010F  00F4               	movwf	SPI1_BufferWrite@bufferInputSize+1
  2508     0110  0871               	movf	SPI1_BufferWrite@bufferSize,w
  2509     0111  00F3               	movwf	SPI1_BufferWrite@bufferInputSize
  2510                           
  2511                           ;mcc_generated_files/spi/src/mssp1.c: 132:     while (0U != bufferInputSize)
  2512     0112  2925               	goto	l1260
  2513     0113                     l1254:
  2514                           
  2515                           ;mcc_generated_files/spi/src/mssp1.c: 133:     {;mcc_generated_files/spi/src/mssp1.c: 13
      +                          4:         SSP1BUF = *bufferInput;
  2516     0113  0875               	movf	SPI1_BufferWrite@bufferInput,w
  2517     0114  0086               	movwf	6
  2518     0115  0187               	clrf	7
  2519     0116  0801               	movf	1,w
  2520     0117  0143               	movlb	3	; select bank3
  2521     0118  008C               	movwf	12	;volatile
  2522     0119                     l72:	
  2523                           ;mcc_generated_files/spi/src/mssp1.c: 136:         {;mcc_generated_files/spi/src/mssp1.c
      +                          : 138:         }
  2524                           
  2525                           
  2526                           ;mcc_generated_files/spi/src/mssp1.c: 135:         while (!PIR1bits.SSP1IF)
  2527     0119  014E               	movlb	14	; select bank14
  2528     011A  1C8D               	btfss	13,1	;volatile
  2529     011B  291D               	goto	u351
  2530     011C  291E               	goto	u350
  2531     011D                     u351:
  2532     011D  2919               	goto	l72
  2533     011E                     u350:
  2534     011E                     l74:
  2535                           
  2536                           ;mcc_generated_files/spi/src/mssp1.c: 139:         PIR1bits.SSP1IF = 0;
  2537     011E  108D               	bcf	13,1	;volatile
  2538     011F                     l1256:
  2539                           
  2540                           ;mcc_generated_files/spi/src/mssp1.c: 140:         bufferInput++;
  2541     011F  3001               	movlw	1
  2542     0120  07F5               	addwf	SPI1_BufferWrite@bufferInput,f
  2543     0121                     l1258:
  2544                           
  2545                           ;mcc_generated_files/spi/src/mssp1.c: 141:         bufferInputSize--;
  2546     0121  3001               	movlw	1
  2547     0122  02F3               	subwf	SPI1_BufferWrite@bufferInputSize,f
  2548     0123  3000               	movlw	0
  2549     0124  3BF4               	subwfb	SPI1_BufferWrite@bufferInputSize+1,f
  2550     0125                     l1260:
  2551                           
  2552                           ;mcc_generated_files/spi/src/mssp1.c: 132:     while (0U != bufferInputSize)
  2553     0125  0873               	movf	SPI1_BufferWrite@bufferInputSize,w
  2554     0126  0474               	iorwf	SPI1_BufferWrite@bufferInputSize+1,w
  2555     0127  1D03               	btfss	3,2
  2556     0128  292A               	goto	u361
  2557     0129  292B               	goto	u360
  2558     012A                     u361:
  2559     012A  2913               	goto	l1254
  2560     012B                     u360:
  2561     012B                     l76:
  2562     012B  0008               	return
  2563     012C                     __end_of_SPI1_BufferWrite:
  2564                           
  2565                           	psect	text8
  2566     0200                     __ptext8:	
  2567 ;; *************** function _SYSTEM_Initialize *****************
  2568 ;; Defined at:
  2569 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;		None
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2583 ;;      Params:         0       0       0       0       0       0       0       0
  2584 ;;      Locals:         0       0       0       0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0
  2586 ;;      Totals:         0       0       0       0       0       0       0       0
  2587 ;;Total ram usage:        0 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 6
  2590 ;; This function calls:
  2591 ;;		_CLOCK_Initialize
  2592 ;;		_INTERRUPT_Initialize
  2593 ;;		_PIN_MANAGER_Initialize
  2594 ;;		_SPI1_Initialize
  2595 ;;		_TMR0_Initialize
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601     0200                     _SYSTEM_Initialize:	
  2602                           ;psect for function _SYSTEM_Initialize
  2603                           
  2604     0200                     l1366:	
  2605                           ;incstack = 0
  2606                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2607                           
  2608                           
  2609                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  2610     0200  3182  224E  3182   	fcall	_CLOCK_Initialize
  2611                           
  2612                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  2613     0203  3180  20AC  3182   	fcall	_PIN_MANAGER_Initialize
  2614     0206                     l1368:
  2615                           
  2616                           ;mcc_generated_files/system/src/system.c: 44:     TMR0_Initialize();
  2617     0206  3181  21B4  3182   	fcall	_TMR0_Initialize
  2618     0209                     l1370:
  2619                           
  2620                           ;mcc_generated_files/system/src/system.c: 45:     SPI1_Initialize();
  2621     0209  3182  2239  3182   	fcall	_SPI1_Initialize
  2622                           
  2623                           ;mcc_generated_files/system/src/system.c: 46:     INTERRUPT_Initialize();
  2624     020C  3182  221F  3182   	fcall	_INTERRUPT_Initialize
  2625     020F                     l267:
  2626     020F  0008               	return
  2627     0210                     __end_of_SYSTEM_Initialize:
  2628                           
  2629                           	psect	text9
  2630     01B4                     __ptext9:	
  2631 ;; *************** function _TMR0_Initialize *****************
  2632 ;; Defined at:
  2633 ;;		line 60 in file "mcc_generated_files/timer/src/tmr0.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2647 ;;      Params:         0       0       0       0       0       0       0       0
  2648 ;;      Locals:         0       0       0       0       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0       0
  2650 ;;      Totals:         0       0       0       0       0       0       0       0
  2651 ;;Total ram usage:        0 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; Hardware stack levels required when called: 4
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_SYSTEM_Initialize
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661     01B4                     _TMR0_Initialize:	
  2662                           ;psect for function _TMR0_Initialize
  2663                           
  2664     01B4                     l1328:	
  2665                           ;incstack = 0
  2666                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  2667                           
  2668                           
  2669                           ;mcc_generated_files/timer/src/tmr0.c: 61:     TMR0H = 0xFF;
  2670     01B4  30FF               	movlw	255
  2671     01B5  014B               	movlb	11	; select bank11
  2672     01B6  009D               	movwf	29	;volatile
  2673     01B7                     l1330:
  2674                           
  2675                           ;mcc_generated_files/timer/src/tmr0.c: 62:     TMR0L = 0x0;
  2676     01B7  019C               	clrf	28	;volatile
  2677     01B8                     l1332:
  2678                           
  2679                           ;mcc_generated_files/timer/src/tmr0.c: 64:     T0CON1 = (3 << 0x5)
  2680     01B8  3070               	movlw	112
  2681     01B9  009F               	movwf	31	;volatile
  2682     01BA                     l1334:
  2683                           
  2684                           ;mcc_generated_files/timer/src/tmr0.c: 68:     tmr0PeriodCount = ((uint16_t) TMR0H << 8)
      +                           | TMR0L;
  2685     01BA  081D               	movf	29,w	;volatile
  2686     01BB  00FC               	movwf	_tmr0PeriodCount+1	;volatile
  2687     01BC  081C               	movf	28,w	;volatile
  2688     01BD  00FB               	movwf	_tmr0PeriodCount	;volatile
  2689     01BE                     l1336:
  2690                           
  2691                           ;mcc_generated_files/timer/src/tmr0.c: 70:     TMR0_OverflowCallback = TMR0_DefaultOverf
      +                          lowCallback;
  2692     01BE  30DE               	movlw	low _TMR0_DefaultOverflowCallback
  2693     01BF  0140               	movlb	0	; select bank0
  2694     01C0  00A6               	movwf	_TMR0_OverflowCallback
  2695     01C1  3001               	movlw	high _TMR0_DefaultOverflowCallback
  2696     01C2  00A7               	movwf	_TMR0_OverflowCallback+1
  2697     01C3                     l1338:
  2698                           
  2699                           ;mcc_generated_files/timer/src/tmr0.c: 72:     PIR0bits.TMR0IF = 0;
  2700     01C3  014E               	movlb	14	; select bank14
  2701     01C4  128C               	bcf	12,5	;volatile
  2702     01C5                     l1340:
  2703                           
  2704                           ;mcc_generated_files/timer/src/tmr0.c: 73:     PIE0bits.TMR0IE = 1;
  2705     01C5  1696               	bsf	22,5	;volatile
  2706     01C6                     l1342:
  2707                           
  2708                           ;mcc_generated_files/timer/src/tmr0.c: 75:     T0CON0 = (0 << 0x0)
  2709     01C6  3090               	movlw	144
  2710     01C7  014B               	movlb	11	; select bank11
  2711     01C8  009E               	movwf	30	;volatile
  2712     01C9                     l316:
  2713     01C9  0008               	return
  2714     01CA                     __end_of_TMR0_Initialize:
  2715                           
  2716                           	psect	text10
  2717     0239                     __ptext10:	
  2718 ;; *************** function _SPI1_Initialize *****************
  2719 ;; Defined at:
  2720 ;;		line 63 in file "mcc_generated_files/spi/src/mssp1.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		status,2
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2734 ;;      Params:         0       0       0       0       0       0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0
  2737 ;;      Totals:         0       0       0       0       0       0       0       0
  2738 ;;Total ram usage:        0 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; Hardware stack levels required when called: 4
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_SYSTEM_Initialize
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748     0239                     _SPI1_Initialize:	
  2749                           ;psect for function _SPI1_Initialize
  2750                           
  2751     0239                     l1230:	
  2752                           ;incstack = 0
  2753                           ; Regs used in _SPI1_Initialize: [status,2]
  2754                           
  2755                           
  2756                           ;mcc_generated_files/spi/src/mssp1.c: 66:     PIE1bits.SSP1IE = 0;
  2757     0239  014E               	movlb	14	; select bank14
  2758     023A  1097               	bcf	23,1	;volatile
  2759                           
  2760                           ;mcc_generated_files/spi/src/mssp1.c: 67:     PIR1bits.SSP1IF = 0;
  2761     023B  108D               	bcf	13,1	;volatile
  2762     023C                     l1232:
  2763                           
  2764                           ;mcc_generated_files/spi/src/mssp1.c: 69:     SSP1STAT = 0x00;
  2765     023C  0143               	movlb	3	; select bank3
  2766     023D  018F               	clrf	15	;volatile
  2767                           
  2768                           ;mcc_generated_files/spi/src/mssp1.c: 70:     SSP1CON1 = 0x00;
  2769     023E  0190               	clrf	16	;volatile
  2770                           
  2771                           ;mcc_generated_files/spi/src/mssp1.c: 71:     SSP1CON3 = 0x00;
  2772     023F  0192               	clrf	18	;volatile
  2773                           
  2774                           ;mcc_generated_files/spi/src/mssp1.c: 72:     SSP1ADD = 0x00;
  2775     0240  018D               	clrf	13	;volatile
  2776     0241                     l47:
  2777     0241  0008               	return
  2778     0242                     __end_of_SPI1_Initialize:
  2779                           
  2780                           	psect	text11
  2781     00AC                     __ptext11:	
  2782 ;; *************** function _PIN_MANAGER_Initialize *****************
  2783 ;; Defined at:
  2784 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		status,2
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2798 ;;      Params:         0       0       0       0       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0       0       0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0       0
  2801 ;;      Totals:         0       0       0       0       0       0       0       0
  2802 ;;Total ram usage:        0 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 4
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_SYSTEM_Initialize
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812     00AC                     _PIN_MANAGER_Initialize:	
  2813                           ;psect for function _PIN_MANAGER_Initialize
  2814                           
  2815     00AC                     l1288:	
  2816                           ;incstack = 0
  2817                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2818                           
  2819                           
  2820                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  2821     00AC  0140               	movlb	0	; select bank0
  2822     00AD  0198               	clrf	24	;volatile
  2823                           
  2824                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  2825     00AE  0199               	clrf	25	;volatile
  2826                           
  2827                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  2828     00AF  019A               	clrf	26	;volatile
  2829     00B0                     l1290:
  2830                           
  2831                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3B;
  2832     00B0  303B               	movlw	59
  2833     00B1  0092               	movwf	18	;volatile
  2834     00B2                     l1292:
  2835                           
  2836                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x70;
  2837     00B2  3070               	movlw	112
  2838     00B3  0093               	movwf	19	;volatile
  2839     00B4                     l1294:
  2840                           
  2841                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xFF;
  2842     00B4  30FF               	movlw	255
  2843     00B5  0094               	movwf	20	;volatile
  2844     00B6                     l1296:
  2845                           
  2846                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x33;
  2847     00B6  3033               	movlw	51
  2848     00B7  017E               	movlb	62	; select bank62
  2849     00B8  00B8               	movwf	56	;volatile
  2850     00B9                     l1298:
  2851                           
  2852                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x20;
  2853     00B9  3020               	movlw	32
  2854     00BA  00C3               	movwf	67	;volatile
  2855     00BB                     l1300:
  2856                           
  2857                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xBB;
  2858     00BB  30BB               	movlw	187
  2859     00BC  00CE               	movwf	78	;volatile
  2860                           
  2861                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
  2862     00BD  01B9               	clrf	57	;volatile
  2863                           
  2864                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
  2865     00BE  01C4               	clrf	68	;volatile
  2866                           
  2867                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
  2868     00BF  01CF               	clrf	79	;volatile
  2869     00C0                     l1302:
  2870                           
  2871                           ;mcc_generated_files/system/src/pins.c: 67:     WPUCbits.WPUC2=1;
  2872     00C0  154F               	bsf	79,2	;volatile
  2873                           
  2874                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONA = 0x0;
  2875     00C1  01BA               	clrf	58	;volatile
  2876                           
  2877                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONB = 0x0;
  2878     00C2  01C5               	clrf	69	;volatile
  2879                           
  2880                           ;mcc_generated_files/system/src/pins.c: 75:     ODCONC = 0x0;
  2881     00C3  01D0               	clrf	80	;volatile
  2882     00C4                     l1304:
  2883                           
  2884                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONA = 0x37;
  2885     00C4  3037               	movlw	55
  2886     00C5  00BB               	movwf	59	;volatile
  2887     00C6                     l1306:
  2888                           
  2889                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONB = 0xF0;
  2890     00C6  30F0               	movlw	240
  2891     00C7  00C6               	movwf	70	;volatile
  2892     00C8                     l1308:
  2893                           
  2894                           ;mcc_generated_files/system/src/pins.c: 81:     SLRCONC = 0xFF;
  2895     00C8  30FF               	movlw	255
  2896     00C9  00D1               	movwf	81	;volatile
  2897     00CA                     l1310:
  2898                           
  2899                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  2900     00CA  303F               	movlw	63
  2901     00CB  00BC               	movwf	60	;volatile
  2902     00CC                     l1312:
  2903                           
  2904                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  2905     00CC  30F0               	movlw	240
  2906     00CD  00C7               	movwf	71	;volatile
  2907     00CE                     l1314:
  2908                           
  2909                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  2910     00CE  30FF               	movlw	255
  2911     00CF  00D2               	movwf	82	;volatile
  2912     00D0                     l1316:
  2913                           
  2914                           ;mcc_generated_files/system/src/pins.c: 92:     SSP1DATPPS = 0xE;
  2915     00D0  300E               	movlw	14
  2916     00D1  017D               	movlb	61	; select bank61
  2917     00D2  00C6               	movwf	70	;volatile
  2918     00D3                     l1318:
  2919                           
  2920                           ;mcc_generated_files/system/src/pins.c: 93:     SSP1SSPPS = 0x16;
  2921     00D3  3016               	movlw	22
  2922     00D4  00C7               	movwf	71	;volatile
  2923     00D5                     l1320:
  2924                           
  2925                           ;mcc_generated_files/system/src/pins.c: 94:     INTPPS = 0x12;
  2926     00D5  3012               	movlw	18
  2927     00D6  0090               	movwf	16	;volatile
  2928     00D7                     l1322:
  2929                           
  2930                           ;mcc_generated_files/system/src/pins.c: 95:     RB7PPS = 0x08;
  2931     00D7  3008               	movlw	8
  2932     00D8  017E               	movlb	62	; select bank62
  2933     00D9  009F               	movwf	31	;volatile
  2934     00DA                     l1324:
  2935                           
  2936                           ;mcc_generated_files/system/src/pins.c: 96:     SSP1CLKPPS = 0xC;
  2937     00DA  300C               	movlw	12
  2938     00DB  017D               	movlb	61	; select bank61
  2939     00DC  00C5               	movwf	69	;volatile
  2940     00DD                     l1326:
  2941                           
  2942                           ;mcc_generated_files/system/src/pins.c: 97:     RB4PPS = 0x07;
  2943     00DD  3007               	movlw	7
  2944     00DE  017E               	movlb	62	; select bank62
  2945     00DF  009C               	movwf	28	;volatile
  2946                           
  2947                           ;mcc_generated_files/system/src/pins.c: 106:     IOCAP = 0x0;
  2948     00E0  01BD               	clrf	61	;volatile
  2949                           
  2950                           ;mcc_generated_files/system/src/pins.c: 107:     IOCAN = 0x0;
  2951     00E1  01BE               	clrf	62	;volatile
  2952                           
  2953                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAF = 0x0;
  2954     00E2  01BF               	clrf	63	;volatile
  2955                           
  2956                           ;mcc_generated_files/system/src/pins.c: 109:     IOCBP = 0x0;
  2957     00E3  01C8               	clrf	72	;volatile
  2958                           
  2959                           ;mcc_generated_files/system/src/pins.c: 110:     IOCBN = 0x0;
  2960     00E4  01C9               	clrf	73	;volatile
  2961                           
  2962                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBF = 0x0;
  2963     00E5  01CA               	clrf	74	;volatile
  2964                           
  2965                           ;mcc_generated_files/system/src/pins.c: 112:     IOCCP = 0x0;
  2966     00E6  01D3               	clrf	83	;volatile
  2967                           
  2968                           ;mcc_generated_files/system/src/pins.c: 113:     IOCCN = 0x0;
  2969     00E7  01D4               	clrf	84	;volatile
  2970                           
  2971                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCF = 0x0;
  2972     00E8  01D5               	clrf	85	;volatile
  2973     00E9                     l245:
  2974     00E9  0008               	return
  2975     00EA                     __end_of_PIN_MANAGER_Initialize:
  2976                           
  2977                           	psect	text12
  2978     021F                     __ptext12:	
  2979 ;; *************** function _INTERRUPT_Initialize *****************
  2980 ;; Defined at:
  2981 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, pclath, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2995 ;;      Params:         0       0       0       0       0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 5
  3002 ;; This function calls:
  3003 ;;		_INT_SetInterruptHandler
  3004 ;; This function is called by:
  3005 ;;		_SYSTEM_Initialize
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009     021F                     _INTERRUPT_Initialize:	
  3010                           ;psect for function _INTERRUPT_Initialize
  3011                           
  3012     021F                     l1274:	
  3013                           ;incstack = 0
  3014                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3015                           
  3016                           
  3017                           ;mcc_generated_files/system/src/interrupt.c: 43:     (PIR0bits.INTF = 0);
  3018     021F  014E               	movlb	14	; select bank14
  3019     0220  100C               	bcf	12,0	;volatile
  3020                           
  3021                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTEDG = 0);
  3022     0221  100B               	bcf	11,0	;volatile
  3023     0222                     l1276:
  3024                           
  3025                           ;mcc_generated_files/system/src/interrupt.c: 46:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  3026     0222  305A               	movlw	low _INT_DefaultInterruptHandler
  3027     0223  00F0               	movwf	INT_SetInterruptHandler@InterruptHandler
  3028     0224  3002               	movlw	high _INT_DefaultInterruptHandler
  3029     0225  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  3030     0226  3182  2248  3182   	fcall	_INT_SetInterruptHandler
  3031     0229                     l1278:
  3032                           
  3033                           ;mcc_generated_files/system/src/interrupt.c: 47:     (PIE0bits.INTE = 1);
  3034     0229  014E               	movlb	14	; select bank14
  3035     022A  1416               	bsf	22,0	;volatile
  3036     022B                     l135:
  3037     022B  0008               	return
  3038     022C                     __end_of_INTERRUPT_Initialize:
  3039                           
  3040                           	psect	text13
  3041     0248                     __ptext13:	
  3042 ;; *************** function _INT_SetInterruptHandler *****************
  3043 ;; Defined at:
  3044 ;;		line 89 in file "mcc_generated_files/system/src/interrupt.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  3047 ;;		 -> INT_DefaultInterruptHandler(1), 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3059 ;;      Params:         2       0       0       0       0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0       0       0       0
  3062 ;;      Totals:         2       0       0       0       0       0       0       0
  3063 ;;Total ram usage:        2 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 4
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_INTERRUPT_Initialize
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073     0248                     _INT_SetInterruptHandler:	
  3074                           ;psect for function _INT_SetInterruptHandler
  3075                           
  3076     0248                     l1212:	
  3077                           ;incstack = 0
  3078                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  3079                           
  3080                           
  3081                           ;mcc_generated_files/system/src/interrupt.c: 90:     INT_InterruptHandler = InterruptHan
      +                          dler;
  3082     0248  0871               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  3083     0249  0140               	movlb	0	; select bank0
  3084     024A  00A9               	movwf	_INT_InterruptHandler+1
  3085     024B  0870               	movf	INT_SetInterruptHandler@InterruptHandler,w
  3086     024C  00A8               	movwf	_INT_InterruptHandler
  3087     024D                     l156:
  3088     024D  0008               	return
  3089     024E                     __end_of_INT_SetInterruptHandler:
  3090                           
  3091                           	psect	text14
  3092     024E                     __ptext14:	
  3093 ;; *************** function _CLOCK_Initialize *****************
  3094 ;; Defined at:
  3095 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		status,2
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3109 ;;      Params:         0       0       0       0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0
  3112 ;;      Totals:         0       0       0       0       0       0       0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; Hardware stack levels required when called: 4
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_SYSTEM_Initialize
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123     024E                     _CLOCK_Initialize:	
  3124                           ;psect for function _CLOCK_Initialize
  3125                           
  3126     024E                     l1284:	
  3127                           ;incstack = 0
  3128                           ; Regs used in _CLOCK_Initialize: [status,2]
  3129                           
  3130                           
  3131                           ;mcc_generated_files/system/src/clock.c: 41:     OSCEN = (0 << 0x6)
  3132     024E  0151               	movlb	17	; select bank17
  3133     024F  0191               	clrf	17	;volatile
  3134     0250                     l1286:
  3135                           
  3136                           ;mcc_generated_files/system/src/clock.c: 45:     OSCFRQ = (5 << 0x0);
  3137     0250  3005               	movlw	5
  3138     0251  0093               	movwf	19	;volatile
  3139                           
  3140                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  3141     0252  0192               	clrf	18	;volatile
  3142     0253                     l168:
  3143     0253  0008               	return
  3144     0254                     __end_of_CLOCK_Initialize:
  3145                           
  3146                           	psect	intentry
  3147     0004                     __pintentry:	
  3148 ;; *************** function _INTERRUPT_InterruptManager *****************
  3149 ;; Defined at:
  3150 ;;		line 58 in file "mcc_generated_files/system/src/interrupt.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0, pclath, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3164 ;;      Params:         0       0       0       0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0
  3167 ;;      Totals:         0       0       0       0       0       0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 3
  3171 ;; This function calls:
  3172 ;;		_INT_ISR
  3173 ;;		_TMR0_ISR
  3174 ;; This function is called by:
  3175 ;;		Interrupt level 1
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179     0004                     _INTERRUPT_InterruptManager:
  3180                           
  3181                           ;incstack = 0
  3182     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3183                           
  3184                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3185     0005  3180               	pagesel	$
  3186     0006                     i1l1386:
  3187                           
  3188                           ;mcc_generated_files/system/src/interrupt.c: 60:     if (PIE0bits.INTE == 1 && PIR0bits.
      +                          INTF == 1) {
  3189     0006  014E               	movlb	14	; select bank14
  3190     0007  1C16               	btfss	22,0	;volatile
  3191     0008  280A               	goto	u45_21
  3192     0009  280B               	goto	u45_20
  3193     000A                     u45_21:
  3194     000A  2813               	goto	i1l140
  3195     000B                     u45_20:
  3196     000B                     i1l1388:
  3197     000B  1C0C               	btfss	12,0	;volatile
  3198     000C  280E               	goto	u46_21
  3199     000D  280F               	goto	u46_20
  3200     000E                     u46_21:
  3201     000E  2813               	goto	i1l140
  3202     000F                     u46_20:
  3203     000F                     i1l1390:
  3204                           
  3205                           ;mcc_generated_files/system/src/interrupt.c: 61:         INT_ISR();
  3206     000F  3182  2254  3180   	fcall	_INT_ISR
  3207                           
  3208                           ;mcc_generated_files/system/src/interrupt.c: 62:     } else if (INTCONbits.PEIE == 1) {
  3209     0012  2823               	goto	i1l146
  3210     0013                     i1l140:
  3211     0013  1F0B               	btfss	11,6	;volatile
  3212     0014  2816               	goto	u47_21
  3213     0015  2817               	goto	u47_20
  3214     0016                     u47_21:
  3215     0016  2823               	goto	i1l146
  3216     0017                     u47_20:
  3217     0017                     i1l1392:
  3218                           
  3219                           ;mcc_generated_files/system/src/interrupt.c: 63:         if (PIE0bits.TMR0IE == 1 && PIR
      +                          0bits.TMR0IF == 1) {
  3220     0017  1E96               	btfss	22,5	;volatile
  3221     0018  281A               	goto	u48_21
  3222     0019  281B               	goto	u48_20
  3223     001A                     u48_21:
  3224     001A  2823               	goto	i1l145
  3225     001B                     u48_20:
  3226     001B                     i1l1394:
  3227     001B  1E8C               	btfss	12,5	;volatile
  3228     001C  281E               	goto	u49_21
  3229     001D  281F               	goto	u49_20
  3230     001E                     u49_21:
  3231     001E  2823               	goto	i1l145
  3232     001F                     u49_20:
  3233     001F                     i1l1396:
  3234                           
  3235                           ;mcc_generated_files/system/src/interrupt.c: 64:             TMR0_ISR();
  3236     001F  3181  21CA  3180   	fcall	_TMR0_ISR
  3237                           
  3238                           ;mcc_generated_files/system/src/interrupt.c: 65:         }
  3239     0022  2823               	goto	i1l146
  3240     0023                     i1l145:	
  3241                           ;mcc_generated_files/system/src/interrupt.c: 72:     }
  3242                           
  3243     0023                     i1l146:
  3244     0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3245     0024  0009               	retfie
  3246     0025                     __end_of_INTERRUPT_InterruptManager:
  3247                           
  3248                           	psect	text16
  3249     01CA                     __ptext16:	
  3250 ;; *************** function _TMR0_ISR *****************
  3251 ;; Defined at:
  3252 ;;		line 132 in file "mcc_generated_files/timer/src/tmr0.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3266 ;;      Params:         0       0       0       0       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0       0
  3269 ;;      Totals:         0       0       0       0       0       0       0       0
  3270 ;;Total ram usage:        0 bytes
  3271 ;; Hardware stack levels used: 1
  3272 ;; Hardware stack levels required when called: 1
  3273 ;; This function calls:
  3274 ;;		NULL
  3275 ;;		_TMR0_DefaultOverflowCallback
  3276 ;; This function is called by:
  3277 ;;		_INTERRUPT_InterruptManager
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281     01CA                     _TMR0_ISR:	
  3282                           ;psect for function _TMR0_ISR
  3283                           
  3284     01CA                     i1l1356:	
  3285                           ;incstack = 0
  3286                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3287                           
  3288                           
  3289                           ;mcc_generated_files/timer/src/tmr0.c: 133:     TMR0H = (uint8_t) (tmr0PeriodCount >> 8)
      +                          ;
  3290     01CA  087C               	movf	_tmr0PeriodCount+1,w	;volatile
  3291     01CB  014B               	movlb	11	; select bank11
  3292     01CC  009D               	movwf	29	;volatile
  3293     01CD                     i1l1358:
  3294                           
  3295                           ;mcc_generated_files/timer/src/tmr0.c: 134:     TMR0L = (uint8_t) (tmr0PeriodCount);
  3296     01CD  087B               	movf	_tmr0PeriodCount,w	;volatile
  3297     01CE  009C               	movwf	28	;volatile
  3298     01CF                     i1l1360:
  3299                           
  3300                           ;mcc_generated_files/timer/src/tmr0.c: 136:     if (((void*)0) != TMR0_OverflowCallback)
      +                           {
  3301     01CF  0140               	movlb	0	; select bank0
  3302     01D0  0826               	movf	_TMR0_OverflowCallback,w
  3303     01D1  0427               	iorwf	_TMR0_OverflowCallback+1,w
  3304     01D2  1903               	btfsc	3,2
  3305     01D3  29D5               	goto	u40_21
  3306     01D4  29D6               	goto	u40_20
  3307     01D5                     u40_21:
  3308     01D5  29DB               	goto	i1l1364
  3309     01D6                     u40_20:
  3310     01D6                     i1l1362:
  3311                           
  3312                           ;mcc_generated_files/timer/src/tmr0.c: 137:         TMR0_OverflowCallback();
  3313     01D6  0827               	movf	_TMR0_OverflowCallback+1,w
  3314     01D7  008A               	movwf	10
  3315     01D8  0826               	movf	_TMR0_OverflowCallback,w
  3316     01D9  000A               	callw
  3317     01DA  3181               	pagesel	$
  3318     01DB                     i1l1364:
  3319                           
  3320                           ;mcc_generated_files/timer/src/tmr0.c: 139:     PIR0bits.TMR0IF = 0;
  3321     01DB  014E               	movlb	14	; select bank14
  3322     01DC  128C               	bcf	12,5	;volatile
  3323     01DD                     i1l344:
  3324     01DD  0008               	return
  3325     01DE                     __end_of_TMR0_ISR:
  3326                           
  3327                           	psect	text17
  3328     01DE                     __ptext17:	
  3329 ;; *************** function _TMR0_DefaultOverflowCallback *****************
  3330 ;; Defined at:
  3331 ;;		line 146 in file "mcc_generated_files/timer/src/tmr0.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3345 ;;      Params:         0       0       0       0       0       0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0
  3348 ;;      Totals:         0       0       0       0       0       0       0       0
  3349 ;;Total ram usage:        0 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_TMR0_Initialize
  3355 ;;		_TMR0_ISR
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359     01DE                     _TMR0_DefaultOverflowCallback:	
  3360                           ;psect for function _TMR0_DefaultOverflowCallback
  3361                           
  3362     01DE                     i1l1344:	
  3363                           ;incstack = 0
  3364                           ; Regs used in _TMR0_DefaultOverflowCallback: [wreg+status,2+status,0]
  3365                           
  3366                           
  3367                           ;mcc_generated_files/timer/src/tmr0.c: 148:     divider--;
  3368     01DE  3001               	movlw	1
  3369     01DF  0140               	movlb	0	; select bank0
  3370     01E0  02A4               	subwf	_divider,f
  3371     01E1  3000               	movlw	0
  3372     01E2  3BA5               	subwfb	_divider+1,f
  3373     01E3                     i1l1346:
  3374                           
  3375                           ;mcc_generated_files/timer/src/tmr0.c: 149:     if (divider == 0)
  3376     01E3  0824               	movf	_divider,w
  3377     01E4  0425               	iorwf	_divider+1,w
  3378     01E5  1D03               	btfss	3,2
  3379     01E6  29E8               	goto	u39_21
  3380     01E7  29E9               	goto	u39_20
  3381     01E8                     u39_21:
  3382     01E8  29EF               	goto	i1l351
  3383     01E9                     u39_20:
  3384     01E9                     i1l1348:
  3385                           
  3386                           ;mcc_generated_files/timer/src/tmr0.c: 150:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          151:         timerOverflow = 1;
  3387     01E9  3001               	movlw	1
  3388     01EA  00AE               	movwf	_timerOverflow
  3389     01EB                     i1l1350:
  3390                           
  3391                           ;mcc_generated_files/timer/src/tmr0.c: 152:         divider = 0xFFFF;
  3392     01EB  30FF               	movlw	255
  3393     01EC  00A4               	movwf	_divider
  3394     01ED  30FF               	movlw	255
  3395     01EE  00A5               	movwf	_divider+1
  3396     01EF                     i1l351:
  3397     01EF  0008               	return
  3398     01F0                     __end_of_TMR0_DefaultOverflowCallback:
  3399                           
  3400                           	psect	text18
  3401     0254                     __ptext18:	
  3402 ;; *************** function _INT_ISR *****************
  3403 ;; Defined at:
  3404 ;;		line 75 in file "mcc_generated_files/system/src/interrupt.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0, pclath, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3418 ;;      Params:         0       0       0       0       0       0       0       0
  3419 ;;      Locals:         0       0       0       0       0       0       0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0       0
  3421 ;;      Totals:         0       0       0       0       0       0       0       0
  3422 ;;Total ram usage:        0 bytes
  3423 ;; Hardware stack levels used: 1
  3424 ;; Hardware stack levels required when called: 2
  3425 ;; This function calls:
  3426 ;;		_INT_CallBack
  3427 ;; This function is called by:
  3428 ;;		_INTERRUPT_InterruptManager
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432     0254                     _INT_ISR:	
  3433                           ;psect for function _INT_ISR
  3434                           
  3435     0254                     i1l1352:	
  3436                           ;incstack = 0
  3437                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  3438                           
  3439                           
  3440                           ;mcc_generated_files/system/src/interrupt.c: 76:     (PIR0bits.INTF = 0);
  3441     0254  014E               	movlb	14	; select bank14
  3442     0255  100C               	bcf	12,0	;volatile
  3443     0256                     i1l1354:
  3444                           
  3445                           ;mcc_generated_files/system/src/interrupt.c: 79:     INT_CallBack();
  3446     0256  3182  222C  3182   	fcall	_INT_CallBack
  3447     0259                     i1l149:
  3448     0259  0008               	return
  3449     025A                     __end_of_INT_ISR:
  3450                           
  3451                           	psect	text19
  3452     022C                     __ptext19:	
  3453 ;; *************** function _INT_CallBack *****************
  3454 ;; Defined at:
  3455 ;;		line 82 in file "mcc_generated_files/system/src/interrupt.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;		None
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2, status,0, pclath, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3469 ;;      Params:         0       0       0       0       0       0       0       0
  3470 ;;      Locals:         0       0       0       0       0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0
  3472 ;;      Totals:         0       0       0       0       0       0       0       0
  3473 ;;Total ram usage:        0 bytes
  3474 ;; Hardware stack levels used: 1
  3475 ;; Hardware stack levels required when called: 1
  3476 ;; This function calls:
  3477 ;;		NULL
  3478 ;;		_INT_DefaultInterruptHandler
  3479 ;; This function is called by:
  3480 ;;		_INT_ISR
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484     022C                     _INT_CallBack:	
  3485                           ;psect for function _INT_CallBack
  3486                           
  3487     022C                     i1l1280:	
  3488                           ;incstack = 0
  3489                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3490                           
  3491                           
  3492                           ;mcc_generated_files/system/src/interrupt.c: 84:     if (INT_InterruptHandler) {
  3493     022C  0140               	movlb	0	; select bank0
  3494     022D  0828               	movf	_INT_InterruptHandler,w
  3495     022E  0429               	iorwf	_INT_InterruptHandler+1,w
  3496     022F  1903               	btfsc	3,2
  3497     0230  2A32               	goto	u38_21
  3498     0231  2A33               	goto	u38_20
  3499     0232                     u38_21:
  3500     0232  2A38               	goto	i1l153
  3501     0233                     u38_20:
  3502     0233                     i1l1282:
  3503                           
  3504                           ;mcc_generated_files/system/src/interrupt.c: 85:         INT_InterruptHandler();
  3505     0233  0829               	movf	_INT_InterruptHandler+1,w
  3506     0234  008A               	movwf	10
  3507     0235  0828               	movf	_INT_InterruptHandler,w
  3508     0236  000A               	callw
  3509     0237  3182               	pagesel	$
  3510     0238                     i1l153:
  3511     0238  0008               	return
  3512     0239                     __end_of_INT_CallBack:
  3513                           
  3514                           	psect	text20
  3515     025A                     __ptext20:	
  3516 ;; *************** function _INT_DefaultInterruptHandler *****************
  3517 ;; Defined at:
  3518 ;;		line 93 in file "mcc_generated_files/system/src/interrupt.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		None
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3532 ;;      Params:         0       0       0       0       0       0       0       0
  3533 ;;      Locals:         0       0       0       0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0
  3535 ;;      Totals:         0       0       0       0       0       0       0       0
  3536 ;;Total ram usage:        0 bytes
  3537 ;; Hardware stack levels used: 1
  3538 ;; This function calls:
  3539 ;;		Nothing
  3540 ;; This function is called by:
  3541 ;;		_INTERRUPT_Initialize
  3542 ;;		_INT_CallBack
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546     025A                     _INT_DefaultInterruptHandler:	
  3547                           ;psect for function _INT_DefaultInterruptHandler
  3548                           
  3549     025A                     i1l1214:	
  3550                           ;incstack = 0
  3551                           ; Regs used in _INT_DefaultInterruptHandler: []
  3552                           
  3553                           
  3554                           ;mcc_generated_files/system/src/interrupt.c: 96:     pushed = 1;
  3555     025A  3001               	movlw	1
  3556     025B  0140               	movlb	0	; select bank0
  3557     025C  00AF               	movwf	_pushed
  3558     025D                     i1l159:
  3559     025D  0008               	return
  3560     025E                     __end_of_INT_DefaultInterruptHandler:
  3561     0001                     ___latbits      equ	1
  3562     007E                     btemp           set	126	;btemp
  3563     007E                     int$flags       set	126
  3564     007E                     wtemp0          set	126
  3565                           
  3566                           	psect	config
  3567                           
  3568                           ;Config register CONFIG1 @ 0x8007
  3569                           ;	External Oscillator Mode Selection bits
  3570                           ;	FEXTOSC = ECH, EC (external clock) 16 MHz and above
  3571                           ;	Power-up Default Value for COSC bits
  3572                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  3573                           ;	Clock Out Enable bit
  3574                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  3575                           ;	VDD Range Analog Calibration Selection bit
  3576                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  3577     8007                     	org	32775
  3578     8007  3FCF               	dw	16335
  3579                           
  3580                           ;Config register CONFIG2 @ 0x8008
  3581                           ;	Master Clear Enable bit
  3582                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  3583                           ;	Power-up Timer Selection bits
  3584                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3585                           ;	WDT Operating Mode bits
  3586                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  3587                           ;	Brown-out Reset Enable bits
  3588                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  3589                           ;	Brown-out Reset Voltage Selection bit
  3590                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  3591                           ;	PPSLOCKED One-Way Set Enable bit
  3592                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  3593                           ;	Stack Overflow/Underflow Reset Enable bit
  3594                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  3595     8008                     	org	32776
  3596     8008  3FE7               	dw	16359
  3597                           
  3598                           ;Config register CONFIG4 @ 0x800A
  3599                           ;	Boot Block Size Selection bits
  3600                           ;	BBSIZE = BB512, 512 words boot block size
  3601                           ;	Boot Block Enable bit
  3602                           ;	BBEN = OFF, Boot Block is disabled
  3603                           ;	SAF Enable bit
  3604                           ;	SAFEN = OFF, SAF is disabled
  3605                           ;	Application Block Write Protection bit
  3606                           ;	WRTAPP = OFF, Application Block is not write-protected
  3607                           ;	Boot Block Write Protection bit
  3608                           ;	WRTB = OFF, Boot Block is not write-protected
  3609                           ;	Configuration Registers Write Protection bit
  3610                           ;	WRTC = OFF, Configuration Registers are not write-protected
  3611                           ;	Storage Area Flash (SAF) Write Protection bit
  3612                           ;	WRTSAF = OFF, SAF is not write-protected
  3613                           ;	Low Voltage Programming Enable bit
  3614                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  3615     800A                     	org	32778
  3616     800A  3FFF               	dw	16383
  3617                           
  3618                           ;Config register CONFIG5 @ 0x800B
  3619                           ;	User Program Flash Memory Code Protection bit
  3620                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  3621     800B                     	org	32779
  3622     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    75
    Data        6
    BSS         5
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      4      16
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    NULL$0	PTR FTN()void  size(2) Largest target is 0

    S38$4$0	PTR void  size(2) Largest target is 0

    S38$5$0	PTR void  size(2) Largest target is 0

    S38$6$0	PTR void  size(1) Largest target is 4
		 -> main@spiData(BANK0[4]), 

    S38SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S38SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S38SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S38SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S38SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S38SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S38SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S38SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S38SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S38SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S38SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S38SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S38SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S38SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S518$9$0	PTR FTN()void  size(2) Largest target is 0

    S518TIMER_INTERFACE$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    S518TIMER_INTERFACE$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    S518TIMER_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    S518TIMER_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    S518TIMER_INTERFACE$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    S518TIMER_INTERFACE$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    S518TIMER_INTERFACE$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    S518TIMER_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    S518TIMER_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    S518TIMER_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S518TIMER_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    SPI1_BufferWrite@bufferData	PTR unsigned char  size(1) Largest target is 4
		 -> main@spiData(BANK0[4]), 

    SPI1_BufferWrite@bufferInput	PTR unsigned char  size(1) Largest target is 4
		 -> main@spiData(BANK0[4]), 

    SPI1_Client$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_Client$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_Client$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_Client$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_Client$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_Client$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_Client$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_Client$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_Client$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_Client$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_Client$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_Client$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_Client$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SPI1_Client$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    spi_send_data@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@spiData(BANK0[4]), 

    Timer0$CounterGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_CounterGet(), 

    Timer0$CounterSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_CounterSet(), 

    Timer0$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Deinitialize(), 

    Timer0$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    Timer0$MaxCountGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_MaxCountGet(), 

    Timer0$PeriodGet	PTR FTN()unsigned long  size(2) Largest target is 4
		 -> TMR0_PeriodGet(), 

    Timer0$PeriodSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> TMR0_PeriodSet(), 

    Timer0$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    Timer0$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultOverflowCallback(), NULL(), 


Critical Paths under _main in COMMON

    _main->_spi_send_data
    _spi_send_data->_SPI1_Open
    _SPI1_Open->___wmul
    _INTERRUPT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     403
                                              0 BANK0      4     4      0
                  _SYSTEM_Initialize
                      _spi_send_data
                         _toggle_led
 ---------------------------------------------------------------------------------
 (1) _toggle_led                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_send_data                                        1     0      1     356
                                             10 COMMON     1     0      1
                   _SPI1_BufferWrite
                         _SPI1_Close
                     _SPI1_IsTxReady
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (2) _SPI1_Open                                            4     3      1     214
                                              6 COMMON     4     3      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     100
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI1_IsTxReady                                       1     1      0      25
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_BufferWrite                                     6     3      3      94
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                            _INT_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultOverflowCallback                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                                NULL *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
   _spi_send_data
     _SPI1_BufferWrite
     _SPI1_Close
     _SPI1_IsTxReady
     _SPI1_Open
       ___wmul
   _toggle_led

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       NULL(Fake) *
       _INT_DefaultInterruptHandler *
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     11      14    100.0%
BANK0               80      4      16     20.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      30      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Jan 19 16:35:49 2025

                      _SPI1_ByteExchange 0000                           ?_spi_send_data 007A  
                                     l47 0241                                       l55 00AB  
                                     l72 0119                                       l74 011E  
                                     l58 0260                                       l76 012B  
                    ___wmul@multiplicand 0072                                      l108 01FF  
                                    l135 022B                                      l156 024D  
                                    l316 01C9                                      l245 00E9  
                                    l168 0253                                      l267 020F  
                                    l391 021E                                      l466 0136  
                                    l468 014A                                      l398 0168  
                                    u300 0132                                      u301 0131  
                                    u330 0146                                      u410 0216  
                                    u331 0145                                      u315 0137  
                                    u411 0214                                      u340 0045  
                                    u420 0217                                      u500 00FD  
                                    u325 013C                                      u341 0044  
                                    u501 00FC                                      u350 011E  
                                    u430 0154                                      u351 011D  
                                    u431 0153                                      u360 012B  
                                    u440 015C                                      u361 012A  
                                    u441 015B                                      u370 01F5  
                                    u371 01F4                                      wreg 0009  
                                   l1212 0248                                     l1300 00BB  
                                   l1220 0132                                     l1310 00CA  
                                   l1302 00C0                                     l1230 0239  
                                   l1222 013B                                     l1320 00D5  
                                   l1312 00CC                                     l1304 00C4  
                                   l1232 023C                                     l1224 0140  
                                   l1216 012C                                     l1240 00A5  
                                   l1400 00EA                                     l1322 00D7  
                                   l1314 00CE                                     l1306 00C6  
                                   l1330 01B7                                     l1250 025E  
                                   l1226 0146                                     l1218 012E  
                                   l1242 00A6                                     l1234 0040  
                                   l1410 00FD                                     l1402 00ED  
                                   l1324 00DA                                     l1316 00D0  
                                   l1308 00C8                                     l1340 01C5  
                                   l1332 01B8                                     l1260 0125  
                                   l1252 010C                                     l1244 00A9  
                                   l1236 0040                                     l1412 0100  
                                   l1404 00EE                                     l1326 00DD  
                                   l1318 00D3                                     l1342 01C6  
                                   l1334 01BA                                     l1254 0113  
                                   l1270 01FE                                     l1262 01F0  
                                   l1246 00AA                                     l1238 0045  
                                   l1414 0102                                     l1406 00EF  
                                   l1336 01BE                                     l1328 01B4  
                                   l1256 011F                                     l1264 01F0  
                                   l1416 0107                                     l1408 00F8  
                                   l1274 021F                                     l1290 00B0  
                                   l1338 01C3                                     l1370 0209  
                                   l1258 0121                                     l1266 01F5  
                                   l1284 024E                                     l1276 0222  
                                   l1292 00B2                                     l1268 01FD  
                                   l1380 0154                                     l1372 0210  
                                   l1286 0250                                     l1278 0229  
                                   l1294 00B4                                     l1366 0200  
                                   l1382 015C                                     l1374 0218  
                                   l1296 00B6                                     l1288 00AC  
                                   l1368 0206                                     l1384 0165  
                                   l1376 014B                                     l1298 00B9  
                                   _LATA 0018                                     _LATB 0019  
                        __end_of_INT_ISR 025A                                     _LATC 001A  
                                   _WPUA 1F39                                     _WPUB 1F44  
                                   _WPUC 1F4F                                     _main 00EA  
                            main@spiData 002A                                     fsr0h 0005  
                                   fsr1h 0007                                     indf0 0000  
                                   fsr0l 0004                                     indf1 0001  
                                   fsr1l 0006                                     btemp 007E  
    __end_of_INT_DefaultInterruptHandler 025E              _INT_DefaultInterruptHandler 025A  
                                   start 0025          __end_of_INT_SetInterruptHandler 024E  
                __end_of_TMR0_Initialize 01CA                              ?_SPI1_Close 0070  
                                  ?_main 0070                                    _IOCAF 1F3F  
                                  _IOCBF 1F4A                                    _IOCCF 1F55  
                                  _IOCAN 1F3E                                    _IOCAP 1F3D  
                                  _IOCBN 1F49                                    _IOCBP 1F48  
                                  _IOCCN 1F54                                    _IOCCP 1F53  
                                  i1l140 0013                                    i1l153 0238  
                                  i1l145 0023                                    i1l146 0023  
                                  i1l149 0259                                    i1l159 025D  
                                  i1l351 01EF                                    i1l344 01DD  
                                  _OSCEN 0891                                    u40_20 01D6  
                                  u40_21 01D5                                    _TMR0H 059D  
                                  _TMR0L 059C                                    u45_20 000B  
                                  u45_21 000A                                    u38_20 0233  
                                  u46_20 000F                                    u38_21 0232  
                                  u46_21 000E                                    u39_20 01E9  
                                  u47_20 0017                                    u39_21 01E8  
                                  u47_21 0016                                    u48_20 001B  
                                  u48_21 001A                                    u49_20 001F  
                                  u49_21 001E                                    _TRISA 0012  
                                  _TRISB 0013                                    _TRISC 0014  
                       __end_of_TMR0_ISR 01DE                                    pclath 000A  
                        _tmr0PeriodCount 007B          SPI1_BufferWrite@bufferInputSize 0073  
                                  status 0003                                    wtemp0 007E  
                        __initialization 0027                          ??_spi_send_data 007B  
                           __end_of_main 010C              ?_INTERRUPT_InterruptManager 0070  
                                 ??_main 007B                                ??_INT_ISR 0070  
               __end_of_SPI1_BufferWrite 012C                                   _ANSELA 1F38  
                                 _ANSELB 1F43                                   _ANSELC 1F4E  
                                 _T0CON0 059E                                   _T0CON1 059F  
                                 _RB4PPS 1F1C                                   i1l1214 025A  
                                 _RB7PPS 1F1F                                   i1l1350 01EB  
                                 i1l1280 022C                                   i1l1352 0254  
                                 i1l1344 01DE                                   i1l1360 01CF  
                                 _ODCONA 1F3A                                   i1l1282 0233  
                                 i1l1354 0256                                   i1l1346 01E3  
                                 i1l1362 01D6                                   _ODCONB 1F45  
                                 _ODCONC 1F50                                   i1l1348 01E9  
                                 i1l1364 01DB                                   i1l1356 01CA  
                                 i1l1358 01CD                                   i1l1390 000F  
                                 i1l1392 0017                                   i1l1394 001B  
                                 i1l1386 0006                                   i1l1396 001F  
                                 i1l1388 000B                                   _INLVLA 1F3C  
                                 _INLVLB 1F47                                   _INLVLC 1F52  
                                 _INTPPS 1E90                                   _OSCFRQ 0893  
                      __end_of_SPI1_Open 00AC                                   _Timer0 019E  
                                 ___wmul 012C                         ?_TMR0_Initialize 0070  
                                 _pushed 002F                        ?_CLOCK_Initialize 0070  
                          ?_INT_CallBack 0070                       ??_CLOCK_Initialize 0070  
INT_SetInterruptHandler@InterruptHandler 0070                           _SPI1_IsRxReady 0000  
                         _SPI1_IsTxReady 01F0                        _SYSTEM_Initialize 0200  
                __end_of__initialization 003C                           _SPI1_ByteWrite 0000  
                     ?_SYSTEM_Initialize 0070                           __pcstackCOMMON 0070  
                           __pidataBANK0 0242                      ??_SYSTEM_Initialize 0072  
                              ?_TMR0_ISR 0070                        ??_SPI1_Initialize 0070  
                         ??_INT_CallBack 0070                       _spi1_configuration 0185  
                 __end_of_SPI1_IsTxReady 0200                __end_of_SYSTEM_Initialize 0210  
                             __pbssBANK0 002E                    _TMR0_OverflowCallback 0026  
            SPI1_BufferWrite@bufferInput 0075                               __pmaintext 00EA  
                                ?___wmul 0070                               ??_TMR0_ISR 0070  
                             __pintentry 0004                             ??_SPI1_Close 0070  
                                _INT_ISR 0254                                  _OSCTUNE 0892  
                                _SSP1ADD 018D                                  _SLRCONA 1F3B  
                                _SLRCONB 1F46                                  _SLRCONC 1F51  
                                _SSP1BUF 018C                          ?_SPI1_IsTxReady 0070  
                     __end_of_SPI1_Close 0261                                  __ptext1 0210  
                                __ptext2 014B                                  __ptext3 0040  
                                __ptext4 012C                                  __ptext5 01F0  
                                __ptext6 025E                                  __ptext7 010C  
                                __ptext8 0200                                  __ptext9 01B4  
                                _divider 0024                 ??_PIN_MANAGER_Initialize 0070  
                _INT_SetInterruptHandler 0248                     end_of_initialization 003C  
                      ?_SPI1_BufferWrite 0070                       ??_SPI1_BufferWrite 0073  
                   __end_of_INT_CallBack 0239                          _SPI1_BufferRead 0000  
                  __end_of_spi_send_data 0169                                _SPI1_Open 0040  
                              _SSP1SSPPS 1EC7                                _TMR0_Stop 0000  
                    _SPI1_BufferExchange 0000            _TMR0_OverflowCallbackRegister 0000  
                         _TMR0_PeriodGet 0000                           _TMR0_PeriodSet 0000  
                             _toggle_led 0210                        _TMR0_Deinitialize 0000  
                        _SPI1_Initialize 0239     __end_of_TMR0_DefaultOverflowCallback 01F0  
           _TMR0_DefaultOverflowCallback 01DE                           __end_of_Timer0 01B4  
           __end_of_INTERRUPT_Initialize 022C                               ?_SPI1_Open 0076  
                         __end_of___wmul 014B                ??_INT_SetInterruptHandler 0072  
                    start_initialization 0027             ?_INT_DefaultInterruptHandler 0070  
          ?_TMR0_DefaultOverflowCallback 0070                        spi_send_data@data 007A  
                               ??___wmul 0074                              __pdataBANK0 0020  
                       ??_SPI1_IsTxReady 0070                            _SPI1_ByteRead 0000  
                            __pbssCOMMON 007B                              ?_toggle_led 0070  
                              ___latbits 0001                                 ?_INT_ISR 0070  
                          __pcstackBANK0 002A                  __end_of_SPI1_Initialize 0242  
                              __pnvBANK0 0026               SPI1_BufferWrite@bufferData 0070  
                 _PIN_MANAGER_Initialize 00AC               SPI1_BufferWrite@bufferSize 0071  
                   SPI1_Open@returnValue 0079            ??_INT_DefaultInterruptHandler 0070  
                            ??_SPI1_Open 0077             ??_INTERRUPT_InterruptManager 0070  
                           _INT_CallBack 022C                                _led_state 007D  
                   _INTERRUPT_Initialize 021F                         _CLOCK_Initialize 024E  
                      ??_TMR0_Initialize 0070                           ___wmul@product 0074  
                               _LATAbits 0018                                 _PIE0bits 0716  
                               _PIE1bits 0717                                 _PIR0bits 070C  
                               _PIR1bits 070D                                main@F3781 0020  
                               _SSP1CON1 0190                                 _SSP1CON3 0192  
                               _TMR0_ISR 01CA                                 _SSP1STAT 018F  
         ??_TMR0_DefaultOverflowCallback 0070                        _SPI1_Deinitialize 0000  
                      ___wmul@multiplier 0070                                 _WPUCbits 1F4F  
                       ?_SPI1_Initialize 0070                    ?_INTERRUPT_Initialize 0070  
                    __end_of_SPI1_Client 0185                               _T0CON0bits 059E  
                               __ptext10 0239                                 __ptext11 00AC  
                               __ptext20 025A                                 __ptext12 021F  
                               __ptext13 0248                                 __ptext14 024E  
                               __ptext16 01CA                                 __ptext17 01DE  
                               __ptext18 0254                                 __ptext19 022C  
                           _SSP1CON1bits 0190                         _TMR0_MaxCountGet 0000  
                          _timerOverflow 002E                                 int$flags 007E  
     __end_of_INTERRUPT_InterruptManager 0025               _INTERRUPT_InterruptManager 0004  
                             _INTCONbits 000B                             ??_toggle_led 0070  
                   _INT_InterruptHandler 0028                              _SPI1_Client 0169  
                 ??_INTERRUPT_Initialize 0072                                 intlevel1 0000  
                ?_PIN_MANAGER_Initialize 0070                       __end_of_toggle_led 021F  
                        _TMR0_CounterGet 0000                          _TMR0_CounterSet 0000  
                       _SPI1_BufferWrite 010C                 ?_INT_SetInterruptHandler 0070  
                          _spi_send_data 014B                 __end_of_CLOCK_Initialize 0254  
                          __pstringtext1 0169                            __pstringtext2 0185  
                          __pstringtext3 019E                               _SPI1_Close 025E  
                             _SSP1DATPPS 1EC6                               _SSP1CLKPPS 1EC5  
                        _TMR0_Initialize 01B4                SPI1_IsTxReady@returnValue 0070  
                             _TMR0_Start 0000           __end_of_PIN_MANAGER_Initialize 00EA  
                SPI1_Open@spiConfigIndex 0076               __end_of_spi1_configuration 019E  
